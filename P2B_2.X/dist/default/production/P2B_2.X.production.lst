

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Apr 10 13:35:14 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 05/01/2024 GMT
    61                           ; 
    62                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4321 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95                           	psect	idataCOMRAM
    96   0010C4                     __pidataCOMRAM:
    97                           	callstack 0
    98                           
    99                           ;initializer for _flag_TTeclat
   100   0010C4  01                 	db	1
   101                           
   102                           ;initializer for _flag_TTeclat_menu
   103   0010C5  01                 	db	1
   104                           
   105                           	psect	idataBANK1
   106   00086C                     __pidataBANK1:
   107                           	callstack 0
   108                           
   109                           ;initializer for _marquesina_text
   110   00086C  31                 	db	49
   111   00086D  2E                 	db	46
   112   00086E  4C                 	db	76
   113   00086F  49                 	db	73
   114   000870  53                 	db	83
   115   000871  54                 	db	84
   116   000872  20                 	db	32
   117   000873  41                 	db	65
   118   000874  43                 	db	67
   119   000875  43                 	db	67
   120   000876  45                 	db	69
   121   000877  53                 	db	83
   122   000878  53                 	db	83
   123   000879  20                 	db	32
   124   00087A  50                 	db	80
   125   00087B  4F                 	db	79
   126   00087C  49                 	db	73
   127   00087D  4E                 	db	78
   128   00087E  54                 	db	84
   129   00087F  53                 	db	83
   130   000880  32                 	db	50
   131   000881  2E                 	db	46
   132   000882  53                 	db	83
   133   000883  48                 	db	72
   134   000884  4F                 	db	79
   135   000885  57                 	db	87
   136   000886  20                 	db	32
   137   000887  43                 	db	67
   138   000888  4F                 	db	79
   139   000889  4E                 	db	78
   140   00088A  4E                 	db	78
   141   00088B  2E                 	db	46
   142   00088C  20                 	db	32
   143   00088D  53                 	db	83
   144   00088E  54                 	db	84
   145   00088F  41                 	db	65
   146   000890  54                 	db	84
   147   000891  55                 	db	85
   148   000892  53                 	db	83
   149   000893  20                 	db	32
   150   000894  33                 	db	51
   151   000895  2E                 	db	46
   152   000896  43                 	db	67
   153   000897  48                 	db	72
   154   000898  41                 	db	65
   155   000899  4E                 	db	78
   156   00089A  47                 	db	71
   157   00089B  45                 	db	69
   158   00089C  20                 	db	32
   159   00089D  43                 	db	67
   160   00089E  48                 	db	72
   161   00089F  41                 	db	65
   162   0008A0  54                 	db	84
   163   0008A1  20                 	db	32
   164   0008A2  4D                 	db	77
   165   0008A3  4F                 	db	79
   166   0008A4  44                 	db	68
   167   0008A5  45                 	db	69
   168   0008A6  20                 	db	32
   169   0008A7  20                 	db	32
   170   0008A8  34                 	db	52
   171   0008A9  2E                 	db	46
   172   0008AA  45                 	db	69
   173   0008AB  4E                 	db	78
   174   0008AC  54                 	db	84
   175   0008AD  45                 	db	69
   176   0008AE  52                 	db	82
   177   0008AF  20                 	db	32
   178   0008B0  43                 	db	67
   179   0008B1  48                 	db	72
   180   0008B2  41                 	db	65
   181   0008B3  54                 	db	84
   182   0008B4  20                 	db	32
   183   0008B5  4D                 	db	77
   184   0008B6  4F                 	db	79
   185   0008B7  44                 	db	68
   186   0008B8  45                 	db	69
   187   0008B9  20                 	db	32
   188   0008BA  20                 	db	32
   189   0008BB  20                 	db	32
   190   0008BC  35                 	db	53
   191   0008BD  2E                 	db	46
   192   0008BE  4C                 	db	76
   193   0008BF  49                 	db	73
   194   0008C0  53                 	db	83
   195   0008C1  54                 	db	84
   196   0008C2  20                 	db	32
   197   0008C3  4C                 	db	76
   198   0008C4  41                 	db	65
   199   0008C5  53                 	db	83
   200   0008C6  54                 	db	84
   201   0008C7  20                 	db	32
   202   0008C8  4D                 	db	77
   203   0008C9  53                 	db	83
   204   0008CA  47                 	db	71
   205   0008CB  53                 	db	83
   206   0008CC  2E                 	db	46
   207   0008CD  20                 	db	32
   208   0008CE  20                 	db	32
   209   0008CF  20                 	db	32
   210   0008D0  36                 	db	54
   211   0008D1  2E                 	db	46
   212   0008D2  43                 	db	67
   213   0008D3  4C                 	db	76
   214   0008D4  4F                 	db	79
   215   0008D5  53                 	db	83
   216   0008D6  45                 	db	69
   217   0008D7  20                 	db	32
   218   0008D8  43                 	db	67
   219   0008D9  4F                 	db	79
   220   0008DA  4E                 	db	78
   221   0008DB  4E                 	db	78
   222   0008DC  45                 	db	69
   223   0008DD  43                 	db	67
   224   0008DE  54                 	db	84
   225   0008DF  49                 	db	73
   226   0008E0  4F                 	db	79
   227   0008E1  4E                 	db	78
   228   0008E2  20                 	db	32
   229   0008E3  20                 	db	32
   230                           
   231                           ;initializer for _matriu_teclat
   232   0008E4  31                 	db	49
   233   0008E5  00                 	db	0
   234   0008E6  00                 	db	0
   235   0008E7  00                 	db	0
   236   0008E8  00                 	db	0
   237   0008E9  00                 	db	0
   238   0008EA  41                 	db	65
   239   0008EB  42                 	db	66
   240   0008EC  43                 	db	67
   241   0008ED  32                 	db	50
   242   0008EE  00                 	db	0
   243   0008EF  00                 	db	0
   244   0008F0  44                 	db	68
   245   0008F1  45                 	db	69
   246   0008F2  46                 	db	70
   247   0008F3  33                 	db	51
   248   0008F4  00                 	db	0
   249   0008F5  00                 	db	0
   250   0008F6  47                 	db	71
   251   0008F7  48                 	db	72
   252   0008F8  49                 	db	73
   253   0008F9  34                 	db	52
   254   0008FA  00                 	db	0
   255   0008FB  00                 	db	0
   256   0008FC  4A                 	db	74
   257   0008FD  4B                 	db	75
   258   0008FE  4C                 	db	76
   259   0008FF  35                 	db	53
   260   000900  00                 	db	0
   261   000901  00                 	db	0
   262   000902  4D                 	db	77
   263   000903  4E                 	db	78
   264   000904  4F                 	db	79
   265   000905  36                 	db	54
   266   000906  00                 	db	0
   267   000907  00                 	db	0
   268   000908  50                 	db	80
   269   000909  51                 	db	81
   270   00090A  52                 	db	82
   271   00090B  53                 	db	83
   272   00090C  37                 	db	55
   273   00090D  00                 	db	0
   274   00090E  54                 	db	84
   275   00090F  55                 	db	85
   276   000910  56                 	db	86
   277   000911  38                 	db	56
   278   000912  00                 	db	0
   279   000913  00                 	db	0
   280   000914  57                 	db	87
   281   000915  58                 	db	88
   282   000916  59                 	db	89
   283   000917  5A                 	db	90
   284   000918  39                 	db	57
   285   000919  00                 	db	0
   286   00091A  2A                 	db	42
   287   00091B  00                 	db	0
   288   00091C  00                 	db	0
   289   00091D  00                 	db	0
   290   00091E  00                 	db	0
   291   00091F  00                 	db	0
   292   000920  30                 	db	48
   293   000921  20                 	db	32
   294   000922  00                 	db	0
   295   000923  00                 	db	0
   296   000924  00                 	db	0
   297   000925  00                 	db	0
   298                           
   299                           	psect	smallconst
   300   000200                     __psmallconst:
   301                           	callstack 0
   302   000200  00                 	db	0
   303   000201  02                 	db	2
   304   000202  04                 	db	4
   305   000203  06                 	db	6
   306   000204  08                 	db	8
   307   000205  0A                 	db	10
   308   000206  0C                 	db	12
   309   000207  0E                 	db	14
   310   000208  12                 	db	18
   311   000209  14                 	db	20
   312   00020A  16                 	db	22
   313   00020B  1A                 	db	26
   314   00020C  1C                 	db	28
   315   00020D                     __end_of_array_notas@TALTAVEU$F1459:
   316                           	callstack 0
   317   00020D  02                 	db	2
   318   00020E  04                 	db	4
   319   00020F  06                 	db	6
   320   000210  08                 	db	8
   321   000211  0A                 	db	10
   322   000212  0C                 	db	12
   323   000213  0E                 	db	14
   324   000214  12                 	db	18
   325   000215  14                 	db	20
   326   000216  16                 	db	22
   327   000217  1A                 	db	26
   328   000218  1C                 	db	28
   329   000219                     __end_of_array_notas@TALTAVEU$F1257:
   330                           	callstack 0
   331   000219  02                 	db	2
   332   00021A  04                 	db	4
   333   00021B  06                 	db	6
   334   00021C  08                 	db	8
   335   00021D  0A                 	db	10
   336   00021E  0C                 	db	12
   337   00021F  0E                 	db	14
   338   000220  12                 	db	18
   339   000221  14                 	db	20
   340   000222  16                 	db	22
   341   000223  1A                 	db	26
   342   000224  1C                 	db	28
   343   000225                     __end_of_array_notas@TALTAVEU$F537:
   344                           	callstack 0
   345   000225  02                 	db	2
   346   000226  04                 	db	4
   347   000227  06                 	db	6
   348   000228  08                 	db	8
   349   000229  0A                 	db	10
   350   00022A  0C                 	db	12
   351   00022B  0E                 	db	14
   352   00022C  12                 	db	18
   353   00022D  14                 	db	20
   354   00022E  16                 	db	22
   355   00022F  1A                 	db	26
   356   000230  1C                 	db	28
   357   000231                     __end_of_array_notas:
   358                           	callstack 0
   359   000000                     _EEDATA	set	4008
   360   000000                     _EECON2	set	4007
   361   000000                     _EEADR	set	4009
   362   000000                     _RCREG	set	4014
   363   000000                     _TXREG	set	4013
   364   000000                     _SPBRG	set	4015
   365   000000                     _BAUDCONbits	set	4024
   366   000000                     _ADCON0bits	set	4034
   367   000000                     _INTCONbits	set	4082
   368   000000                     _TMR0	set	4054
   369   000000                     _PORTCbits	set	3970
   370   000000                     _PORTEbits	set	3972
   371   000000                     _LATBbits	set	3978
   372   000000                     _LATEbits	set	3981
   373   000000                     _TRISBbits	set	3987
   374   000000                     _T0CON	set	4053
   375   000000                     _TMR0IF	set	32658
   376   000000                     _TRISCbits	set	3988
   377   000000                     _TRISEbits	set	3990
   378   000000                     _TRISAbits	set	3986
   379   000000                     _LATCbits	set	3979
   380   000000                     _OSCTUNE	set	3995
   381   000000                     _OSCCON	set	4051
   382   000000                     _PIR1bits	set	3998
   383   000000                     _RCSTA	set	4011
   384   000000                     _TXSTA	set	4012
   385   000000                     _ADCON2	set	4032
   386   000000                     _ADCON1	set	4033
   387   000000                     _ADCON0	set	4034
   388   000000                     _ADRESH	set	4036
   389   000000                     _SPBRGH	set	4016
   390   000000                     _EECON1bits	set	4006
   391   000231  43                 	db	67	;'C'
   392   000232  55                 	db	85	;'U'
   393   000233  52                 	db	82	;'R'
   394   000234  52                 	db	82	;'R'
   395   000235  45                 	db	69	;'E'
   396   000236  4E                 	db	78	;'N'
   397   000237  54                 	db	84	;'T'
   398   000238  20                 	db	32
   399   000239  54                 	db	84	;'T'
   400   00023A  49                 	db	73	;'I'
   401   00023B  4D                 	db	77	;'M'
   402   00023C  45                 	db	69	;'E'
   403   00023D  3A                 	db	58	;':'
   404   00023E  00                 	db	0
   405   00023F                     STR_3:
   406   00023F  55                 	db	85	;'U'
   407   000240  53                 	db	83	;'S'
   408   000241  45                 	db	69	;'E'
   409   000242  52                 	db	82	;'R'
   410   000243  20                 	db	32
   411   000244  4E                 	db	78	;'N'
   412   000245  41                 	db	65	;'A'
   413   000246  4D                 	db	77	;'M'
   414   000247  45                 	db	69	;'E'
   415   000248  3A                 	db	58	;':'
   416   000249  00                 	db	0
   417   00024A                     STR_1:
   418   00024A  44                 	db	68	;'D'
   419   00024B  45                 	db	69	;'E'
   420   00024C  53                 	db	83	;'S'
   421   00024D  54                 	db	84	;'T'
   422   00024E  2E                 	db	46
   423   00024F  50                 	db	80	;'P'
   424   000250  4F                 	db	79	;'O'
   425   000251  52                 	db	82	;'R'
   426   000252  54                 	db	84	;'T'
   427   000253  3A                 	db	58	;':'
   428   000254  00                 	db	0
   429   000255                     STR_2:
   430   000255  52                 	db	82	;'R'
   431   000256  45                 	db	69	;'E'
   432   000257  43                 	db	67	;'C'
   433   000258  2E                 	db	46
   434   000259  50                 	db	80	;'P'
   435   00025A  4F                 	db	79	;'O'
   436   00025B  52                 	db	82	;'R'
   437   00025C  54                 	db	84	;'T'
   438   00025D  3A                 	db	58	;':'
   439   00025E  00                 	db	0
   440   00025F  00                 	db	0	; dummy byte at the end
   441   000000                     
   442                           ; #config settings
   443                           
   444                           	psect	cinit
   445   000C78                     __pcinit:
   446                           	callstack 0
   447   000C78                     start_initialization:
   448                           	callstack 0
   449   000C78                     __initialization:
   450                           	callstack 0
   451                           
   452                           ; Initialize objects allocated to BANK1 (186 bytes)
   453                           ; load TBLPTR registers with __pidataBANK1
   454   000C78  0E6C               	movlw	low __pidataBANK1
   455   000C7A  6EF6               	movwf	tblptrl,c
   456   000C7C  0E08               	movlw	high __pidataBANK1
   457   000C7E  6EF7               	movwf	tblptrh,c
   458   000C80  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   459   000C82  6EF8               	movwf	tblptru,c
   460   000C84  EE01  F000         	lfsr	0,__pdataBANK1
   461   000C88  EE10 F0BA          	lfsr	1,186
   462   000C8C                     copy_data0:
   463   000C8C  0009               	tblrd		*+
   464   000C8E  CFF5 FFEE          	movff	tablat,postinc0
   465   000C92  50E5               	movf	postdec1,w,c
   466   000C94  50E1               	movf	fsr1l,w,c
   467   000C96  E1FA               	bnz	copy_data0
   468                           
   469                           ; Initialize objects allocated to COMRAM (2 bytes)
   470                           ; load TBLPTR registers with __pidataCOMRAM
   471   000C98  0EC4               	movlw	low __pidataCOMRAM
   472   000C9A  6EF6               	movwf	tblptrl,c
   473   000C9C  0E10               	movlw	high __pidataCOMRAM
   474   000C9E  6EF7               	movwf	tblptrh,c
   475   000CA0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   476   000CA2  6EF8               	movwf	tblptru,c
   477   000CA4  0009               	tblrd		*+	;fetch initializer
   478   000CA6  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   479   000CAA  0009               	tblrd		*+	;fetch initializer
   480   000CAC  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   481                           
   482                           ; Clear objects allocated to BANK0 (121 bytes)
   483   000CB0  EE00  F080         	lfsr	0,__pbssBANK0
   484   000CB4  0E79               	movlw	121
   485   000CB6                     clear_0:
   486   000CB6  6AEE               	clrf	postinc0,c
   487   000CB8  06E8               	decf	wreg,f,c
   488   000CBA  E1FD               	bnz	clear_0
   489                           
   490                           ; Clear objects allocated to COMRAM (99 bytes)
   491   000CBC  EE00  F001         	lfsr	0,__pbssCOMRAM
   492   000CC0  0E63               	movlw	99
   493   000CC2                     clear_1:
   494   000CC2  6AEE               	clrf	postinc0,c
   495   000CC4  06E8               	decf	wreg,f,c
   496   000CC6  E1FD               	bnz	clear_1
   497   000CC8                     end_of_initialization:
   498                           	callstack 0
   499   000CC8                     __end_of__initialization:
   500                           	callstack 0
   501   000CC8  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   502   000CCA  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   503   000CCC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   504   000CCE  6EF8               	movwf	tblptru,c
   505   000CD0  0100               	movlb	0
   506   000CD2  EFE2  F006         	goto	_main	;jump to C main() function
   507                           
   508                           	psect	bssCOMRAM
   509   000001                     __pbssCOMRAM:
   510                           	callstack 0
   511   000001                     _timer_tics_1s:
   512                           	callstack 0
   513   000001                     	ds	4
   514   000005                     _Tics:
   515                           	callstack 0
   516   000005                     	ds	4
   517   000009                     _j:
   518                           	callstack 0
   519   000009                     	ds	2
   520   00000B                     _n:
   521                           	callstack 0
   522   00000B                     	ds	1
   523   00000C                     _eeprom_adress:
   524                           	callstack 0
   525   00000C                     	ds	1
   526   00000D                     _valor_micro_ADRESH:
   527                           	callstack 0
   528   00000D                     	ds	1
   529   00000E                     _estat_tad_recording:
   530                           	callstack 0
   531   00000E                     	ds	1
   532   00000F                     _temps_5s:
   533                           	callstack 0
   534   00000F                     	ds	1
   535   000010                     _tiempo_nota_total:
   536                           	callstack 0
   537   000010                     	ds	1
   538   000011                     _tecla_premuda:
   539                           	callstack 0
   540   000011                     	ds	1
   541   000012                     _tiempo_nota:
   542                           	callstack 0
   543   000012                     	ds	1
   544   000013                     _TimerNotaTotal:
   545                           	callstack 0
   546   000013                     	ds	1
   547   000014                     _estat_altaveu:
   548                           	callstack 0
   549   000014                     	ds	1
   550   000015                     _nota:
   551                           	callstack 0
   552   000015                     	ds	1
   553   000016                     _flag_putstring_current:
   554                           	callstack 0
   555   000016                     	ds	1
   556   000017                     _minuts1_menu:
   557                           	callstack 0
   558   000017                     	ds	1
   559   000018                     _minuts0_menu:
   560                           	callstack 0
   561   000018                     	ds	1
   562   000019                     _segons1_menu:
   563                           	callstack 0
   564   000019                     	ds	1
   565   00001A                     _segons0_menu:
   566                           	callstack 0
   567   00001A                     	ds	1
   568   00001B                     _flag_CurrentTime:
   569                           	callstack 0
   570   00001B                     	ds	1
   571   00001C                     _digit_minuts_1:
   572                           	callstack 0
   573   00001C                     	ds	1
   574   00001D                     _digit_minuts_0:
   575                           	callstack 0
   576   00001D                     	ds	1
   577   00001E                     _digit_segons_1:
   578                           	callstack 0
   579   00001E                     	ds	1
   580   00001F                     _digit_segons_0:
   581                           	callstack 0
   582   00001F                     	ds	1
   583   000020                     _estat_ct:
   584                           	callstack 0
   585   000020                     	ds	1
   586   000021                     _flag:
   587                           	callstack 0
   588   000021                     	ds	1
   589   000022                     _flag_startmenu_sio:
   590                           	callstack 0
   591   000022                     	ds	1
   592   000023                     _estat_sio:
   593                           	callstack 0
   594   000023                     	ds	1
   595   000024                     _valor_ADRESH:
   596                           	callstack 0
   597   000024                     	ds	1
   598   000025                     _joy_direction:
   599                           	callstack 0
   600   000025                     	ds	1
   601   000026                     _estat_joy:
   602                           	callstack 0
   603   000026                     	ds	1
   604   000027                     _old_fila_matriu:
   605                           	callstack 0
   606   000027                     	ds	1
   607   000028                     _fila_matriu:
   608                           	callstack 0
   609   000028                     	ds	1
   610   000029                     _caracters_escrits:
   611                           	callstack 0
   612   000029                     	ds	1
   613   00002A                     _espera:
   614                           	callstack 0
   615   00002A                     	ds	1
   616   00002B                     _caracter_actual:
   617                           	callstack 0
   618   00002B                     	ds	1
   619   00002C                     _columna_polsada:
   620                           	callstack 0
   621   00002C                     	ds	1
   622   00002D                     _hi_ha_tecla:
   623                           	callstack 0
   624   00002D                     	ds	1
   625   00002E                     _fase_escombrat:
   626                           	callstack 0
   627   00002E                     	ds	1
   628   00002F                     _rows:
   629                           	callstack 0
   630   00002F                     	ds	1
   631   000030                     _estat_teclat:
   632                           	callstack 0
   633   000030                     	ds	1
   634   000031                     _caracters_escrits_menu:
   635                           	callstack 0
   636   000031                     	ds	1
   637   000032                     _flagAltaveu_teclat:
   638                           	callstack 0
   639   000032                     	ds	1
   640   000033                     _flag_preemenu:
   641                           	callstack 0
   642   000033                     	ds	1
   643   000034                     _tower_name_menu2:
   644                           	callstack 0
   645   000034                     	ds	1
   646   000035                     _tower_name_menu1:
   647                           	callstack 0
   648   000035                     	ds	1
   649   000036                     _tower_name_menu0:
   650                           	callstack 0
   651   000036                     	ds	1
   652   000037                     _posicio_caracter:
   653                           	callstack 0
   654   000037                     	ds	1
   655   000038                     _iteracio_char:
   656                           	callstack 0
   657   000038                     	ds	1
   658   000039                     _p:
   659                           	callstack 0
   660   000039                     	ds	1
   661   00003A                     _pos_marq:
   662                           	callstack 0
   663   00003A                     	ds	1
   664   00003B                     _flag_tad_sio:
   665                           	callstack 0
   666   00003B                     	ds	1
   667   00003C                     _flag_CurrentTime_menu:
   668                           	callstack 0
   669   00003C                     	ds	1
   670   00003D                     _time_recording_segons:
   671                           	callstack 0
   672   00003D                     	ds	1
   673   00003E                     _time_recording_minuts:
   674                           	callstack 0
   675   00003E                     	ds	1
   676   00003F                     _time_recording:
   677                           	callstack 0
   678   00003F                     	ds	1
   679   000040                     _timer_start_recording:
   680                           	callstack 0
   681   000040                     	ds	1
   682   000041                     _flag_towername:
   683                           	callstack 0
   684   000041                     	ds	1
   685   000042                     _flag_startmenu:
   686                           	callstack 0
   687   000042                     	ds	1
   688   000043                     _flag_show_current_time:
   689                           	callstack 0
   690   000043                     	ds	1
   691   000044                     _joystick_direction:
   692                           	callstack 0
   693   000044                     	ds	1
   694   000045                     _flag_putstring:
   695                           	callstack 0
   696   000045                     	ds	1
   697   000046                     _fila_matriu_menu:
   698                           	callstack 0
   699   000046                     	ds	1
   700   000047                     _tower_name_position:
   701                           	callstack 0
   702   000047                     	ds	1
   703   000048                     _flag_menu:
   704                           	callstack 0
   705   000048                     	ds	1
   706   000049                     _estat_menu:
   707                           	callstack 0
   708   000049                     	ds	1
   709   00004A                     _hi_ha_tecla_menu:
   710                           	callstack 0
   711   00004A                     	ds	1
   712   00004B                     _filamatriu_menu:
   713                           	callstack 0
   714   00004B                     	ds	1
   715   00004C                     _flag_modifyCurrentTime:
   716                           	callstack 0
   717   00004C                     	ds	1
   718   00004D                     _total_temps:
   719                           	callstack 0
   720   00004D                     	ds	1
   721   00004E                     _CurrentTimeComplet:
   722                           	callstack 0
   723   00004E                     	ds	1
   724   00004F                     _temps_8s:
   725                           	callstack 0
   726   00004F                     	ds	1
   727   000050                     _posicio_ensenyar_eeprom:
   728                           	callstack 0
   729   000050                     	ds	1
   730   000051                     _posicio_grabacio:
   731                           	callstack 0
   732   000051                     	ds	1
   733   000052                     _iterador_towername:
   734                           	callstack 0
   735   000052                     	ds	1
   736   000053                     _eedata:
   737                           	callstack 0
   738   000053                     	ds	1
   739   000054                     _joystick_down_counter:
   740                           	callstack 0
   741   000054                     	ds	1
   742   000055                     _fila_play_recording:
   743                           	callstack 0
   744   000055                     	ds	1
   745   000056                     _estat_string:
   746                           	callstack 0
   747   000056                     	ds	1
   748   000057                     _ColumnAct:
   749                           	callstack 0
   750   000057                     	ds	1
   751   000058                     _RowAct:
   752                           	callstack 0
   753   000058                     	ds	1
   754   000059                     _Columns:
   755                           	callstack 0
   756   000059                     	ds	1
   757   00005A                     _Rows:
   758                           	callstack 0
   759   00005A                     	ds	1
   760   00005B                     _TimerRecordingADC:
   761                           	callstack 0
   762   00005B                     	ds	1
   763   00005C                     _TimerMelody:
   764                           	callstack 0
   765   00005C                     	ds	1
   766   00005D                     _TimerTiempoNota:
   767                           	callstack 0
   768   00005D                     	ds	1
   769   00005E                     _Timer1S:
   770                           	callstack 0
   771   00005E                     	ds	1
   772   00005F                     _TimerRebots:
   773                           	callstack 0
   774   00005F                     	ds	1
   775   000060                     _timer_2s:
   776                           	callstack 0
   777   000060                     	ds	1
   778   000061                     _TimerMarquesina:
   779                           	callstack 0
   780   000061                     	ds	1
   781   000062                     _TimerRecording:
   782                           	callstack 0
   783   000062                     	ds	1
   784   000063                     _Timer:
   785                           	callstack 0
   786   000063                     	ds	1
   787                           
   788                           	psect	dataCOMRAM
   789   00007D                     __pdataCOMRAM:
   790                           	callstack 0
   791   00007D                     _flag_TTeclat:
   792                           	callstack 0
   793   00007D                     	ds	1
   794   00007E                     _flag_TTeclat_menu:
   795                           	callstack 0
   796   00007E                     	ds	1
   797                           
   798                           	psect	bssBANK0
   799   000080                     __pbssBANK0:
   800                           	callstack 0
   801   000080                     _Timers:
   802                           	callstack 0
   803   000080                     	ds	45
   804   0000AD                     _index:
   805                           	callstack 0
   806   0000AD                     	ds	16
   807   0000BD                     _current_time_recording:
   808                           	callstack 0
   809   0000BD                     	ds	5
   810   0000C2                     _current_tics_x:
   811                           	callstack 0
   812   0000C2                     	ds	4
   813   0000C6                     _tower_name:
   814                           	callstack 0
   815   0000C6                     	ds	4
   816   0000CA                     _timer_tics:
   817                           	callstack 0
   818   0000CA                     	ds	4
   819   0000CE                     _rec_port:
   820                           	callstack 0
   821   0000CE                     	ds	4
   822   0000D2                     _dest_port:
   823                           	callstack 0
   824   0000D2                     	ds	4
   825   0000D6                     _tower_name_menu:
   826                           	callstack 0
   827   0000D6                     	ds	4
   828   0000DA                     _user_name:
   829                           	callstack 0
   830   0000DA                     	ds	3
   831   0000DD                     _mostres:
   832                           	callstack 0
   833   0000DD                     	ds	2
   834   0000DF                     _temps_grabacio:
   835                           	callstack 0
   836   0000DF                     	ds	2
   837   0000E1                     _arrModifyCurrentTimeSegons:
   838                           	callstack 0
   839   0000E1                     	ds	2
   840   0000E3                     _arrModifyCurrentTimeMinuts:
   841                           	callstack 0
   842   0000E3                     	ds	2
   843   0000E5                     _mostres_micro:
   844                           	callstack 0
   845   0000E5                     	ds	2
   846   0000E7                     _flag_end_playing:
   847                           	callstack 0
   848   0000E7                     	ds	1
   849   0000E8                     _index0_playrec:
   850                           	callstack 0
   851   0000E8                     	ds	1
   852   0000E9                     _gravacio_reprduir_id:
   853                           	callstack 0
   854   0000E9                     	ds	1
   855   0000EA                     _estat_play:
   856                           	callstack 0
   857   0000EA                     	ds	1
   858   0000EB                     _eeprom_overflow:
   859                           	callstack 0
   860   0000EB                     	ds	1
   861   0000EC                     _index_data:
   862                           	callstack 0
   863   0000EC                     	ds	1
   864   0000ED                     _eeprom_read:
   865                           	callstack 0
   866   0000ED                     	ds	1
   867   0000EE                     _eeprom_adress_temp:
   868                           	callstack 0
   869   0000EE                     	ds	1
   870   0000EF                     _total_gravacions:
   871                           	callstack 0
   872   0000EF                     	ds	1
   873   0000F0                     _flag_index:
   874                           	callstack 0
   875   0000F0                     	ds	1
   876   0000F1                     _p1:
   877                           	callstack 0
   878   0000F1                     	ds	1
   879   0000F2                     _eeprom_data:
   880                           	callstack 0
   881   0000F2                     	ds	1
   882   0000F3                     _estat_eeprom:
   883                           	callstack 0
   884   0000F3                     	ds	1
   885   0000F4                     _index_gravacions:
   886                           	callstack 0
   887   0000F4                     	ds	1
   888   0000F5                     _TimerCurrentTime:
   889                           	callstack 0
   890   0000F5                     	ds	4
   891                           
   892                           	psect	dataBANK1
   893   000100                     __pdataBANK1:
   894                           	callstack 0
   895   000100                     _marquesina_text:
   896                           	callstack 0
   897   000100                     	ds	120
   898   000178                     _matriu_teclat:
   899                           	callstack 0
   900   000178                     	ds	66
   901                           
   902                           	psect	cstackBANK0
   903   0000F9                     __pcstackBANK0:
   904                           	callstack 0
   905   0000F9                     ??_motorTeclat:
   906                           
   907                           ; 1 bytes @ 0x0
   908   0000F9                     	ds	2
   909                           
   910                           	psect	cstackCOMRAM
   911   000064                     __pcstackCOMRAM:
   912                           	callstack 0
   913   000064                     ??_EscriuPrimeraOrdre:
   914   000064                     ??_CantaPartAlta:
   915   000064                     ??_CantaPartBaixa:
   916   000064                     ?_TI_GetTics:
   917                           	callstack 0
   918   000064                     TI_Init@counter:
   919                           	callstack 0
   920   000064                     TI_NewTimer@TimerHandle:
   921                           	callstack 0
   922   000064                     TI_ResetTics@TimerHandle:
   923                           	callstack 0
   924   000064                     getTowerName@p:
   925                           	callstack 0
   926   000064                     setFiles@rows:
   927                           	callstack 0
   928   000064                     TI_GetTics@TimerHandle:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x0
   932   000064                     	ds	1
   933   000065                     CantaPartAlta@c:
   934                           	callstack 0
   935   000065                     CantaPartBaixa@c:
   936                           	callstack 0
   937   000065                     EscriuPrimeraOrdre@ordre:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x1
   941   000065                     	ds	1
   942   000066                     TI_NewTimer@Comptador:
   943                           	callstack 0
   944   000066                     CantaIR@IR:
   945                           	callstack 0
   946   000066                     CantaData@Data:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x2
   950   000066                     	ds	1
   951   000067                     
   952                           ; 1 bytes @ 0x3
   953   000067                     	ds	1
   954   000068                     ??_TI_GetTics:
   955                           
   956                           ; 1 bytes @ 0x4
   957   000068                     	ds	4
   958   00006C                     TI_GetTics@CopiaTicsActual:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x8
   962   00006C                     	ds	4
   963   000070                     WaitForBusy@Busy:
   964                           	callstack 0
   965   000070                     Espera@ms:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0xC
   969   000070                     	ds	1
   970   000071                     LcGotoXY@Row:
   971                           	callstack 0
   972                           
   973                           ; 1 bytes @ 0xD
   974   000071                     	ds	1
   975   000072                     ??_Espera:
   976   000072                     ??_LcGotoXY:
   977                           
   978                           ; 1 bytes @ 0xE
   979   000072                     	ds	2
   980   000074                     _LcGotoXY$395:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x10
   984   000074                     	ds	2
   985   000076                     LcGotoXY@Fisics:
   986                           	callstack 0
   987                           
   988                           ; 2 bytes @ 0x12
   989   000076                     	ds	2
   990   000078                     LcGotoXY@Column:
   991                           	callstack 0
   992   000078                     Espera@Timer:
   993                           	callstack 0
   994                           
   995                           ; 1 bytes @ 0x14
   996   000078                     	ds	1
   997   000079                     LcInit@columns:
   998                           	callstack 0
   999   000079                     LcPutChar@c:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x15
  1003   000079                     	ds	1
  1004   00007A                     ??_writeCaracter:
  1005   00007A                     LcInit@rows:
  1006                           	callstack 0
  1007   00007A                     MyPutString@frase:
  1008                           	callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x16
  1011   00007A                     	ds	1
  1012   00007B                     ??_MyPutString:
  1013   00007B                     LcInit@i:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x17
  1017   00007B                     	ds	1
  1018   00007C                     
  1019                           ; 1 bytes @ 0x18
  1020   00007C                     	ds	1
  1021   00007D                     
  1022                           ; 1 bytes @ 0x19
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 57 in file "newmain.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1
  1042 ;;      Params:         0       0       0
  1043 ;;      Locals:         0       0       0
  1044 ;;      Temps:          0       0       0
  1045 ;;      Totals:         0       0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels required when called: 8
  1048 ;; This function calls:
  1049 ;;		_ADC_Init
  1050 ;;		_InitAltaveu
  1051 ;;		_InitconfOsc
  1052 ;;		_LcGotoXY
  1053 ;;		_LcInit
  1054 ;;		_Menu_Init
  1055 ;;		_TI_Init
  1056 ;;		_initEEPROM
  1057 ;;		_initMicro
  1058 ;;		_initTeclat
  1059 ;;		_motorJoy
  1060 ;;		_motorMenu
  1061 ;;		_motorTeclat
  1062 ;;		_sioInit
  1063 ;; This function is called by:
  1064 ;;		Startup code after reset
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           	psect	text0
  1069   000DC4                     __ptext0:
  1070                           	callstack 0
  1071   000DC4                     _main:
  1072                           	callstack 23
  1073                           
  1074                           ;newmain.c: 59:     InitconfOsc();
  1075                           
  1076                           ;incstack = 0
  1077   000DC4  EC57  F008         	call	_InitconfOsc	;wreg free
  1078                           
  1079                           ;newmain.c: 60:     TI_Init();
  1080   000DC8  ECC9  F007         	call	_TI_Init	;wreg free
  1081                           
  1082                           ;newmain.c: 61:     Menu_Init();
  1083   000DCC  EC63  F007         	call	_Menu_Init	;wreg free
  1084                           
  1085                           ;newmain.c: 62:     LcInit(2, 16);
  1086   000DD0  0E10               	movlw	16
  1087   000DD2  6E79               	movwf	LcInit@columns^0,c
  1088   000DD4  0E02               	movlw	2
  1089   000DD6  EC6A  F003         	call	_LcInit
  1090                           
  1091                           ;newmain.c: 63:     initTeclat();
  1092   000DDA  EC45  F007         	call	_initTeclat	;wreg free
  1093                           
  1094                           ;newmain.c: 64:     LcGotoXY(0,0);
  1095   000DDE  0E00               	movlw	0
  1096   000DE0  6E71               	movwf	LcGotoXY@Row^0,c
  1097   000DE2  0E00               	movlw	0
  1098   000DE4  EC93  F004         	call	_LcGotoXY
  1099                           
  1100                           ;newmain.c: 65:     ADC_Init();
  1101   000DE8  EC43  F008         	call	_ADC_Init	;wreg free
  1102                           
  1103                           ;newmain.c: 66:     InitAltaveu();
  1104   000DEC  ECDF  F007         	call	_InitAltaveu	;wreg free
  1105                           
  1106                           ;newmain.c: 67:     sioInit();
  1107   000DF0  EC04  F008         	call	_sioInit	;wreg free
  1108                           
  1109                           ;newmain.c: 68:     initMicro();
  1110   000DF4  EC21  F008         	call	_initMicro	;wreg free
  1111                           
  1112                           ;newmain.c: 69:     initEEPROM();
  1113   000DF8  EC52  F008         	call	_initEEPROM	;wreg free
  1114   000DFC                     l3358:
  1115                           
  1116                           ;newmain.c: 73:         motorMenu();
  1117   000DFC  EC24  F002         	call	_motorMenu	;wreg free
  1118                           
  1119                           ;newmain.c: 74:         motorTeclat();
  1120   000E00  EC30  F001         	call	_motorTeclat	;wreg free
  1121                           
  1122                           ;newmain.c: 75:         motorJoy();
  1123   000E04  EC9C  F005         	call	_motorJoy	;wreg free
  1124   000E08  D7F9               	goto	l3358
  1125   000E0A                     __end_of_main:
  1126                           	callstack 0
  1127                           
  1128 ;; *************** function _sioInit *****************
  1129 ;; Defined at:
  1130 ;;		line 11 in file "SIO.c"
  1131 ;; Parameters:    Size  Location     Type
  1132 ;;		None
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;		None
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1
  1144 ;;      Params:         0       0       0
  1145 ;;      Locals:         0       0       0
  1146 ;;      Temps:          0       0       0
  1147 ;;      Totals:         0       0       0
  1148 ;;Total ram usage:        0 bytes
  1149 ;; Hardware stack levels used: 1
  1150 ;; Hardware stack levels required when called: 2
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_main
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text1
  1159   001008                     __ptext1:
  1160                           	callstack 0
  1161   001008                     _sioInit:
  1162                           	callstack 28
  1163                           
  1164                           ;SIO.c: 12:     estat_sio = 0;
  1165                           
  1166                           ;incstack = 0
  1167   001008  0E00               	movlw	0
  1168   00100A  6E23               	movwf	_estat_sio^0,c
  1169                           
  1170                           ;SIO.c: 13:     flag_tad_sio = 0;
  1171   00100C  0E00               	movlw	0
  1172   00100E  6E3B               	movwf	_flag_tad_sio^0,c
  1173                           
  1174                           ;SIO.c: 15:     TRISCbits.TRISC6 = 1;
  1175   001010  8C94               	bsf	148,6,c	;volatile
  1176                           
  1177                           ;SIO.c: 16:     TRISCbits.TRISC7 = 1;
  1178   001012  8E94               	bsf	148,7,c	;volatile
  1179                           
  1180                           ;SIO.c: 18:     TXSTA = 0x26;
  1181   001014  0E26               	movlw	38
  1182   001016  6EAC               	movwf	172,c	;volatile
  1183                           
  1184                           ;SIO.c: 19:     RCSTA = 0x90;
  1185   001018  0E90               	movlw	144
  1186   00101A  6EAB               	movwf	171,c	;volatile
  1187                           
  1188                           ;SIO.c: 20:     BAUDCONbits.BRG16 = 1;
  1189   00101C  86B8               	bsf	184,3,c	;volatile
  1190                           
  1191                           ;SIO.c: 21:     SPBRG = 68;
  1192   00101E  0E44               	movlw	68
  1193   001020  6EAF               	movwf	175,c	;volatile
  1194                           
  1195                           ;SIO.c: 22:     SPBRGH = 0;
  1196   001022  0E00               	movlw	0
  1197   001024  6EB0               	movwf	176,c	;volatile
  1198   001026  0012               	return		;funcret
  1199   001028                     __end_of_sioInit:
  1200                           	callstack 0
  1201                           
  1202 ;; *************** function _motorTeclat *****************
  1203 ;; Defined at:
  1204 ;;		line 234 in file "TTECLAT.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1
  1218 ;;      Params:         0       0       0
  1219 ;;      Locals:         0       0       0
  1220 ;;      Temps:          0       2       0
  1221 ;;      Totals:         0       2       0
  1222 ;;Total ram usage:        2 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 7
  1225 ;; This function calls:
  1226 ;;		_Getflag_TTeclat
  1227 ;;		_TI_GetTics
  1228 ;;		_TI_ResetTics
  1229 ;;		_comprovaHiHaColumna
  1230 ;;		_saveTecla
  1231 ;;		_setFiles
  1232 ;;		_waitTeclaTreta
  1233 ;;		_writeCaracter
  1234 ;; This function is called by:
  1235 ;;		_main
  1236 ;; This function uses a non-reentrant model
  1237 ;;
  1238                           
  1239                           	psect	text2
  1240   000260                     __ptext2:
  1241                           	callstack 0
  1242   000260                     _motorTeclat:
  1243                           	callstack 23
  1244                           
  1245                           ;TTECLAT.c: 235:     switch (estat_teclat){
  1246                           
  1247                           ;incstack = 0
  1248   000260  D0D8               	goto	l3338
  1249   000262                     l3228:
  1250                           
  1251                           ;TTECLAT.c: 237:             rows = 0x01;
  1252   000262  0E01               	movlw	1
  1253   000264  6E2F               	movwf	_rows^0,c
  1254                           
  1255                           ;TTECLAT.c: 238:             setFiles(rows);
  1256   000266  502F               	movf	_rows^0,w,c
  1257   000268  EC05  F007         	call	_setFiles
  1258                           
  1259                           ;TTECLAT.c: 239:             estat_teclat = 1;
  1260   00026C  0E01               	movlw	1
  1261   00026E  6E30               	movwf	_estat_teclat^0,c
  1262                           
  1263                           ;TTECLAT.c: 240:             columna_polsada = comprovaHiHaColumna();
  1264   000270  ECB3  F007         	call	_comprovaHiHaColumna	;wreg free
  1265   000274  6E2C               	movwf	_columna_polsada^0,c
  1266                           
  1267                           ;TTECLAT.c: 241:             if (hi_ha_tecla == 1){
  1268   000276  042D               	decf	_hi_ha_tecla^0,w,c
  1269   000278  A4D8               	btfss	status,2,c
  1270   00027A  0012               	return	
  1271                           
  1272                           ;TTECLAT.c: 242:                 flagAltaveu_teclat = 1;
  1273   00027C  0E01               	movlw	1
  1274   00027E  6E32               	movwf	_flagAltaveu_teclat^0,c
  1275                           
  1276                           ;TTECLAT.c: 243:                 estat_teclat = 4;
  1277   000280  0E04               	movlw	4
  1278   000282  6E30               	movwf	_estat_teclat^0,c
  1279                           
  1280                           ;TTECLAT.c: 244:                 TI_ResetTics (TimerRebots);
  1281   000284  505F               	movf	_TimerRebots^0,w,c
  1282   000286  ECF2  F007         	call	_TI_ResetTics
  1283   00028A  0012               	return	
  1284   00028C                     l3242:
  1285                           
  1286                           ;TTECLAT.c: 248:             rows = 0x02;
  1287   00028C  0E02               	movlw	2
  1288   00028E  6E2F               	movwf	_rows^0,c
  1289                           
  1290                           ;TTECLAT.c: 249:             setFiles(rows);
  1291   000290  502F               	movf	_rows^0,w,c
  1292   000292  EC05  F007         	call	_setFiles
  1293                           
  1294                           ;TTECLAT.c: 250:             estat_teclat = 2;
  1295   000296  0E02               	movlw	2
  1296   000298  6E30               	movwf	_estat_teclat^0,c
  1297                           
  1298                           ;TTECLAT.c: 251:             columna_polsada = comprovaHiHaColumna();
  1299   00029A  ECB3  F007         	call	_comprovaHiHaColumna	;wreg free
  1300   00029E  6E2C               	movwf	_columna_polsada^0,c
  1301                           
  1302                           ;TTECLAT.c: 252:             if (hi_ha_tecla){
  1303   0002A0  502D               	movf	_hi_ha_tecla^0,w,c
  1304   0002A2  B4D8               	btfsc	status,2,c
  1305   0002A4  0012               	return	
  1306                           
  1307                           ;TTECLAT.c: 253:                 flagAltaveu_teclat = 1;
  1308   0002A6  0E01               	movlw	1
  1309   0002A8  6E32               	movwf	_flagAltaveu_teclat^0,c
  1310                           
  1311                           ;TTECLAT.c: 254:                 estat_teclat = 4;
  1312   0002AA  0E04               	movlw	4
  1313   0002AC  6E30               	movwf	_estat_teclat^0,c
  1314                           
  1315                           ;TTECLAT.c: 255:                 TI_ResetTics (TimerRebots);
  1316   0002AE  505F               	movf	_TimerRebots^0,w,c
  1317   0002B0  ECF2  F007         	call	_TI_ResetTics
  1318   0002B4  0012               	return	
  1319   0002B6                     l3256:
  1320                           
  1321                           ;TTECLAT.c: 260:             rows = 0x04;
  1322   0002B6  0E04               	movlw	4
  1323   0002B8  6E2F               	movwf	_rows^0,c
  1324                           
  1325                           ;TTECLAT.c: 261:             setFiles(rows);
  1326   0002BA  502F               	movf	_rows^0,w,c
  1327   0002BC  EC05  F007         	call	_setFiles
  1328                           
  1329                           ;TTECLAT.c: 262:             estat_teclat = 3;
  1330   0002C0  0E03               	movlw	3
  1331   0002C2  6E30               	movwf	_estat_teclat^0,c
  1332                           
  1333                           ;TTECLAT.c: 263:             columna_polsada = comprovaHiHaColumna();
  1334   0002C4  ECB3  F007         	call	_comprovaHiHaColumna	;wreg free
  1335   0002C8  6E2C               	movwf	_columna_polsada^0,c
  1336                           
  1337                           ;TTECLAT.c: 264:             if (hi_ha_tecla){
  1338   0002CA  502D               	movf	_hi_ha_tecla^0,w,c
  1339   0002CC  B4D8               	btfsc	status,2,c
  1340   0002CE  0012               	return	
  1341                           
  1342                           ;TTECLAT.c: 265:                 flagAltaveu_teclat = 1;
  1343   0002D0  0E01               	movlw	1
  1344   0002D2  6E32               	movwf	_flagAltaveu_teclat^0,c
  1345                           
  1346                           ;TTECLAT.c: 266:                 estat_teclat = 4;
  1347   0002D4  0E04               	movlw	4
  1348   0002D6  6E30               	movwf	_estat_teclat^0,c
  1349                           
  1350                           ;TTECLAT.c: 267:                 TI_ResetTics (TimerRebots);
  1351   0002D8  505F               	movf	_TimerRebots^0,w,c
  1352   0002DA  ECF2  F007         	call	_TI_ResetTics
  1353   0002DE  0012               	return	
  1354   0002E0                     l3270:
  1355                           
  1356                           ;TTECLAT.c: 272:             rows = 0x08;
  1357   0002E0  0E08               	movlw	8
  1358   0002E2  6E2F               	movwf	_rows^0,c
  1359                           
  1360                           ;TTECLAT.c: 273:             setFiles(rows);
  1361   0002E4  502F               	movf	_rows^0,w,c
  1362   0002E6  EC05  F007         	call	_setFiles
  1363                           
  1364                           ;TTECLAT.c: 274:             estat_teclat = 0;
  1365   0002EA  0E00               	movlw	0
  1366   0002EC  6E30               	movwf	_estat_teclat^0,c
  1367                           
  1368                           ;TTECLAT.c: 275:             columna_polsada = comprovaHiHaColumna();
  1369   0002EE  ECB3  F007         	call	_comprovaHiHaColumna	;wreg free
  1370   0002F2  6E2C               	movwf	_columna_polsada^0,c
  1371                           
  1372                           ;TTECLAT.c: 276:             if (hi_ha_tecla){
  1373   0002F4  502D               	movf	_hi_ha_tecla^0,w,c
  1374   0002F6  B4D8               	btfsc	status,2,c
  1375   0002F8  0012               	return	
  1376                           
  1377                           ;TTECLAT.c: 277:                 flagAltaveu_teclat = 1;
  1378   0002FA  0E01               	movlw	1
  1379   0002FC  6E32               	movwf	_flagAltaveu_teclat^0,c
  1380                           
  1381                           ;TTECLAT.c: 278:                 estat_teclat = 4;
  1382   0002FE  0E04               	movlw	4
  1383   000300  6E30               	movwf	_estat_teclat^0,c
  1384                           
  1385                           ;TTECLAT.c: 279:                 TI_ResetTics (TimerRebots);
  1386   000302  505F               	movf	_TimerRebots^0,w,c
  1387   000304  ECF2  F007         	call	_TI_ResetTics
  1388   000308  0012               	return	
  1389   00030A                     l3284:
  1390                           
  1391                           ;TTECLAT.c: 284:             flagAltaveu_teclat = 0;
  1392   00030A  0E00               	movlw	0
  1393   00030C  6E32               	movwf	_flagAltaveu_teclat^0,c
  1394                           
  1395                           ;TTECLAT.c: 285:             timer_tics = TI_GetTics (TimerRebots);
  1396   00030E  505F               	movf	_TimerRebots^0,w,c
  1397   000310  6E64               	movwf	TI_GetTics@TimerHandle^0,c
  1398   000312  6A65               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  1399   000314  6A66               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  1400   000316  6A67               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  1401   000318  ECBD  F006         	call	_TI_GetTics	;wreg free
  1402   00031C  C064  F0CA         	movff	?_TI_GetTics,_timer_tics
  1403   000320  C065  F0CB         	movff	?_TI_GetTics+1,_timer_tics+1
  1404   000324  C066  F0CC         	movff	?_TI_GetTics+2,_timer_tics+2
  1405   000328  C067  F0CD         	movff	?_TI_GetTics+3,_timer_tics+3
  1406                           
  1407                           ;TTECLAT.c: 286:             if (timer_tics >= 8){
  1408   00032C  0100               	movlb	0	; () banked
  1409   00032E  51CD               	movf	(_timer_tics+3)& (0+255),w,b
  1410   000330  11CC               	iorwf	(_timer_tics+2)& (0+255),w,b
  1411   000332  11CB               	iorwf	(_timer_tics+1)& (0+255),w,b
  1412   000334  E104               	bnz	u1980
  1413   000336  0E08               	movlw	8
  1414   000338  5DCA               	subwf	_timer_tics& (0+255),w,b
  1415   00033A  A0D8               	btfss	status,0,c
  1416   00033C  0012               	return	
  1417   00033E                     u1980:
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;TTECLAT.c: 287:                 if (hi_ha_tecla){
  1421   00033E  502D               	movf	_hi_ha_tecla^0,w,c
  1422   000340  B4D8               	btfsc	status,2,c
  1423   000342  D012               	goto	l3296
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;TTECLAT.c: 288:                     estat_teclat = 5;
  1427   000344  0E05               	movlw	5
  1428   000346  6E30               	movwf	_estat_teclat^0,c
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;TTECLAT.c: 289:                     timer_tics_1s = TI_GetTics (Timer1S);
  1432   000348  505E               	movf	_Timer1S^0,w,c
  1433   00034A  6E64               	movwf	TI_GetTics@TimerHandle^0,c
  1434   00034C  6A65               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  1435   00034E  6A66               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  1436   000350  6A67               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  1437   000352  ECBD  F006         	call	_TI_GetTics	;wreg free
  1438   000356  C064  F001         	movff	?_TI_GetTics,_timer_tics_1s
  1439   00035A  C065  F002         	movff	?_TI_GetTics+1,_timer_tics_1s+1
  1440   00035E  C066  F003         	movff	?_TI_GetTics+2,_timer_tics_1s+2
  1441   000362  C067  F004         	movff	?_TI_GetTics+3,_timer_tics_1s+3
  1442                           
  1443                           ;TTECLAT.c: 291:                 }else{
  1444   000366  0012               	return	
  1445   000368                     l3296:
  1446                           
  1447                           ; BSR set to: 0
  1448                           ;TTECLAT.c: 292:                     estat_teclat = 0;
  1449   000368  0E00               	movlw	0
  1450   00036A  6E30               	movwf	_estat_teclat^0,c
  1451   00036C  0012               	return	
  1452   00036E                     l3298:
  1453                           
  1454                           ;TTECLAT.c: 298:             waitTeclaTreta();
  1455   00036E  EC3A  F008         	call	_waitTeclaTreta	;wreg free
  1456                           
  1457                           ;TTECLAT.c: 299:             TI_ResetTics (Timer1S);
  1458   000372  505E               	movf	_Timer1S^0,w,c
  1459   000374  ECF2  F007         	call	_TI_ResetTics
  1460                           
  1461                           ;TTECLAT.c: 300:         break;
  1462   000378  0012               	return	
  1463   00037A                     l3302:
  1464                           
  1465                           ;TTECLAT.c: 304:             if (timer_tics_1s >= 4000){
  1466   00037A  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1467   00037C  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1468   00037E  E106               	bnz	u2000
  1469   000380  0EA0               	movlw	160
  1470   000382  5C01               	subwf	_timer_tics_1s^0,w,c
  1471   000384  0E0F               	movlw	15
  1472   000386  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1473   000388  A0D8               	btfss	status,0,c
  1474   00038A  D002               	goto	l3306
  1475   00038C                     u2000:
  1476                           
  1477                           ;TTECLAT.c: 305:                 caracter_actual = 0;
  1478   00038C  0E00               	movlw	0
  1479   00038E  6E2B               	movwf	_caracter_actual^0,c
  1480   000390                     l3306:
  1481                           
  1482                           ;TTECLAT.c: 308:             saveTecla();
  1483   000390  ECED  F002         	call	_saveTecla	;wreg free
  1484                           
  1485                           ;TTECLAT.c: 309:             estat_teclat = 7;
  1486   000394  0E07               	movlw	7
  1487   000396  6E30               	movwf	_estat_teclat^0,c
  1488                           
  1489                           ;TTECLAT.c: 310:             break;
  1490   000398  0012               	return	
  1491   00039A                     l3310:
  1492                           
  1493                           ;TTECLAT.c: 313:             if(old_fila_matriu != fila_matriu || timer_tics_1s > 4000){
  1494   00039A  5028               	movf	_fila_matriu^0,w,c
  1495   00039C  1827               	xorwf	_old_fila_matriu^0,w,c
  1496   00039E  A4D8               	btfss	status,2,c
  1497   0003A0  D009               	goto	u2020
  1498   0003A2  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1499   0003A4  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1500   0003A6  E106               	bnz	u2020
  1501   0003A8  0EA1               	movlw	161
  1502   0003AA  5C01               	subwf	_timer_tics_1s^0,w,c
  1503   0003AC  0E0F               	movlw	15
  1504   0003AE  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1505   0003B0  A0D8               	btfss	status,0,c
  1506   0003B2  D01A               	goto	l3322
  1507   0003B4                     u2020:
  1508                           
  1509                           ;TTECLAT.c: 314:                 tower_name[caracters_escrits] = matriu_teclat[fila_matr
      +                          iu][caracter_actual-1];
  1510   0003B4  5028               	movf	_fila_matriu^0,w,c
  1511   0003B6  0D06               	mullw	6
  1512   0003B8  0E77               	movlw	low (_matriu_teclat+65535)
  1513   0003BA  24F3               	addwf	243,w,c
  1514   0003BC  0100               	movlb	0	; () banked
  1515   0003BE  6FF9               	movwf	??_motorTeclat& (0+255),b
  1516   0003C0  0E01               	movlw	high (_matriu_teclat+65535)
  1517   0003C2  20F4               	addwfc	prodh,w,c
  1518   0003C4  6FFA               	movwf	(??_motorTeclat+1)& (0+255),b
  1519   0003C6  502B               	movf	_caracter_actual^0,w,c
  1520   0003C8  25F9               	addwf	??_motorTeclat& (0+255),w,b
  1521   0003CA  6ED9               	movwf	fsr2l,c
  1522   0003CC  0E00               	movlw	0
  1523   0003CE  21FA               	addwfc	(??_motorTeclat+1)& (0+255),w,b
  1524   0003D0  6EDA               	movwf	fsr2h,c
  1525   0003D2  5029               	movf	_caracters_escrits^0,w,c
  1526   0003D4  0FC6               	addlw	low _tower_name
  1527   0003D6  6EE1               	movwf	fsr1l,c
  1528   0003D8  6AE2               	clrf	fsr1h,c
  1529   0003DA  CFDF FFE7          	movff	indf2,indf1
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;TTECLAT.c: 316:                 caracters_escrits++;
  1533   0003DE  2A29               	incf	_caracters_escrits^0,f,c
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;TTECLAT.c: 317:                 caracter_actual = 0;
  1537   0003E0  0E00               	movlw	0
  1538   0003E2  6E2B               	movwf	_caracter_actual^0,c
  1539                           
  1540                           ; BSR set to: 0
  1541                           ;TTECLAT.c: 318:                 caracters_escrits_menu = caracters_escrits;
  1542   0003E4  C029  F031         	movff	_caracters_escrits,_caracters_escrits_menu
  1543   0003E8                     l3322:
  1544                           
  1545                           ;TTECLAT.c: 320:             flag_TTeclat = Getflag_TTeclat();
  1546   0003E8  EC5C  F008         	call	_Getflag_TTeclat	;wreg free
  1547   0003EC  6E7D               	movwf	_flag_TTeclat^0,c
  1548                           
  1549                           ;TTECLAT.c: 321:             if(flag_TTeclat){
  1550   0003EE  507D               	movf	_flag_TTeclat^0,w,c
  1551   0003F0  A4D8               	btfss	status,2,c
  1552                           
  1553                           ;TTECLAT.c: 322:                 writeCaracter();
  1554   0003F2  ECD7  F003         	call	_writeCaracter	;wreg free
  1555                           
  1556                           ;TTECLAT.c: 324:             estat_teclat = 0;
  1557   0003F6  0E00               	movlw	0
  1558   0003F8  6E30               	movwf	_estat_teclat^0,c
  1559                           
  1560                           ;TTECLAT.c: 325:             old_fila_matriu = fila_matriu;
  1561   0003FA  C028  F027         	movff	_fila_matriu,_old_fila_matriu
  1562                           
  1563                           ;TTECLAT.c: 326:             if (flag_preemenu == 1){
  1564   0003FE  0433               	decf	_flag_preemenu^0,w,c
  1565   000400  A4D8               	btfss	status,2,c
  1566   000402  0012               	return	
  1567                           
  1568                           ;TTECLAT.c: 327:                 estat_teclat = 0;
  1569   000404  0E00               	movlw	0
  1570   000406  6E30               	movwf	_estat_teclat^0,c
  1571                           
  1572                           ;TTECLAT.c: 328:                 fila_matriu = 12;
  1573   000408  0E0C               	movlw	12
  1574   00040A  6E28               	movwf	_fila_matriu^0,c
  1575                           
  1576                           ;TTECLAT.c: 329:                 flag_preemenu = 0;
  1577   00040C  0E00               	movlw	0
  1578   00040E  6E33               	movwf	_flag_preemenu^0,c
  1579   000410  0012               	return	
  1580   000412                     l3338:
  1581   000412  5030               	movf	_estat_teclat^0,w,c
  1582                           
  1583                           ; Switch size 1, requested type "simple"
  1584                           ; Number of cases is 9, Range of values is 0 to 8
  1585                           ; switch strategies available:
  1586                           ; Name         Instructions Cycles
  1587                           ; simple_byte           28    15 (average)
  1588                           ;	Chosen strategy is simple_byte
  1589   000414  0A00               	xorlw	0	; case 0
  1590   000416  B4D8               	btfsc	status,2,c
  1591   000418  D724               	goto	l3228
  1592   00041A  0A01               	xorlw	1	; case 1
  1593   00041C  B4D8               	btfsc	status,2,c
  1594   00041E  D736               	goto	l3242
  1595   000420  0A03               	xorlw	3	; case 2
  1596   000422  B4D8               	btfsc	status,2,c
  1597   000424  D748               	goto	l3256
  1598   000426  0A01               	xorlw	1	; case 3
  1599   000428  B4D8               	btfsc	status,2,c
  1600   00042A  D75A               	goto	l3270
  1601   00042C  0A07               	xorlw	7	; case 4
  1602   00042E  B4D8               	btfsc	status,2,c
  1603   000430  D76C               	goto	l3284
  1604   000432  0A01               	xorlw	1	; case 5
  1605   000434  B4D8               	btfsc	status,2,c
  1606   000436  D79B               	goto	l3298
  1607   000438  0A03               	xorlw	3	; case 6
  1608   00043A  B4D8               	btfsc	status,2,c
  1609   00043C  D79E               	goto	l3302
  1610   00043E  0A01               	xorlw	1	; case 7
  1611   000440  B4D8               	btfsc	status,2,c
  1612   000442  D7AB               	goto	l3310
  1613   000444  0A0F               	xorlw	15	; case 8
  1614   000446  0012               	return	
  1615   000448                     __end_of_motorTeclat:
  1616                           	callstack 0
  1617                           
  1618 ;; *************** function _writeCaracter *****************
  1619 ;; Defined at:
  1620 ;;		line 197 in file "TTECLAT.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;		None
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1
  1634 ;;      Params:         0       0       0
  1635 ;;      Locals:         0       0       0
  1636 ;;      Temps:          2       0       0
  1637 ;;      Totals:         2       0       0
  1638 ;;Total ram usage:        2 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 6
  1641 ;; This function calls:
  1642 ;;		_LcGotoXY
  1643 ;;		_LcPutChar
  1644 ;;		_TI_GetTics
  1645 ;; This function is called by:
  1646 ;;		_motorTeclat
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text3
  1651   0007AE                     __ptext3:
  1652                           	callstack 0
  1653   0007AE                     _writeCaracter:
  1654                           	callstack 23
  1655                           
  1656                           ;TTECLAT.c: 198:     timer_tics_1s = TI_GetTics (Timer1S);
  1657                           
  1658                           ;incstack = 0
  1659   0007AE  505E               	movf	_Timer1S^0,w,c
  1660   0007B0  6E64               	movwf	TI_GetTics@TimerHandle^0,c
  1661   0007B2  6A65               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  1662   0007B4  6A66               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  1663   0007B6  6A67               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  1664   0007B8  ECBD  F006         	call	_TI_GetTics	;wreg free
  1665   0007BC  C064  F001         	movff	?_TI_GetTics,_timer_tics_1s
  1666   0007C0  C065  F002         	movff	?_TI_GetTics+1,_timer_tics_1s+1
  1667   0007C4  C066  F003         	movff	?_TI_GetTics+2,_timer_tics_1s+2
  1668   0007C8  C067  F004         	movff	?_TI_GetTics+3,_timer_tics_1s+3
  1669                           
  1670                           ;TTECLAT.c: 200:     if (timer_tics_1s < 4000){
  1671   0007CC  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1672   0007CE  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1673   0007D0  E10B               	bnz	l2874
  1674   0007D2  0EA0               	movlw	160
  1675   0007D4  5C01               	subwf	_timer_tics_1s^0,w,c
  1676   0007D6  0E0F               	movlw	15
  1677   0007D8  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1678   0007DA  B0D8               	btfsc	status,0,c
  1679   0007DC  D005               	goto	l2874
  1680                           
  1681                           ;TTECLAT.c: 201:         LcGotoXY(caracters_escrits, 1);
  1682   0007DE  0E01               	movlw	1
  1683   0007E0  6E71               	movwf	LcGotoXY@Row^0,c
  1684   0007E2  5029               	movf	_caracters_escrits^0,w,c
  1685   0007E4  EC93  F004         	call	_LcGotoXY
  1686   0007E8                     l2874:
  1687                           
  1688                           ;TTECLAT.c: 205:     if(timer_tics_1s > 4000){
  1689   0007E8  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1690   0007EA  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1691   0007EC  E106               	bnz	u1670
  1692   0007EE  0EA1               	movlw	161
  1693   0007F0  5C01               	subwf	_timer_tics_1s^0,w,c
  1694   0007F2  0E0F               	movlw	15
  1695   0007F4  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1696   0007F6  A0D8               	btfss	status,0,c
  1697   0007F8  D003               	goto	l2880
  1698   0007FA                     u1670:
  1699                           
  1700                           ;TTECLAT.c: 206:         caracters_escrits++;
  1701   0007FA  2A29               	incf	_caracters_escrits^0,f,c
  1702                           
  1703                           ;TTECLAT.c: 207:         caracters_escrits_menu = caracters_escrits;
  1704   0007FC  C029  F031         	movff	_caracters_escrits,_caracters_escrits_menu
  1705   000800                     l2880:
  1706                           
  1707                           ;TTECLAT.c: 210:     if(matriu_teclat[fila_matriu][caracter_actual] == '\0'){
  1708   000800  5028               	movf	_fila_matriu^0,w,c
  1709   000802  0D06               	mullw	6
  1710   000804  0E78               	movlw	low _matriu_teclat
  1711   000806  24F3               	addwf	243,w,c
  1712   000808  6E7A               	movwf	??_writeCaracter^0,c
  1713   00080A  0E01               	movlw	high _matriu_teclat
  1714   00080C  20F4               	addwfc	prodh,w,c
  1715   00080E  6E7B               	movwf	(??_writeCaracter+1)^0,c
  1716   000810  502B               	movf	_caracter_actual^0,w,c
  1717   000812  247A               	addwf	??_writeCaracter^0,w,c
  1718   000814  6ED9               	movwf	fsr2l,c
  1719   000816  0E00               	movlw	0
  1720   000818  207B               	addwfc	(??_writeCaracter+1)^0,w,c
  1721   00081A  6EDA               	movwf	fsr2h,c
  1722   00081C  50DF               	movf	indf2,w,c
  1723   00081E  A4D8               	btfss	status,2,c
  1724   000820  D002               	goto	l2884
  1725                           
  1726                           ;TTECLAT.c: 211:         caracter_actual = 1;
  1727   000822  0E01               	movlw	1
  1728   000824  6E2B               	movwf	_caracter_actual^0,c
  1729   000826                     l2884:
  1730                           
  1731                           ;TTECLAT.c: 213:     if(caracters_escrits == 4){
  1732   000826  0E04               	movlw	4
  1733   000828  1829               	xorwf	_caracters_escrits^0,w,c
  1734   00082A  A4D8               	btfss	status,2,c
  1735   00082C  D008               	goto	l2890
  1736                           
  1737                           ;TTECLAT.c: 214:         caracters_escrits_menu = 0;
  1738   00082E  0E00               	movlw	0
  1739   000830  6E31               	movwf	_caracters_escrits_menu^0,c
  1740                           
  1741                           ;TTECLAT.c: 215:         caracters_escrits = -1;
  1742   000832  6829               	setf	_caracters_escrits^0,c
  1743                           
  1744                           ;TTECLAT.c: 216:         flag_preemenu = 1;
  1745   000834  0E01               	movlw	1
  1746   000836  6E33               	movwf	_flag_preemenu^0,c
  1747                           
  1748                           ;TTECLAT.c: 217:         espera = 1;
  1749   000838  0E01               	movlw	1
  1750   00083A  6E2A               	movwf	_espera^0,c
  1751                           
  1752                           ;TTECLAT.c: 218:     }else{
  1753   00083C  D014               	goto	l2894
  1754   00083E                     l2890:
  1755                           
  1756                           ;TTECLAT.c: 219:         if(caracters_escrits < 4){
  1757   00083E  0E04               	movlw	4
  1758   000840  6029               	cpfslt	_caracters_escrits^0,c
  1759   000842  D011               	goto	l2894
  1760                           
  1761                           ;TTECLAT.c: 220:             LcPutChar(matriu_teclat[fila_matriu][caracter_actual]);
  1762   000844  5028               	movf	_fila_matriu^0,w,c
  1763   000846  0D06               	mullw	6
  1764   000848  0E78               	movlw	low _matriu_teclat
  1765   00084A  24F3               	addwf	243,w,c
  1766   00084C  6E7A               	movwf	??_writeCaracter^0,c
  1767   00084E  0E01               	movlw	high _matriu_teclat
  1768   000850  20F4               	addwfc	prodh,w,c
  1769   000852  6E7B               	movwf	(??_writeCaracter+1)^0,c
  1770   000854  502B               	movf	_caracter_actual^0,w,c
  1771   000856  247A               	addwf	??_writeCaracter^0,w,c
  1772   000858  6ED9               	movwf	fsr2l,c
  1773   00085A  0E00               	movlw	0
  1774   00085C  207B               	addwfc	(??_writeCaracter+1)^0,w,c
  1775   00085E  6EDA               	movwf	fsr2h,c
  1776   000860  50DF               	movf	indf2,w,c
  1777   000862  EC20  F005         	call	_LcPutChar
  1778   000866                     l2894:
  1779                           
  1780                           ;TTECLAT.c: 223:     estat_teclat = 4;
  1781   000866  0E04               	movlw	4
  1782   000868  6E30               	movwf	_estat_teclat^0,c
  1783   00086A  0012               	return		;funcret
  1784   00086C                     __end_of_writeCaracter:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _waitTeclaTreta *****************
  1788 ;; Defined at:
  1789 ;;		line 228 in file "TTECLAT.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;		None
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1
  1803 ;;      Params:         0       0       0
  1804 ;;      Locals:         0       0       0
  1805 ;;      Temps:          0       0       0
  1806 ;;      Totals:         0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 2
  1810 ;; This function calls:
  1811 ;;		Nothing
  1812 ;; This function is called by:
  1813 ;;		_motorTeclat
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text4
  1818   001074                     __ptext4:
  1819                           	callstack 0
  1820   001074                     _waitTeclaTreta:
  1821                           	callstack 27
  1822                           
  1823                           ;TTECLAT.c: 229:     if(PORTCbits.RC2 == 0 && PORTCbits.RC0 == 0 && PORTCbits.RC4 == 0){
  1824                           
  1825                           ;incstack = 0
  1826   001074  B482               	btfsc	130,2,c	;volatile
  1827   001076  0012               	return	
  1828   001078  B082               	btfsc	130,0,c	;volatile
  1829   00107A  0012               	return	
  1830   00107C  B882               	btfsc	130,4,c	;volatile
  1831   00107E  0012               	return	
  1832                           
  1833                           ;TTECLAT.c: 230:         estat_teclat = 6;
  1834   001080  0E06               	movlw	6
  1835   001082  6E30               	movwf	_estat_teclat^0,c
  1836   001084  0012               	return		;funcret
  1837   001086                     __end_of_waitTeclaTreta:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _setFiles *****************
  1841 ;; Defined at:
  1842 ;;		line 68 in file "TTECLAT.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  rows            1    wreg     unsigned char 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  rows            1    0[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1
  1856 ;;      Params:         0       0       0
  1857 ;;      Locals:         1       0       0
  1858 ;;      Temps:          0       0       0
  1859 ;;      Totals:         1       0       0
  1860 ;;Total ram usage:        1 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 2
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_motorTeclat
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text5
  1871   000E0A                     __ptext5:
  1872                           	callstack 0
  1873   000E0A                     _setFiles:
  1874                           	callstack 27
  1875                           
  1876                           ;incstack = 0
  1877                           ;setFiles@rows stored from wreg
  1878   000E0A  6E64               	movwf	setFiles@rows^0,c
  1879                           
  1880                           ;TTECLAT.c: 70:     if (rows == 0x01){
  1881   000E0C  0464               	decf	setFiles@rows^0,w,c
  1882   000E0E  A4D8               	btfss	status,2,c
  1883   000E10  D004               	goto	l2754
  1884                           
  1885                           ;TTECLAT.c: 71:         LATCbits.LATC1 = 1;
  1886   000E12  828B               	bsf	139,1,c	;volatile
  1887                           
  1888                           ;TTECLAT.c: 72:         LATEbits.LATE1 = 0;
  1889   000E14  928D               	bcf	141,1,c	;volatile
  1890                           
  1891                           ;TTECLAT.c: 73:         LATCbits.LATC5 = 0;
  1892   000E16  9A8B               	bcf	139,5,c	;volatile
  1893                           
  1894                           ;TTECLAT.c: 74:         LATCbits.LATC3 = 0;
  1895   000E18  968B               	bcf	139,3,c	;volatile
  1896   000E1A                     l2754:
  1897                           
  1898                           ;TTECLAT.c: 76:     if (rows == 0x02){
  1899   000E1A  0E02               	movlw	2
  1900   000E1C  1864               	xorwf	setFiles@rows^0,w,c
  1901   000E1E  A4D8               	btfss	status,2,c
  1902   000E20  D004               	goto	l2758
  1903                           
  1904                           ;TTECLAT.c: 77:         LATCbits.LATC1 = 0;
  1905   000E22  928B               	bcf	139,1,c	;volatile
  1906                           
  1907                           ;TTECLAT.c: 78:         LATEbits.LATE1 = 1;
  1908   000E24  828D               	bsf	141,1,c	;volatile
  1909                           
  1910                           ;TTECLAT.c: 79:         LATCbits.LATC5 = 0;
  1911   000E26  9A8B               	bcf	139,5,c	;volatile
  1912                           
  1913                           ;TTECLAT.c: 80:         LATCbits.LATC3 = 0;
  1914   000E28  968B               	bcf	139,3,c	;volatile
  1915   000E2A                     l2758:
  1916                           
  1917                           ;TTECLAT.c: 82:     if (rows == 0x04){
  1918   000E2A  0E04               	movlw	4
  1919   000E2C  1864               	xorwf	setFiles@rows^0,w,c
  1920   000E2E  A4D8               	btfss	status,2,c
  1921   000E30  D004               	goto	l2762
  1922                           
  1923                           ;TTECLAT.c: 83:         LATCbits.LATC1 = 0;
  1924   000E32  928B               	bcf	139,1,c	;volatile
  1925                           
  1926                           ;TTECLAT.c: 84:         LATEbits.LATE1 = 0;
  1927   000E34  928D               	bcf	141,1,c	;volatile
  1928                           
  1929                           ;TTECLAT.c: 85:         LATCbits.LATC5 = 1;
  1930   000E36  8A8B               	bsf	139,5,c	;volatile
  1931                           
  1932                           ;TTECLAT.c: 86:         LATCbits.LATC3 = 0;
  1933   000E38  968B               	bcf	139,3,c	;volatile
  1934   000E3A                     l2762:
  1935                           
  1936                           ;TTECLAT.c: 88:     if (rows == 0x08){
  1937   000E3A  0E08               	movlw	8
  1938   000E3C  1864               	xorwf	setFiles@rows^0,w,c
  1939   000E3E  A4D8               	btfss	status,2,c
  1940   000E40  0012               	return	
  1941                           
  1942                           ;TTECLAT.c: 89:         LATCbits.LATC1 = 0;
  1943   000E42  928B               	bcf	139,1,c	;volatile
  1944                           
  1945                           ;TTECLAT.c: 90:         LATEbits.LATE1 = 0;
  1946   000E44  928D               	bcf	141,1,c	;volatile
  1947                           
  1948                           ;TTECLAT.c: 91:         LATCbits.LATC5 = 0;
  1949   000E46  9A8B               	bcf	139,5,c	;volatile
  1950                           
  1951                           ;TTECLAT.c: 92:         LATCbits.LATC3 = 1;
  1952   000E48  868B               	bsf	139,3,c	;volatile
  1953   000E4A  0012               	return		;funcret
  1954   000E4C                     __end_of_setFiles:
  1955                           	callstack 0
  1956                           
  1957 ;; *************** function _saveTecla *****************
  1958 ;; Defined at:
  1959 ;;		line 115 in file "TTECLAT.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;		None
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;		None
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1
  1973 ;;      Params:         0       0       0
  1974 ;;      Locals:         0       0       0
  1975 ;;      Temps:          0       0       0
  1976 ;;      Totals:         0       0       0
  1977 ;;Total ram usage:        0 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 2
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_motorTeclat
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           	psect	text6
  1988   0005DA                     __ptext6:
  1989                           	callstack 0
  1990   0005DA                     _saveTecla:
  1991                           	callstack 27
  1992                           
  1993                           ;TTECLAT.c: 117:     if (rows == 0x01){
  1994                           
  1995                           ;incstack = 0
  1996   0005DA  042F               	decf	_rows^0,w,c
  1997   0005DC  A4D8               	btfss	status,2,c
  1998   0005DE  D021               	goto	l2808
  1999                           
  2000                           ;TTECLAT.c: 118:         if (columna_polsada == 0x01){
  2001   0005E0  042C               	decf	_columna_polsada^0,w,c
  2002   0005E2  A4D8               	btfss	status,2,c
  2003   0005E4  D002               	goto	l2788
  2004                           
  2005                           ;TTECLAT.c: 119:             fila_matriu = 0;
  2006   0005E6  0E00               	movlw	0
  2007   0005E8  6E28               	movwf	_fila_matriu^0,c
  2008   0005EA                     l2788:
  2009                           
  2010                           ;TTECLAT.c: 121:         if (columna_polsada == 0x02){
  2011   0005EA  0E02               	movlw	2
  2012   0005EC  182C               	xorwf	_columna_polsada^0,w,c
  2013   0005EE  A4D8               	btfss	status,2,c
  2014   0005F0  D00A               	goto	l2798
  2015                           
  2016                           ;TTECLAT.c: 122:             if (caracter_actual == 3){
  2017   0005F2  0E03               	movlw	3
  2018   0005F4  182B               	xorwf	_caracter_actual^0,w,c
  2019   0005F6  A4D8               	btfss	status,2,c
  2020   0005F8  D003               	goto	l2794
  2021                           
  2022                           ;TTECLAT.c: 123:                 caracter_actual = 0;
  2023   0005FA  0E00               	movlw	0
  2024   0005FC  6E2B               	movwf	_caracter_actual^0,c
  2025                           
  2026                           ;TTECLAT.c: 124:             }else{
  2027   0005FE  D001               	goto	l2796
  2028   000600                     l2794:
  2029                           
  2030                           ;TTECLAT.c: 125:                 caracter_actual++;
  2031   000600  2A2B               	incf	_caracter_actual^0,f,c
  2032   000602                     l2796:
  2033                           
  2034                           ;TTECLAT.c: 127:             fila_matriu = 1;
  2035   000602  0E01               	movlw	1
  2036   000604  6E28               	movwf	_fila_matriu^0,c
  2037   000606                     l2798:
  2038                           
  2039                           ;TTECLAT.c: 129:         if (columna_polsada == 0x04){
  2040   000606  0E04               	movlw	4
  2041   000608  182C               	xorwf	_columna_polsada^0,w,c
  2042   00060A  A4D8               	btfss	status,2,c
  2043   00060C  D00A               	goto	l2808
  2044                           
  2045                           ;TTECLAT.c: 130:             if (caracter_actual == 3){
  2046   00060E  0E03               	movlw	3
  2047   000610  182B               	xorwf	_caracter_actual^0,w,c
  2048   000612  A4D8               	btfss	status,2,c
  2049   000614  D003               	goto	l2804
  2050                           
  2051                           ;TTECLAT.c: 131:                 caracter_actual = 0;
  2052   000616  0E00               	movlw	0
  2053   000618  6E2B               	movwf	_caracter_actual^0,c
  2054                           
  2055                           ;TTECLAT.c: 132:             }else{
  2056   00061A  D001               	goto	l2806
  2057   00061C                     l2804:
  2058                           
  2059                           ;TTECLAT.c: 133:                 caracter_actual++;
  2060   00061C  2A2B               	incf	_caracter_actual^0,f,c
  2061   00061E                     l2806:
  2062                           
  2063                           ;TTECLAT.c: 135:             fila_matriu = 2;
  2064   00061E  0E02               	movlw	2
  2065   000620  6E28               	movwf	_fila_matriu^0,c
  2066   000622                     l2808:
  2067                           
  2068                           ;TTECLAT.c: 139:     if (rows == 0x02){
  2069   000622  0E02               	movlw	2
  2070   000624  182F               	xorwf	_rows^0,w,c
  2071   000626  A4D8               	btfss	status,2,c
  2072   000628  D019               	goto	l2828
  2073                           
  2074                           ;TTECLAT.c: 140:         if (columna_polsada == 0x01){
  2075   00062A  042C               	decf	_columna_polsada^0,w,c
  2076   00062C  A4D8               	btfss	status,2,c
  2077   00062E  D002               	goto	l2814
  2078                           
  2079                           ;TTECLAT.c: 141:             fila_matriu = 3;
  2080   000630  0E03               	movlw	3
  2081   000632  6E28               	movwf	_fila_matriu^0,c
  2082   000634                     l2814:
  2083                           
  2084                           ;TTECLAT.c: 143:         if (columna_polsada == 0x02){
  2085   000634  0E02               	movlw	2
  2086   000636  182C               	xorwf	_columna_polsada^0,w,c
  2087   000638  A4D8               	btfss	status,2,c
  2088   00063A  D002               	goto	l2818
  2089                           
  2090                           ;TTECLAT.c: 144:             fila_matriu = 4;
  2091   00063C  0E04               	movlw	4
  2092   00063E  6E28               	movwf	_fila_matriu^0,c
  2093   000640                     l2818:
  2094                           
  2095                           ;TTECLAT.c: 146:         if (columna_polsada == 0x04){
  2096   000640  0E04               	movlw	4
  2097   000642  182C               	xorwf	_columna_polsada^0,w,c
  2098   000644  A4D8               	btfss	status,2,c
  2099   000646  D002               	goto	l2822
  2100                           
  2101                           ;TTECLAT.c: 147:             fila_matriu = 5;
  2102   000648  0E05               	movlw	5
  2103   00064A  6E28               	movwf	_fila_matriu^0,c
  2104   00064C                     l2822:
  2105                           
  2106                           ;TTECLAT.c: 149:         if (caracter_actual == 3){
  2107   00064C  0E03               	movlw	3
  2108   00064E  182B               	xorwf	_caracter_actual^0,w,c
  2109   000650  A4D8               	btfss	status,2,c
  2110   000652  D003               	goto	l2826
  2111                           
  2112                           ;TTECLAT.c: 150:                 caracter_actual = 0;
  2113   000654  0E00               	movlw	0
  2114   000656  6E2B               	movwf	_caracter_actual^0,c
  2115                           
  2116                           ;TTECLAT.c: 151:             }else{
  2117   000658  D001               	goto	l2828
  2118   00065A                     l2826:
  2119                           
  2120                           ;TTECLAT.c: 152:                 caracter_actual++;
  2121   00065A  2A2B               	incf	_caracter_actual^0,f,c
  2122   00065C                     l2828:
  2123                           
  2124                           ;TTECLAT.c: 156:     if (rows == 0x04){
  2125   00065C  0E04               	movlw	4
  2126   00065E  182F               	xorwf	_rows^0,w,c
  2127   000660  A4D8               	btfss	status,2,c
  2128   000662  D019               	goto	l2848
  2129                           
  2130                           ;TTECLAT.c: 157:         if (columna_polsada == 0x01){
  2131   000664  042C               	decf	_columna_polsada^0,w,c
  2132   000666  A4D8               	btfss	status,2,c
  2133   000668  D002               	goto	l2834
  2134                           
  2135                           ;TTECLAT.c: 158:             fila_matriu = 6;
  2136   00066A  0E06               	movlw	6
  2137   00066C  6E28               	movwf	_fila_matriu^0,c
  2138   00066E                     l2834:
  2139                           
  2140                           ;TTECLAT.c: 160:         if (columna_polsada == 0x02){
  2141   00066E  0E02               	movlw	2
  2142   000670  182C               	xorwf	_columna_polsada^0,w,c
  2143   000672  A4D8               	btfss	status,2,c
  2144   000674  D002               	goto	l2838
  2145                           
  2146                           ;TTECLAT.c: 161:             fila_matriu = 7;
  2147   000676  0E07               	movlw	7
  2148   000678  6E28               	movwf	_fila_matriu^0,c
  2149   00067A                     l2838:
  2150                           
  2151                           ;TTECLAT.c: 163:         if (columna_polsada == 0x04){
  2152   00067A  0E04               	movlw	4
  2153   00067C  182C               	xorwf	_columna_polsada^0,w,c
  2154   00067E  A4D8               	btfss	status,2,c
  2155   000680  D002               	goto	l2842
  2156                           
  2157                           ;TTECLAT.c: 164:             fila_matriu = 8;
  2158   000682  0E08               	movlw	8
  2159   000684  6E28               	movwf	_fila_matriu^0,c
  2160   000686                     l2842:
  2161                           
  2162                           ;TTECLAT.c: 166:         if (caracter_actual == 3){
  2163   000686  0E03               	movlw	3
  2164   000688  182B               	xorwf	_caracter_actual^0,w,c
  2165   00068A  A4D8               	btfss	status,2,c
  2166   00068C  D003               	goto	l2846
  2167                           
  2168                           ;TTECLAT.c: 167:                 caracter_actual = 0;
  2169   00068E  0E00               	movlw	0
  2170   000690  6E2B               	movwf	_caracter_actual^0,c
  2171                           
  2172                           ;TTECLAT.c: 168:             }else{
  2173   000692  D001               	goto	l2848
  2174   000694                     l2846:
  2175                           
  2176                           ;TTECLAT.c: 169:                 caracter_actual++;
  2177   000694  2A2B               	incf	_caracter_actual^0,f,c
  2178   000696                     l2848:
  2179                           
  2180                           ;TTECLAT.c: 172:     if (rows == 0x08){
  2181   000696  0E08               	movlw	8
  2182   000698  182F               	xorwf	_rows^0,w,c
  2183   00069A  A4D8               	btfss	status,2,c
  2184   00069C  0012               	return	
  2185                           
  2186                           ;TTECLAT.c: 173:         if (columna_polsada == 0x01){
  2187   00069E  042C               	decf	_columna_polsada^0,w,c
  2188   0006A0  A4D8               	btfss	status,2,c
  2189   0006A2  D004               	goto	l2854
  2190                           
  2191                           ;TTECLAT.c: 174:             caracter_actual = 0;
  2192   0006A4  0E00               	movlw	0
  2193   0006A6  6E2B               	movwf	_caracter_actual^0,c
  2194                           
  2195                           ;TTECLAT.c: 175:             fila_matriu = 9;
  2196   0006A8  0E09               	movlw	9
  2197   0006AA  6E28               	movwf	_fila_matriu^0,c
  2198   0006AC                     l2854:
  2199                           
  2200                           ;TTECLAT.c: 177:         if (columna_polsada == 0x02){
  2201   0006AC  0E02               	movlw	2
  2202   0006AE  182C               	xorwf	_columna_polsada^0,w,c
  2203   0006B0  A4D8               	btfss	status,2,c
  2204   0006B2  D009               	goto	l2864
  2205                           
  2206                           ;TTECLAT.c: 178:             if (caracter_actual == 1){
  2207   0006B4  042B               	decf	_caracter_actual^0,w,c
  2208   0006B6  A4D8               	btfss	status,2,c
  2209   0006B8  D003               	goto	l2860
  2210                           
  2211                           ;TTECLAT.c: 179:                 caracter_actual = 0;
  2212   0006BA  0E00               	movlw	0
  2213   0006BC  6E2B               	movwf	_caracter_actual^0,c
  2214                           
  2215                           ;TTECLAT.c: 180:             }else{
  2216   0006BE  D001               	goto	l2862
  2217   0006C0                     l2860:
  2218                           
  2219                           ;TTECLAT.c: 181:                 caracter_actual++;
  2220   0006C0  2A2B               	incf	_caracter_actual^0,f,c
  2221   0006C2                     l2862:
  2222                           
  2223                           ;TTECLAT.c: 183:             fila_matriu = 10;
  2224   0006C2  0E0A               	movlw	10
  2225   0006C4  6E28               	movwf	_fila_matriu^0,c
  2226   0006C6                     l2864:
  2227                           
  2228                           ;TTECLAT.c: 185:         if (columna_polsada == 0x04){
  2229   0006C6  0E04               	movlw	4
  2230   0006C8  182C               	xorwf	_columna_polsada^0,w,c
  2231   0006CA  A4D8               	btfss	status,2,c
  2232   0006CC  0012               	return	
  2233                           
  2234                           ;TTECLAT.c: 186:             fila_matriu = 11;
  2235   0006CE  0E0B               	movlw	11
  2236   0006D0  6E28               	movwf	_fila_matriu^0,c
  2237   0006D2  0012               	return		;funcret
  2238   0006D4                     __end_of_saveTecla:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _comprovaHiHaColumna *****************
  2242 ;; Defined at:
  2243 ;;		line 97 in file "TTECLAT.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;		None
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;		None
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      unsigned char 
  2250 ;; Registers used:
  2251 ;;		wreg, status,2
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMRAM   BANK0   BANK1
  2257 ;;      Params:         0       0       0
  2258 ;;      Locals:         0       0       0
  2259 ;;      Temps:          0       0       0
  2260 ;;      Totals:         0       0       0
  2261 ;;Total ram usage:        0 bytes
  2262 ;; Hardware stack levels used: 1
  2263 ;; Hardware stack levels required when called: 2
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_motorTeclat
  2268 ;; This function uses a non-reentrant model
  2269 ;;
  2270                           
  2271                           	psect	text7
  2272   000F66                     __ptext7:
  2273                           	callstack 0
  2274   000F66                     _comprovaHiHaColumna:
  2275                           	callstack 27
  2276                           
  2277                           ;TTECLAT.c: 98:     hi_ha_tecla = 0;
  2278                           
  2279                           ;incstack = 0
  2280   000F66  0E00               	movlw	0
  2281   000F68  6E2D               	movwf	_hi_ha_tecla^0,c
  2282                           
  2283                           ;TTECLAT.c: 100:     if (PORTCbits.RC2 == 1){
  2284   000F6A  A482               	btfss	130,2,c	;volatile
  2285   000F6C  D004               	goto	l2772
  2286                           
  2287                           ;TTECLAT.c: 101:         columna_polsada = 0x01;
  2288   000F6E  0E01               	movlw	1
  2289   000F70  6E2C               	movwf	_columna_polsada^0,c
  2290                           
  2291                           ;TTECLAT.c: 102:         hi_ha_tecla = 1;
  2292   000F72  0E01               	movlw	1
  2293   000F74  6E2D               	movwf	_hi_ha_tecla^0,c
  2294   000F76                     l2772:
  2295                           
  2296                           ;TTECLAT.c: 104:     if (PORTCbits.RC0 == 1){
  2297   000F76  A082               	btfss	130,0,c	;volatile
  2298   000F78  D004               	goto	l2776
  2299                           
  2300                           ;TTECLAT.c: 105:         columna_polsada = 0x02;
  2301   000F7A  0E02               	movlw	2
  2302   000F7C  6E2C               	movwf	_columna_polsada^0,c
  2303                           
  2304                           ;TTECLAT.c: 106:         hi_ha_tecla = 1;
  2305   000F7E  0E01               	movlw	1
  2306   000F80  6E2D               	movwf	_hi_ha_tecla^0,c
  2307   000F82                     l2776:
  2308                           
  2309                           ;TTECLAT.c: 108:     if (PORTCbits.RC4 == 1){
  2310   000F82  A882               	btfss	130,4,c	;volatile
  2311   000F84  D004               	goto	l490
  2312                           
  2313                           ;TTECLAT.c: 109:         columna_polsada = 0x04;
  2314   000F86  0E04               	movlw	4
  2315   000F88  6E2C               	movwf	_columna_polsada^0,c
  2316                           
  2317                           ;TTECLAT.c: 110:         hi_ha_tecla = 1;
  2318   000F8A  0E01               	movlw	1
  2319   000F8C  6E2D               	movwf	_hi_ha_tecla^0,c
  2320   000F8E                     l490:
  2321                           
  2322                           ;TTECLAT.c: 112:     return(columna_polsada);
  2323   000F8E  502C               	movf	_columna_polsada^0,w,c
  2324   000F90  0012               	return		;funcret
  2325   000F92                     __end_of_comprovaHiHaColumna:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _Getflag_TTeclat *****************
  2329 ;; Defined at:
  2330 ;;		line 144 in file "TMENU.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      unsigned char 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1
  2344 ;;      Params:         0       0       0
  2345 ;;      Locals:         0       0       0
  2346 ;;      Temps:          0       0       0
  2347 ;;      Totals:         0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 2
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_motorTeclat
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text8
  2359   0010B8                     __ptext8:
  2360                           	callstack 0
  2361   0010B8                     _Getflag_TTeclat:
  2362                           	callstack 27
  2363                           
  2364                           ;TMENU.c: 145:     return(flag_TTeclat_menu);
  2365                           
  2366                           ;incstack = 0
  2367   0010B8  507E               	movf	_flag_TTeclat_menu^0,w,c
  2368   0010BA  0012               	return		;funcret
  2369   0010BC                     __end_of_Getflag_TTeclat:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _motorMenu *****************
  2373 ;; Defined at:
  2374 ;;		line 157 in file "TMENU.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1
  2388 ;;      Params:         0       0       0
  2389 ;;      Locals:         0       0       0
  2390 ;;      Temps:          0       0       0
  2391 ;;      Totals:         0       0       0
  2392 ;;Total ram usage:        0 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 7
  2395 ;; This function calls:
  2396 ;;		_LcClear
  2397 ;;		_LcGotoXY
  2398 ;;		_MyPutString
  2399 ;;		_getCaractersEscrits
  2400 ;;		_getEspera
  2401 ;;		_getTowerName
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           
  2407                           	psect	text9
  2408   000448                     __ptext9:
  2409                           	callstack 0
  2410   000448                     _motorMenu:
  2411                           	callstack 23
  2412                           
  2413                           ;TMENU.c: 158:     switch (estat_menu){
  2414                           
  2415                           ;incstack = 0
  2416   000448  D0A7               	goto	l3086
  2417   00044A                     l3016:
  2418                           
  2419                           ;TMENU.c: 160:             if (flag_putstring == 0){
  2420   00044A  5045               	movf	_flag_putstring^0,w,c
  2421   00044C  A4D8               	btfss	status,2,c
  2422   00044E  D006               	goto	l3020
  2423                           
  2424                           ;TMENU.c: 161:                 flag_putstring = MyPutString("DEST.PORT:");
  2425   000450  0E4A               	movlw	low STR_1
  2426   000452  6E7A               	movwf	MyPutString@frase^0,c
  2427   000454  ECE1  F004         	call	_MyPutString	;wreg free
  2428   000458  6E45               	movwf	_flag_putstring^0,c
  2429                           
  2430                           ;TMENU.c: 162:             }else{
  2431   00045A  0012               	return	
  2432   00045C                     l3020:
  2433                           
  2434                           ;TMENU.c: 163:                 estat_menu = 1;
  2435   00045C  0E01               	movlw	1
  2436   00045E  6E49               	movwf	_estat_menu^0,c
  2437                           
  2438                           ;TMENU.c: 164:                 LcGotoXY(0, 1);
  2439   000460  0E01               	movlw	1
  2440   000462  6E71               	movwf	LcGotoXY@Row^0,c
  2441   000464  0E00               	movlw	0
  2442   000466  EC93  F004         	call	_LcGotoXY
  2443   00046A                     l3024:
  2444                           
  2445                           ;TMENU.c: 165:                 flag_putstring = 0;
  2446   00046A  0E00               	movlw	0
  2447   00046C  6E45               	movwf	_flag_putstring^0,c
  2448   00046E  0012               	return	
  2449   000470                     l3026:
  2450                           
  2451                           ;TMENU.c: 169:             if(getCaractersEscrits() == 3){
  2452   000470  EC60  F008         	call	_getCaractersEscrits	;wreg free
  2453   000474  0A03               	xorlw	3
  2454   000476  A4D8               	btfss	status,2,c
  2455   000478  0012               	return	
  2456                           
  2457                           ;TMENU.c: 170:                 estat_menu = 2;
  2458   00047A  0E02               	movlw	2
  2459   00047C  6E49               	movwf	_estat_menu^0,c
  2460   00047E  0012               	return	
  2461   000480                     l3030:
  2462                           
  2463                           ;TMENU.c: 175:             dest_port[0] = getTowerName(0);
  2464   000480  0E00               	movlw	0
  2465   000482  EC4B  F008         	call	_getTowerName
  2466   000486  0100               	movlb	0	; () banked
  2467   000488  6FD2               	movwf	_dest_port& (0+255),b
  2468                           
  2469                           ;TMENU.c: 176:             dest_port[1] = getTowerName(1);
  2470   00048A  0E01               	movlw	1
  2471   00048C  EC4B  F008         	call	_getTowerName
  2472   000490  0100               	movlb	0	; () banked
  2473   000492  6FD3               	movwf	(_dest_port+1)& (0+255),b
  2474                           
  2475                           ;TMENU.c: 177:             dest_port[2] = getTowerName(2);
  2476   000494  0E02               	movlw	2
  2477   000496  EC4B  F008         	call	_getTowerName
  2478   00049A  0100               	movlb	0	; () banked
  2479   00049C  6FD4               	movwf	(_dest_port+2)& (0+255),b
  2480                           
  2481                           ;TMENU.c: 178:             dest_port[3] = getTowerName(3);
  2482   00049E  0E03               	movlw	3
  2483   0004A0  EC4B  F008         	call	_getTowerName
  2484   0004A4  0100               	movlb	0	; () banked
  2485   0004A6  6FD5               	movwf	(_dest_port+3)& (0+255),b
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;TMENU.c: 180:             estat_menu = 3;
  2489   0004A8  0E03               	movlw	3
  2490   0004AA  6E49               	movwf	_estat_menu^0,c
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;TMENU.c: 182:             LcClear();
  2494   0004AC  EC14  F008         	call	_LcClear	;wreg free
  2495                           
  2496                           ;TMENU.c: 183:             LcGotoXY(0, 0);
  2497   0004B0  0E00               	movlw	0
  2498   0004B2  6E71               	movwf	LcGotoXY@Row^0,c
  2499   0004B4  0E00               	movlw	0
  2500   0004B6  EC93  F004         	call	_LcGotoXY
  2501                           
  2502                           ;TMENU.c: 184:             break;
  2503   0004BA  0012               	return	
  2504   0004BC                     l3038:
  2505                           
  2506                           ;TMENU.c: 187:             if (flag_putstring == 0){
  2507   0004BC  5045               	movf	_flag_putstring^0,w,c
  2508   0004BE  A4D8               	btfss	status,2,c
  2509   0004C0  D006               	goto	l3042
  2510                           
  2511                           ;TMENU.c: 188:                 flag_putstring = MyPutString("REC.PORT:");
  2512   0004C2  0E55               	movlw	low STR_2
  2513   0004C4  6E7A               	movwf	MyPutString@frase^0,c
  2514   0004C6  ECE1  F004         	call	_MyPutString	;wreg free
  2515   0004CA  6E45               	movwf	_flag_putstring^0,c
  2516                           
  2517                           ;TMENU.c: 189:             }else{
  2518   0004CC  0012               	return	
  2519   0004CE                     l3042:
  2520                           
  2521                           ;TMENU.c: 190:                 estat_menu = 4;
  2522   0004CE  0E04               	movlw	4
  2523   0004D0  6E49               	movwf	_estat_menu^0,c
  2524                           
  2525                           ;TMENU.c: 191:                 LcGotoXY(0, 1);
  2526   0004D2  0E01               	movlw	1
  2527   0004D4  6E71               	movwf	LcGotoXY@Row^0,c
  2528   0004D6  0E00               	movlw	0
  2529   0004D8  EC93  F004         	call	_LcGotoXY
  2530   0004DC  D7C6               	goto	l3024
  2531   0004DE                     l3048:
  2532                           
  2533                           ;TMENU.c: 197:             if((getCaractersEscrits() == 3) && (getEspera() == 1)){
  2534   0004DE  EC60  F008         	call	_getCaractersEscrits	;wreg free
  2535   0004E2  0A03               	xorlw	3
  2536   0004E4  A4D8               	btfss	status,2,c
  2537   0004E6  0012               	return	
  2538   0004E8  EC5E  F008         	call	_getEspera	;wreg free
  2539   0004EC  06E8               	decf	wreg,f,c
  2540   0004EE  A4D8               	btfss	status,2,c
  2541   0004F0  0012               	return	
  2542                           
  2543                           ;TMENU.c: 198:                 estat_menu = 5;
  2544   0004F2  0E05               	movlw	5
  2545   0004F4  6E49               	movwf	_estat_menu^0,c
  2546   0004F6  0012               	return	
  2547   0004F8                     l3054:
  2548                           
  2549                           ;TMENU.c: 204:             rec_port[0] = getTowerName(0);
  2550   0004F8  0E00               	movlw	0
  2551   0004FA  EC4B  F008         	call	_getTowerName
  2552   0004FE  0100               	movlb	0	; () banked
  2553   000500  6FCE               	movwf	_rec_port& (0+255),b
  2554                           
  2555                           ;TMENU.c: 205:             rec_port[1] = getTowerName(1);
  2556   000502  0E01               	movlw	1
  2557   000504  EC4B  F008         	call	_getTowerName
  2558   000508  0100               	movlb	0	; () banked
  2559   00050A  6FCF               	movwf	(_rec_port+1)& (0+255),b
  2560                           
  2561                           ;TMENU.c: 206:             rec_port[2] = getTowerName(2);
  2562   00050C  0E02               	movlw	2
  2563   00050E  EC4B  F008         	call	_getTowerName
  2564   000512  0100               	movlb	0	; () banked
  2565   000514  6FD0               	movwf	(_rec_port+2)& (0+255),b
  2566                           
  2567                           ;TMENU.c: 207:             rec_port[3] = getTowerName(3);
  2568   000516  0E03               	movlw	3
  2569   000518  EC4B  F008         	call	_getTowerName
  2570   00051C  0100               	movlb	0	; () banked
  2571   00051E  6FD1               	movwf	(_rec_port+3)& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;TMENU.c: 209:             estat_menu = 6;
  2575   000520  0E06               	movlw	6
  2576   000522  6E49               	movwf	_estat_menu^0,c
  2577                           
  2578                           ; BSR set to: 0
  2579                           ;TMENU.c: 211:             LcClear();
  2580   000524  EC14  F008         	call	_LcClear	;wreg free
  2581                           
  2582                           ;TMENU.c: 212:             LcGotoXY(0, 0);
  2583   000528  0E00               	movlw	0
  2584   00052A  6E71               	movwf	LcGotoXY@Row^0,c
  2585   00052C  0E00               	movlw	0
  2586   00052E  EC93  F004         	call	_LcGotoXY
  2587                           
  2588                           ;TMENU.c: 214:             break;
  2589   000532  0012               	return	
  2590   000534                     l3062:
  2591                           
  2592                           ;TMENU.c: 217:             if (flag_putstring == 0){
  2593   000534  5045               	movf	_flag_putstring^0,w,c
  2594   000536  A4D8               	btfss	status,2,c
  2595   000538  D006               	goto	l3066
  2596                           
  2597                           ;TMENU.c: 218:                 flag_putstring = MyPutString("USER NAME:");
  2598   00053A  0E3F               	movlw	low STR_3
  2599   00053C  6E7A               	movwf	MyPutString@frase^0,c
  2600   00053E  ECE1  F004         	call	_MyPutString	;wreg free
  2601   000542  6E45               	movwf	_flag_putstring^0,c
  2602                           
  2603                           ;TMENU.c: 219:             }else{
  2604   000544  0012               	return	
  2605   000546                     l3066:
  2606                           
  2607                           ;TMENU.c: 220:                 estat_menu = 7;
  2608   000546  0E07               	movlw	7
  2609   000548  6E49               	movwf	_estat_menu^0,c
  2610                           
  2611                           ;TMENU.c: 221:                 LcGotoXY(0, 1);
  2612   00054A  0E01               	movlw	1
  2613   00054C  6E71               	movwf	LcGotoXY@Row^0,c
  2614   00054E  0E00               	movlw	0
  2615   000550  EC93  F004         	call	_LcGotoXY
  2616   000554  D78A               	goto	l3024
  2617   000556                     l3072:
  2618                           
  2619                           ;TMENU.c: 226:             if(getCaractersEscrits() == 2){
  2620   000556  EC60  F008         	call	_getCaractersEscrits	;wreg free
  2621   00055A  0A02               	xorlw	2
  2622   00055C  A4D8               	btfss	status,2,c
  2623   00055E  0012               	return	
  2624                           
  2625                           ;TMENU.c: 227:                 estat_menu = 8;
  2626   000560  0E08               	movlw	8
  2627   000562  6E49               	movwf	_estat_menu^0,c
  2628   000564  0012               	return	
  2629   000566                     l3076:
  2630                           
  2631                           ;TMENU.c: 232:             user_name[0] = getTowerName(0);
  2632   000566  0E00               	movlw	0
  2633   000568  EC4B  F008         	call	_getTowerName
  2634   00056C  0100               	movlb	0	; () banked
  2635   00056E  6FDA               	movwf	_user_name& (0+255),b
  2636                           
  2637                           ;TMENU.c: 233:             user_name[1] = getTowerName(1);
  2638   000570  0E01               	movlw	1
  2639   000572  EC4B  F008         	call	_getTowerName
  2640   000576  0100               	movlb	0	; () banked
  2641   000578  6FDB               	movwf	(_user_name+1)& (0+255),b
  2642                           
  2643                           ;TMENU.c: 234:             user_name[2] = getTowerName(2);
  2644   00057A  0E02               	movlw	2
  2645   00057C  EC4B  F008         	call	_getTowerName
  2646   000580  0100               	movlb	0	; () banked
  2647   000582  6FDC               	movwf	(_user_name+2)& (0+255),b
  2648                           
  2649                           ; BSR set to: 0
  2650                           ;TMENU.c: 236:             estat_menu = 9;
  2651   000584  0E09               	movlw	9
  2652   000586  6E49               	movwf	_estat_menu^0,c
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;TMENU.c: 238:             LcClear();
  2656   000588  EC14  F008         	call	_LcClear	;wreg free
  2657                           
  2658                           ;TMENU.c: 239:             LcGotoXY(0, 0);
  2659   00058C  0E00               	movlw	0
  2660   00058E  6E71               	movwf	LcGotoXY@Row^0,c
  2661   000590  0E00               	movlw	0
  2662   000592  EC93  F004         	call	_LcGotoXY
  2663                           
  2664                           ;TMENU.c: 240:             break;
  2665   000596  0012               	return	
  2666   000598                     l3086:
  2667   000598  5049               	movf	_estat_menu^0,w,c
  2668                           
  2669                           ; Switch size 1, requested type "simple"
  2670                           ; Number of cases is 11, Range of values is 0 to 10
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte           34    18 (average)
  2674                           ;	Chosen strategy is simple_byte
  2675   00059A  0A00               	xorlw	0	; case 0
  2676   00059C  B4D8               	btfsc	status,2,c
  2677   00059E  D755               	goto	l3016
  2678   0005A0  0A01               	xorlw	1	; case 1
  2679   0005A2  B4D8               	btfsc	status,2,c
  2680   0005A4  D765               	goto	l3026
  2681   0005A6  0A03               	xorlw	3	; case 2
  2682   0005A8  B4D8               	btfsc	status,2,c
  2683   0005AA  D76A               	goto	l3030
  2684   0005AC  0A01               	xorlw	1	; case 3
  2685   0005AE  B4D8               	btfsc	status,2,c
  2686   0005B0  D785               	goto	l3038
  2687   0005B2  0A07               	xorlw	7	; case 4
  2688   0005B4  B4D8               	btfsc	status,2,c
  2689   0005B6  D793               	goto	l3048
  2690   0005B8  0A01               	xorlw	1	; case 5
  2691   0005BA  B4D8               	btfsc	status,2,c
  2692   0005BC  D79D               	goto	l3054
  2693   0005BE  0A03               	xorlw	3	; case 6
  2694   0005C0  B4D8               	btfsc	status,2,c
  2695   0005C2  D7B8               	goto	l3062
  2696   0005C4  0A01               	xorlw	1	; case 7
  2697   0005C6  B4D8               	btfsc	status,2,c
  2698   0005C8  D7C6               	goto	l3072
  2699   0005CA  0A0F               	xorlw	15	; case 8
  2700   0005CC  B4D8               	btfsc	status,2,c
  2701   0005CE  D7CB               	goto	l3076
  2702   0005D0  0A01               	xorlw	1	; case 9
  2703   0005D2  B4D8               	btfsc	status,2,c
  2704   0005D4  0012               	return	
  2705   0005D6  0A03               	xorlw	3	; case 10
  2706   0005D8  0012               	return	
  2707   0005DA                     __end_of_motorMenu:
  2708                           	callstack 0
  2709                           
  2710 ;; *************** function _getTowerName *****************
  2711 ;; Defined at:
  2712 ;;		line 58 in file "TTECLAT.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  p               1    wreg     unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;  p               1    0[COMRAM] unsigned char 
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      unsigned char 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1
  2726 ;;      Params:         0       0       0
  2727 ;;      Locals:         1       0       0
  2728 ;;      Temps:          0       0       0
  2729 ;;      Totals:         1       0       0
  2730 ;;Total ram usage:        1 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 2
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		_motorMenu
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text10
  2741   001096                     __ptext10:
  2742                           	callstack 0
  2743   001096                     _getTowerName:
  2744                           	callstack 27
  2745                           
  2746                           ;incstack = 0
  2747                           ;getTowerName@p stored from wreg
  2748   001096  6E64               	movwf	getTowerName@p^0,c
  2749                           
  2750                           ;TTECLAT.c: 59:     return(tower_name[p]);
  2751   001098  5064               	movf	getTowerName@p^0,w,c
  2752   00109A  0FC6               	addlw	low _tower_name
  2753   00109C  6ED9               	movwf	fsr2l,c
  2754   00109E  6ADA               	clrf	fsr2h,c
  2755   0010A0  50DF               	movf	indf2,w,c
  2756   0010A2  0012               	return		;funcret
  2757   0010A4                     __end_of_getTowerName:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _getEspera *****************
  2761 ;; Defined at:
  2762 ;;		line 65 in file "TTECLAT.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      unsigned char 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1
  2776 ;;      Params:         0       0       0
  2777 ;;      Locals:         0       0       0
  2778 ;;      Temps:          0       0       0
  2779 ;;      Totals:         0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 2
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_motorMenu
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text11
  2791   0010BC                     __ptext11:
  2792                           	callstack 0
  2793   0010BC                     _getEspera:
  2794                           	callstack 27
  2795                           
  2796                           ;TTECLAT.c: 66:     return(espera);
  2797                           
  2798                           ;incstack = 0
  2799   0010BC  502A               	movf	_espera^0,w,c
  2800   0010BE  0012               	return		;funcret
  2801   0010C0                     __end_of_getEspera:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _getCaractersEscrits *****************
  2805 ;; Defined at:
  2806 ;;		line 61 in file "TTECLAT.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      unsigned char 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1
  2820 ;;      Params:         0       0       0
  2821 ;;      Locals:         0       0       0
  2822 ;;      Temps:          0       0       0
  2823 ;;      Totals:         0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 2
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_motorMenu
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text12
  2835   0010C0                     __ptext12:
  2836                           	callstack 0
  2837   0010C0                     _getCaractersEscrits:
  2838                           	callstack 27
  2839                           
  2840                           ;TTECLAT.c: 62:     return(caracters_escrits_menu);
  2841                           
  2842                           ;incstack = 0
  2843   0010C0  5031               	movf	_caracters_escrits_menu^0,w,c
  2844   0010C2  0012               	return		;funcret
  2845   0010C4                     __end_of_getCaractersEscrits:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _MyPutString *****************
  2849 ;; Defined at:
  2850 ;;		line 206 in file "LCD.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  frase           1   22[COMRAM] PTR unsigned char 
  2853 ;;		 -> STR_4(14), STR_3(11), STR_2(10), STR_1(11), 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      unsigned char 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1
  2865 ;;      Params:         1       0       0
  2866 ;;      Locals:         0       0       0
  2867 ;;      Temps:          1       0       0
  2868 ;;      Totals:         2       0       0
  2869 ;;Total ram usage:        2 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 6
  2872 ;; This function calls:
  2873 ;;		_LcPutChar
  2874 ;; This function is called by:
  2875 ;;		_motorMenu
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text13
  2880   0009C2                     __ptext13:
  2881                           	callstack 0
  2882   0009C2                     _MyPutString:
  2883                           	callstack 23
  2884                           
  2885                           ;LCD.c: 207:     switch(estat_string){
  2886                           
  2887                           ;incstack = 0
  2888   0009C2  D033               	goto	l2732
  2889   0009C4                     l2698:
  2890                           
  2891                           ;LCD.c: 209:             j = 0;
  2892   0009C4  0E00               	movlw	0
  2893   0009C6  6E0A               	movwf	(_j+1)^0,c
  2894   0009C8  0E00               	movlw	0
  2895   0009CA  6E09               	movwf	_j^0,c
  2896                           
  2897                           ;LCD.c: 210:             estat_string = 1;
  2898   0009CC  0E01               	movlw	1
  2899   0009CE  6E56               	movwf	_estat_string^0,c
  2900   0009D0                     l2700:
  2901                           
  2902                           ;LCD.c: 211:             return(0);
  2903   0009D0  0E00               	movlw	0
  2904   0009D2  0012               	return	
  2905   0009D4                     l2706:
  2906                           
  2907                           ;LCD.c: 214:             if(frase[j] != '\0'){
  2908   0009D4  507A               	movf	MyPutString@frase^0,w,c
  2909   0009D6  2409               	addwf	_j^0,w,c
  2910   0009D8  6E7B               	movwf	??_MyPutString^0,c
  2911   0009DA  C07B  FFF6         	movff	??_MyPutString,tblptrl
  2912   0009DE                     	if	1	;There is more than 1 active tblptr byte
  2913   0009DE  0E02               	movlw	high __smallconst
  2914   0009E0  6EF7               	movwf	tblptrh,c
  2915   0009E2                     	endif
  2916   0009E2                     	if	0	;tblptru may be non-zero
  2917   0009E2                     	endif
  2918   0009E2                     	if	0	;tblptru may be non-zero
  2919   0009E2                     	endif
  2920   0009E2  0008               	tblrd		*
  2921   0009E4  50F5               	movf	tablat,w,c
  2922   0009E6  0900               	iorlw	0
  2923   0009E8  B4D8               	btfsc	status,2,c
  2924   0009EA  D00D               	goto	l2712
  2925                           
  2926                           ;LCD.c: 215:                 LcPutChar(frase[j]);
  2927   0009EC  507A               	movf	MyPutString@frase^0,w,c
  2928   0009EE  2409               	addwf	_j^0,w,c
  2929   0009F0  6E7B               	movwf	??_MyPutString^0,c
  2930   0009F2  C07B  FFF6         	movff	??_MyPutString,tblptrl
  2931   0009F6                     	if	1	;There is more than 1 active tblptr byte
  2932   0009F6  0E02               	movlw	high __smallconst
  2933   0009F8  6EF7               	movwf	tblptrh,c
  2934   0009FA                     	endif
  2935   0009FA                     	if	0	;tblptru may be non-zero
  2936   0009FA                     	endif
  2937   0009FA                     	if	0	;tblptru may be non-zero
  2938   0009FA                     	endif
  2939   0009FA  0008               	tblrd		*
  2940   0009FC  50F5               	movf	tablat,w,c
  2941   0009FE  EC20  F005         	call	_LcPutChar
  2942                           
  2943                           ;LCD.c: 216:                 j++;
  2944   000A02  4A09               	infsnz	_j^0,f,c
  2945   000A04  2A0A               	incf	(_j+1)^0,f,c
  2946   000A06                     l2712:
  2947                           
  2948                           ;LCD.c: 218:             if(frase[j] == '\0'){
  2949   000A06  507A               	movf	MyPutString@frase^0,w,c
  2950   000A08  2409               	addwf	_j^0,w,c
  2951   000A0A  6E7B               	movwf	??_MyPutString^0,c
  2952   000A0C  C07B  FFF6         	movff	??_MyPutString,tblptrl
  2953   000A10                     	if	1	;There is more than 1 active tblptr byte
  2954   000A10  0E02               	movlw	high __smallconst
  2955   000A12  6EF7               	movwf	tblptrh,c
  2956   000A14                     	endif
  2957   000A14                     	if	0	;tblptru may be non-zero
  2958   000A14                     	endif
  2959   000A14                     	if	0	;tblptru may be non-zero
  2960   000A14                     	endif
  2961   000A14  0008               	tblrd		*
  2962   000A16  50F5               	movf	tablat,w,c
  2963   000A18  0900               	iorlw	0
  2964   000A1A  A4D8               	btfss	status,2,c
  2965   000A1C  D7D9               	goto	l2700
  2966                           
  2967                           ;LCD.c: 219:                 estat_string = 2;
  2968   000A1E  0E02               	movlw	2
  2969   000A20  D7D6               	goto	L1
  2970   000A22                     l2722:
  2971                           
  2972                           ;LCD.c: 224:             estat_string = 0;
  2973   000A22  0E00               	movlw	0
  2974   000A24  6E56               	movwf	_estat_string^0,c
  2975                           
  2976                           ;LCD.c: 225:             return(1);
  2977   000A26  0E01               	movlw	1
  2978   000A28  0012               	return	
  2979   000A2A                     l2732:
  2980   000A2A  5056               	movf	_estat_string^0,w,c
  2981                           
  2982                           ; Switch size 1, requested type "simple"
  2983                           ; Number of cases is 3, Range of values is 0 to 2
  2984                           ; switch strategies available:
  2985                           ; Name         Instructions Cycles
  2986                           ; simple_byte           10     6 (average)
  2987                           ;	Chosen strategy is simple_byte
  2988   000A2C  0A00               	xorlw	0	; case 0
  2989   000A2E  B4D8               	btfsc	status,2,c
  2990   000A30  D7C9               	goto	l2698
  2991   000A32  0A01               	xorlw	1	; case 1
  2992   000A34  B4D8               	btfsc	status,2,c
  2993   000A36  D7CE               	goto	l2706
  2994   000A38  0A03               	xorlw	3	; case 2
  2995   000A3A  A4D8               	btfss	status,2,c
  2996   000A3C  0012               	return	
  2997   000A3E  D7F1               	goto	l2722
  2998   000A40                     __end_of_MyPutString:
  2999                           	callstack 0
  3000                           
  3001 ;; *************** function _LcPutChar *****************
  3002 ;; Defined at:
  3003 ;;		line 162 in file "LCD.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;  c               1    wreg     unsigned char 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  c               1   21[COMRAM] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMRAM   BANK0   BANK1
  3017 ;;      Params:         0       0       0
  3018 ;;      Locals:         1       0       0
  3019 ;;      Temps:          0       0       0
  3020 ;;      Totals:         1       0       0
  3021 ;;Total ram usage:        1 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 5
  3024 ;; This function calls:
  3025 ;;		_CantaData
  3026 ;;		_LcGotoXY
  3027 ;;		_WaitForBusy
  3028 ;; This function is called by:
  3029 ;;		_MyPutString
  3030 ;;		_writeCaracter
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           	psect	text14
  3035   000A40                     __ptext14:
  3036                           	callstack 0
  3037   000A40                     _LcPutChar:
  3038                           	callstack 23
  3039                           
  3040                           ;incstack = 0
  3041                           ;LcPutChar@c stored from wreg
  3042   000A40  6E79               	movwf	LcPutChar@c^0,c
  3043                           
  3044                           ;LCD.c: 172:  WaitForBusy(); CantaData(c);
  3045   000A42  EC97  F006         	call	_WaitForBusy	;wreg free
  3046   000A46  5079               	movf	LcPutChar@c^0,w,c
  3047   000A48  EC81  F007         	call	_CantaData
  3048                           
  3049                           ;LCD.c: 174:  ++ColumnAct;
  3050   000A4C  2A57               	incf	_ColumnAct^0,f,c
  3051                           
  3052                           ;LCD.c: 175:  if (Rows == 3) {
  3053   000A4E  0E03               	movlw	3
  3054   000A50  185A               	xorwf	_Rows^0,w,c
  3055   000A52  A4D8               	btfss	status,2,c
  3056   000A54  D011               	goto	l2656
  3057                           
  3058                           ;LCD.c: 176:   if (ColumnAct >= 20) {
  3059   000A56  0E13               	movlw	19
  3060   000A58  6457               	cpfsgt	_ColumnAct^0,c
  3061   000A5A  0012               	return	
  3062                           
  3063                           ;LCD.c: 177:    ColumnAct = 0;
  3064   000A5C  0E00               	movlw	0
  3065   000A5E  6E57               	movwf	_ColumnAct^0,c
  3066                           
  3067                           ;LCD.c: 178:    if (++RowAct >= 4) RowAct = 0;
  3068   000A60  2A58               	incf	_RowAct^0,f,c
  3069   000A62  0E03               	movlw	3
  3070   000A64  6458               	cpfsgt	_RowAct^0,c
  3071   000A66  D002               	goto	l2654
  3072   000A68  0E00               	movlw	0
  3073   000A6A  6E58               	movwf	_RowAct^0,c
  3074   000A6C                     l2654:
  3075                           
  3076                           ;LCD.c: 179:    LcGotoXY(ColumnAct, RowAct);
  3077   000A6C  C058  F071         	movff	_RowAct,LcGotoXY@Row
  3078   000A70  5057               	movf	_ColumnAct^0,w,c
  3079   000A72  EC93  F004         	call	_LcGotoXY
  3080   000A76  0012               	return	
  3081   000A78                     l2656:
  3082                           
  3083                           ;LCD.c: 182:  if (Rows == 2) {
  3084   000A78  0E02               	movlw	2
  3085   000A7A  185A               	xorwf	_Rows^0,w,c
  3086   000A7C  A4D8               	btfss	status,2,c
  3087   000A7E  D011               	goto	l2668
  3088                           
  3089                           ;LCD.c: 183:   if (ColumnAct >= 40) {
  3090   000A80  0E27               	movlw	39
  3091   000A82  6457               	cpfsgt	_ColumnAct^0,c
  3092   000A84  0012               	return	
  3093                           
  3094                           ;LCD.c: 184:    ColumnAct = 0;
  3095   000A86  0E00               	movlw	0
  3096   000A88  6E57               	movwf	_ColumnAct^0,c
  3097                           
  3098                           ;LCD.c: 185:    if (++RowAct >= 2) RowAct = 0;
  3099   000A8A  2A58               	incf	_RowAct^0,f,c
  3100   000A8C  0E01               	movlw	1
  3101   000A8E  6458               	cpfsgt	_RowAct^0,c
  3102   000A90  D002               	goto	l2666
  3103   000A92  0E00               	movlw	0
  3104   000A94  6E58               	movwf	_RowAct^0,c
  3105   000A96                     l2666:
  3106                           
  3107                           ;LCD.c: 186:    LcGotoXY(ColumnAct, RowAct);
  3108   000A96  C058  F071         	movff	_RowAct,LcGotoXY@Row
  3109   000A9A  5057               	movf	_ColumnAct^0,w,c
  3110   000A9C  EC93  F004         	call	_LcGotoXY
  3111   000AA0  0012               	return	
  3112   000AA2                     l2668:
  3113                           
  3114                           ;LCD.c: 189:  if (RowAct == 1) {
  3115   000AA2  0458               	decf	_RowAct^0,w,c
  3116   000AA4  A4D8               	btfss	status,2,c
  3117   000AA6  0012               	return	
  3118                           
  3119                           ;LCD.c: 190:   if (ColumnAct >= 40) ColumnAct = 0;
  3120   000AA8  0E27               	movlw	39
  3121   000AAA  6457               	cpfsgt	_ColumnAct^0,c
  3122   000AAC  D002               	goto	l2674
  3123   000AAE  0E00               	movlw	0
  3124   000AB0  6E57               	movwf	_ColumnAct^0,c
  3125   000AB2                     l2674:
  3126                           
  3127                           ;LCD.c: 191:   LcGotoXY(ColumnAct, RowAct);
  3128   000AB2  C058  F071         	movff	_RowAct,LcGotoXY@Row
  3129   000AB6  5057               	movf	_ColumnAct^0,w,c
  3130   000AB8  EC93  F004         	call	_LcGotoXY
  3131   000ABC  0012               	return		;funcret
  3132   000ABE                     __end_of_LcPutChar:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _LcGotoXY *****************
  3136 ;; Defined at:
  3137 ;;		line 135 in file "LCD.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;  Column          1    wreg     unsigned char 
  3140 ;;  Row             1   13[COMRAM] unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  Column          1   20[COMRAM] unsigned char 
  3143 ;;  Fisics          2   18[COMRAM] int 
  3144 ;; Return value:  Size  Location     Type
  3145 ;;                  1    wreg      void 
  3146 ;; Registers used:
  3147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3148 ;; Tracked objects:
  3149 ;;		On entry : 0/0
  3150 ;;		On exit  : 0/0
  3151 ;;		Unchanged: 0/0
  3152 ;; Data sizes:     COMRAM   BANK0   BANK1
  3153 ;;      Params:         1       0       0
  3154 ;;      Locals:         5       0       0
  3155 ;;      Temps:          2       0       0
  3156 ;;      Totals:         8       0       0
  3157 ;;Total ram usage:        8 bytes
  3158 ;; Hardware stack levels used: 1
  3159 ;; Hardware stack levels required when called: 4
  3160 ;; This function calls:
  3161 ;;		_CantaIR
  3162 ;;		_WaitForBusy
  3163 ;; This function is called by:
  3164 ;;		_LcPutChar
  3165 ;;		_main
  3166 ;;		_motorMenu
  3167 ;;		_writeCaracter
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text15
  3172   000926                     __ptext15:
  3173                           	callstack 0
  3174   000926                     _LcGotoXY:
  3175                           	callstack 23
  3176                           
  3177                           ;incstack = 0
  3178                           ;LcGotoXY@Column stored from wreg
  3179   000926  6E78               	movwf	LcGotoXY@Column^0,c
  3180                           
  3181                           ;LCD.c: 139:  int Fisics;;LCD.c: 141:  switch (Rows) {
  3182   000928  D036               	goto	l2606
  3183   00092A                     l2584:
  3184                           
  3185                           ;LCD.c: 143:    Fisics = Column + (!Row ? 0 : 0x40); break;
  3186   00092A  5071               	movf	LcGotoXY@Row^0,w,c
  3187   00092C  B4D8               	btfsc	status,2,c
  3188   00092E  D004               	goto	l2588
  3189   000930  0E00               	movlw	0
  3190   000932  6E75               	movwf	(_LcGotoXY$395+1)^0,c
  3191   000934  0E40               	movlw	64
  3192   000936  D003               	goto	L2
  3193   000938                     l2588:
  3194   000938  0E00               	movlw	0
  3195   00093A  6E75               	movwf	(_LcGotoXY$395+1)^0,c
  3196   00093C  0E00               	movlw	0
  3197   00093E                     L2:
  3198   00093E  6E74               	movwf	_LcGotoXY$395^0,c
  3199   000940  5078               	movf	LcGotoXY@Column^0,w,c
  3200   000942  2474               	addwf	_LcGotoXY$395^0,w,c
  3201   000944  6E76               	movwf	LcGotoXY@Fisics^0,c
  3202   000946  0E00               	movlw	0
  3203   000948  2075               	addwfc	(_LcGotoXY$395+1)^0,w,c
  3204   00094A  6E77               	movwf	(LcGotoXY@Fisics+1)^0,c
  3205   00094C  D02F               	goto	l2608
  3206   00094E                     l104:
  3207                           
  3208                           ;LCD.c: 145:    Fisics = Column;
  3209   00094E  C078  F076         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  3210   000952  6A77               	clrf	(LcGotoXY@Fisics+1)^0,c
  3211                           
  3212                           ;LCD.c: 146:    if (Row == 1) Fisics += 0x40; else
  3213   000954  0471               	decf	LcGotoXY@Row^0,w,c
  3214   000956  A4D8               	btfss	status,2,c
  3215   000958  D002               	goto	l2596
  3216   00095A  0E40               	movlw	64
  3217   00095C  D005               	goto	L3
  3218   00095E                     l2596:
  3219                           
  3220                           ;LCD.c: 147:    if (Row == 2) Fisics += Columns; else
  3221   00095E  0E02               	movlw	2
  3222   000960  1871               	xorwf	LcGotoXY@Row^0,w,c
  3223   000962  A4D8               	btfss	status,2,c
  3224   000964  D004               	goto	l2600
  3225   000966  5059               	movf	_Columns^0,w,c
  3226   000968                     L3:
  3227   000968  2676               	addwf	LcGotoXY@Fisics^0,f,c
  3228   00096A  0E00               	movlw	0
  3229   00096C  D00E               	goto	L4
  3230   00096E                     l2600:
  3231                           
  3232                           ;LCD.c: 148:    if (Row == 3) Fisics += 0x40+Columns;
  3233   00096E  0E03               	movlw	3
  3234   000970  1871               	xorwf	LcGotoXY@Row^0,w,c
  3235   000972  A4D8               	btfss	status,2,c
  3236   000974  D01B               	goto	l2608
  3237   000976  5059               	movf	_Columns^0,w,c
  3238   000978  6E72               	movwf	??_LcGotoXY^0,c
  3239   00097A  6A73               	clrf	(??_LcGotoXY+1)^0,c
  3240   00097C  0E40               	movlw	64
  3241   00097E  2672               	addwf	??_LcGotoXY^0,f,c
  3242   000980  0E00               	movlw	0
  3243   000982  2273               	addwfc	(??_LcGotoXY+1)^0,f,c
  3244   000984  5072               	movf	??_LcGotoXY^0,w,c
  3245   000986  2676               	addwf	LcGotoXY@Fisics^0,f,c
  3246   000988  5073               	movf	(??_LcGotoXY+1)^0,w,c
  3247   00098A                     L4:
  3248   00098A  2277               	addwfc	(LcGotoXY@Fisics+1)^0,f,c
  3249                           
  3250                           ;LCD.c: 149:    break;
  3251   00098C  D00F               	goto	l2608
  3252   00098E                     l111:
  3253                           
  3254                           ;LCD.c: 152:    Fisics = Column; break;
  3255   00098E  C078  F076         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  3256   000992  6A77               	clrf	(LcGotoXY@Fisics+1)^0,c
  3257   000994  D00B               	goto	l2608
  3258   000996                     l2606:
  3259   000996  505A               	movf	_Rows^0,w,c
  3260                           
  3261                           ; Switch size 1, requested type "simple"
  3262                           ; Number of cases is 3, Range of values is 1 to 4
  3263                           ; switch strategies available:
  3264                           ; Name         Instructions Cycles
  3265                           ; simple_byte           10     6 (average)
  3266                           ;	Chosen strategy is simple_byte
  3267   000998  0A01               	xorlw	1	; case 1
  3268   00099A  B4D8               	btfsc	status,2,c
  3269   00099C  D7F8               	goto	l111
  3270   00099E  0A03               	xorlw	3	; case 2
  3271   0009A0  B4D8               	btfsc	status,2,c
  3272   0009A2  D7C3               	goto	l2584
  3273   0009A4  0A06               	xorlw	6	; case 4
  3274   0009A6  B4D8               	btfsc	status,2,c
  3275   0009A8  D7D2               	goto	l104
  3276   0009AA  D7F1               	goto	l111
  3277   0009AC                     l2608:
  3278                           
  3279                           ;LCD.c: 155:  WaitForBusy();
  3280   0009AC  EC97  F006         	call	_WaitForBusy	;wreg free
  3281                           
  3282                           ;LCD.c: 156:  CantaIR(0x80 | Fisics);
  3283   0009B0  5076               	movf	LcGotoXY@Fisics^0,w,c
  3284   0009B2  0980               	iorlw	128
  3285   0009B4  EC9A  F007         	call	_CantaIR
  3286                           
  3287                           ;LCD.c: 158:  RowAct = Row;
  3288   0009B8  C071  F058         	movff	LcGotoXY@Row,_RowAct
  3289                           
  3290                           ;LCD.c: 159:  ColumnAct = Column;
  3291   0009BC  C078  F057         	movff	LcGotoXY@Column,_ColumnAct
  3292   0009C0  0012               	return		;funcret
  3293   0009C2                     __end_of_LcGotoXY:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _CantaData *****************
  3297 ;; Defined at:
  3298 ;;		line 279 in file "LCD.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  Data            1    wreg     unsigned char 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  Data            1    2[COMRAM] unsigned char 
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1
  3312 ;;      Params:         0       0       0
  3313 ;;      Locals:         1       0       0
  3314 ;;      Temps:          0       0       0
  3315 ;;      Totals:         1       0       0
  3316 ;;Total ram usage:        1 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 3
  3319 ;; This function calls:
  3320 ;;		_CantaPartAlta
  3321 ;;		_CantaPartBaixa
  3322 ;; This function is called by:
  3323 ;;		_LcPutChar
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text16
  3328   000F02                     __ptext16:
  3329                           	callstack 0
  3330   000F02                     _CantaData:
  3331                           	callstack 24
  3332                           
  3333                           ;incstack = 0
  3334                           ;CantaData@Data stored from wreg
  3335   000F02  6E66               	movwf	CantaData@Data^0,c
  3336                           
  3337                           ;LCD.c: 280:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 0);
  3338   000F04  9096               	bcf	150,0,c	;volatile
  3339   000F06  9A93               	bcf	147,5,c	;volatile
  3340   000F08  9893               	bcf	147,4,c	;volatile
  3341   000F0A  9693               	bcf	147,3,c	;volatile
  3342                           
  3343                           ;LCD.c: 281:  (LATBbits.LATB0 = 1);
  3344   000F0C  808A               	bsf	138,0,c	;volatile
  3345                           
  3346                           ;LCD.c: 282:  (LATBbits.LATB1 = 0);
  3347   000F0E  928A               	bcf	138,1,c	;volatile
  3348                           
  3349                           ;LCD.c: 283:  (LATBbits.LATB2 = 1);
  3350   000F10  848A               	bsf	138,2,c	;volatile
  3351                           
  3352                           ;LCD.c: 284:  CantaPartAlta(Data);
  3353   000F12  5066               	movf	CantaData@Data^0,w,c
  3354   000F14  EC08  F006         	call	_CantaPartAlta
  3355                           
  3356                           ;LCD.c: 285:  (LATBbits.LATB2 = 1);
  3357   000F18  848A               	bsf	138,2,c	;volatile
  3358                           
  3359                           ;LCD.c: 286:  (LATBbits.LATB2 = 0);
  3360   000F1A  948A               	bcf	138,2,c	;volatile
  3361                           
  3362                           ;LCD.c: 287:  (LATBbits.LATB2 = 0);
  3363   000F1C  948A               	bcf	138,2,c	;volatile
  3364                           
  3365                           ;LCD.c: 288:  (LATBbits.LATB2 = 1);
  3366   000F1E  848A               	bsf	138,2,c	;volatile
  3367                           
  3368                           ;LCD.c: 289:  CantaPartBaixa(Data);
  3369   000F20  5066               	movf	CantaData@Data^0,w,c
  3370   000F22  ECD4  F005         	call	_CantaPartBaixa
  3371                           
  3372                           ;LCD.c: 290:  (LATBbits.LATB2 = 1);
  3373   000F26  848A               	bsf	138,2,c	;volatile
  3374                           
  3375                           ;LCD.c: 291:  (LATBbits.LATB2 = 0);
  3376   000F28  948A               	bcf	138,2,c	;volatile
  3377                           
  3378                           ;LCD.c: 292:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 1);
  3379   000F2A  8096               	bsf	150,0,c	;volatile
  3380   000F2C  8A93               	bsf	147,5,c	;volatile
  3381   000F2E  8893               	bsf	147,4,c	;volatile
  3382   000F30  8693               	bsf	147,3,c	;volatile
  3383   000F32  0012               	return		;funcret
  3384   000F34                     __end_of_CantaData:
  3385                           	callstack 0
  3386                           
  3387 ;; *************** function _LcClear *****************
  3388 ;; Defined at:
  3389 ;;		line 114 in file "LCD.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 3F/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1
  3403 ;;      Params:         0       0       0
  3404 ;;      Locals:         0       0       0
  3405 ;;      Temps:          0       0       0
  3406 ;;      Totals:         0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 4
  3410 ;; This function calls:
  3411 ;;		_CantaIR
  3412 ;;		_Espera
  3413 ;;		_WaitForBusy
  3414 ;; This function is called by:
  3415 ;;		_motorMenu
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text17
  3420   001028                     __ptext17:
  3421                           	callstack 0
  3422   001028                     _LcClear:
  3423                           	callstack 25
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;LCD.c: 117:  WaitForBusy(); CantaIR(0x01);
  3427                           
  3428                           ;incstack = 0
  3429   001028  EC97  F006         	call	_WaitForBusy	;wreg free
  3430   00102C  0E01               	movlw	1
  3431   00102E  EC9A  F007         	call	_CantaIR
  3432                           
  3433                           ;LCD.c: 118:  Espera(Timer, 3);
  3434   001032  0E00               	movlw	0
  3435   001034  6E71               	movwf	(Espera@ms+1)^0,c
  3436   001036  0E03               	movlw	3
  3437   001038  6E70               	movwf	Espera@ms^0,c
  3438   00103A  5063               	movf	_Timer^0,w,c
  3439   00103C  EC6B  F006         	call	_Espera
  3440   001040  0012               	return		;funcret
  3441   001042                     __end_of_LcClear:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _motorJoy *****************
  3445 ;; Defined at:
  3446 ;;		line 22 in file "TJOYSTICK.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;		None
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1
  3460 ;;      Params:         0       0       0
  3461 ;;      Locals:         0       0       0
  3462 ;;      Temps:          0       0       0
  3463 ;;      Totals:         0       0       0
  3464 ;;Total ram usage:        0 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 2
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_main
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474                           	psect	text18
  3475   000B38                     __ptext18:
  3476                           	callstack 0
  3477   000B38                     _motorJoy:
  3478                           	callstack 28
  3479                           
  3480                           ;TJOYSTICK.c: 23:     switch (estat_joy){
  3481                           
  3482                           ;incstack = 0
  3483   000B38  D026               	goto	l2492
  3484   000B3A                     l2468:
  3485                           
  3486                           ;TJOYSTICK.c: 27:                 estat_joy = 1;
  3487   000B3A  0E01               	movlw	1
  3488   000B3C  6E26               	movwf	_estat_joy^0,c
  3489                           
  3490                           ;TJOYSTICK.c: 28:                 ADCON0bits.GODONE = 1;
  3491   000B3E  82C2               	bsf	194,1,c	;volatile
  3492                           
  3493                           ;TJOYSTICK.c: 30:                 break;
  3494   000B40  0012               	return	
  3495   000B42                     l596:
  3496                           
  3497                           ;TJOYSTICK.c: 32:             if (ADCON0bits.GODONE == 0){
  3498   000B42  B2C2               	btfsc	194,1,c	;volatile
  3499   000B44  0012               	return	
  3500                           
  3501                           ;TJOYSTICK.c: 33:                 estat_joy = 2;
  3502   000B46  0E02               	movlw	2
  3503   000B48  6E26               	movwf	_estat_joy^0,c
  3504                           
  3505                           ;TJOYSTICK.c: 34:                 valor_ADRESH = ADRESH;
  3506   000B4A  CFC4 F024          	movff	4036,_valor_ADRESH	;volatile
  3507   000B4E  0012               	return	
  3508   000B50                     l2476:
  3509                           
  3510                           ;TJOYSTICK.c: 39:             if(valor_ADRESH < 70){
  3511   000B50  0E46               	movlw	70
  3512   000B52  6024               	cpfslt	_valor_ADRESH^0,c
  3513   000B54  D005               	goto	l2480
  3514                           
  3515                           ;TJOYSTICK.c: 40:                 joy_direction = 'U';
  3516   000B56  0E55               	movlw	85
  3517   000B58  6E25               	movwf	_joy_direction^0,c
  3518                           
  3519                           ;TJOYSTICK.c: 41:                 estat_joy = 0;
  3520   000B5A  0E00               	movlw	0
  3521   000B5C  6E26               	movwf	_estat_joy^0,c
  3522                           
  3523                           ;TJOYSTICK.c: 42:             }else{
  3524   000B5E  0012               	return	
  3525   000B60                     l2480:
  3526                           
  3527                           ;TJOYSTICK.c: 43:                 estat_joy = 3;
  3528   000B60  0E03               	movlw	3
  3529   000B62  6E26               	movwf	_estat_joy^0,c
  3530   000B64  0012               	return	
  3531   000B66                     l2482:
  3532                           
  3533                           ;TJOYSTICK.c: 48:             if(valor_ADRESH > 180){
  3534   000B66  0EB4               	movlw	180
  3535   000B68  6424               	cpfsgt	_valor_ADRESH^0,c
  3536   000B6A  D005               	goto	l2486
  3537                           
  3538                           ;TJOYSTICK.c: 49:                 joy_direction = 'D';
  3539   000B6C  0E44               	movlw	68
  3540   000B6E  6E25               	movwf	_joy_direction^0,c
  3541                           
  3542                           ;TJOYSTICK.c: 50:                 estat_joy = 0;
  3543   000B70  0E00               	movlw	0
  3544   000B72  6E26               	movwf	_estat_joy^0,c
  3545                           
  3546                           ;TJOYSTICK.c: 51:             }else{
  3547   000B74  0012               	return	
  3548   000B76                     l2486:
  3549                           
  3550                           ;TJOYSTICK.c: 52:                 estat_joy = 4;
  3551   000B76  0E04               	movlw	4
  3552   000B78  6E26               	movwf	_estat_joy^0,c
  3553   000B7A  0012               	return	
  3554   000B7C                     l2488:
  3555                           
  3556                           ;TJOYSTICK.c: 56:             joy_direction = 'M';
  3557   000B7C  0E4D               	movlw	77
  3558   000B7E  6E25               	movwf	_joy_direction^0,c
  3559                           
  3560                           ;TJOYSTICK.c: 57:             estat_joy = 0;
  3561   000B80  0E00               	movlw	0
  3562   000B82  6E26               	movwf	_estat_joy^0,c
  3563                           
  3564                           ;TJOYSTICK.c: 58:             break;
  3565   000B84  0012               	return	
  3566   000B86                     l2492:
  3567   000B86  5026               	movf	_estat_joy^0,w,c
  3568                           
  3569                           ; Switch size 1, requested type "simple"
  3570                           ; Number of cases is 5, Range of values is 0 to 4
  3571                           ; switch strategies available:
  3572                           ; Name         Instructions Cycles
  3573                           ; simple_byte           16     9 (average)
  3574                           ;	Chosen strategy is simple_byte
  3575   000B88  0A00               	xorlw	0	; case 0
  3576   000B8A  B4D8               	btfsc	status,2,c
  3577   000B8C  D7D6               	goto	l2468
  3578   000B8E  0A01               	xorlw	1	; case 1
  3579   000B90  B4D8               	btfsc	status,2,c
  3580   000B92  D7D7               	goto	l596
  3581   000B94  0A03               	xorlw	3	; case 2
  3582   000B96  B4D8               	btfsc	status,2,c
  3583   000B98  D7DB               	goto	l2476
  3584   000B9A  0A01               	xorlw	1	; case 3
  3585   000B9C  B4D8               	btfsc	status,2,c
  3586   000B9E  D7E3               	goto	l2482
  3587   000BA0  0A07               	xorlw	7	; case 4
  3588   000BA2  A4D8               	btfss	status,2,c
  3589   000BA4  0012               	return	
  3590   000BA6  D7EA               	goto	l2488
  3591   000BA8                     __end_of_motorJoy:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _initTeclat *****************
  3595 ;; Defined at:
  3596 ;;		line 41 in file "TTECLAT.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;		None
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1
  3610 ;;      Params:         0       0       0
  3611 ;;      Locals:         0       0       0
  3612 ;;      Temps:          0       0       0
  3613 ;;      Totals:         0       0       0
  3614 ;;Total ram usage:        0 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 3
  3617 ;; This function calls:
  3618 ;;		_TI_NewTimer
  3619 ;;		_TI_ResetTics
  3620 ;; This function is called by:
  3621 ;;		_main
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text19
  3626   000E8A                     __ptext19:
  3627                           	callstack 0
  3628   000E8A                     _initTeclat:
  3629                           	callstack 27
  3630                           
  3631                           ;TTECLAT.c: 42:     rows = 0x08;
  3632                           
  3633                           ;incstack = 0
  3634   000E8A  0E08               	movlw	8
  3635   000E8C  6E2F               	movwf	_rows^0,c
  3636                           
  3637                           ;TTECLAT.c: 43:     caracters_escrits = 0;
  3638   000E8E  0E00               	movlw	0
  3639   000E90  6E29               	movwf	_caracters_escrits^0,c
  3640                           
  3641                           ;TTECLAT.c: 44:     TI_NewTimer(&TimerRebots);
  3642   000E92  0E5F               	movlw	low _TimerRebots
  3643   000E94  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  3644   000E96  EC26  F007         	call	_TI_NewTimer	;wreg free
  3645                           
  3646                           ;TTECLAT.c: 45:     TI_NewTimer(&Timer1S);
  3647   000E9A  0E5E               	movlw	low _Timer1S
  3648   000E9C  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  3649   000E9E  EC26  F007         	call	_TI_NewTimer	;wreg free
  3650                           
  3651                           ;TTECLAT.c: 46:     TI_ResetTics (Timer1S);
  3652   000EA2  505E               	movf	_Timer1S^0,w,c
  3653   000EA4  ECF2  F007         	call	_TI_ResetTics
  3654                           
  3655                           ;TTECLAT.c: 47:     (TRISCbits.TRISC0 = TRISCbits.TRISC4 = TRISCbits.TRISC2 = 1);
  3656   000EA8  8494               	bsf	148,2,c	;volatile
  3657   000EAA  8894               	bsf	148,4,c	;volatile
  3658   000EAC  8094               	bsf	148,0,c	;volatile
  3659                           
  3660                           ;TTECLAT.c: 48:     (TRISCbits.TRISC1 = TRISCbits.TRISC3 = TRISCbits.TRISC5 = TRISEbits.
      +                          TRISE1 = 0);
  3661   000EAE  9296               	bcf	150,1,c	;volatile
  3662   000EB0  9A94               	bcf	148,5,c	;volatile
  3663   000EB2  9694               	bcf	148,3,c	;volatile
  3664   000EB4  9294               	bcf	148,1,c	;volatile
  3665                           
  3666                           ;TTECLAT.c: 49:     estat_teclat = 0;
  3667   000EB6  0E00               	movlw	0
  3668   000EB8  6E30               	movwf	_estat_teclat^0,c
  3669                           
  3670                           ;TTECLAT.c: 50:     hi_ha_tecla = 0;
  3671   000EBA  0E00               	movlw	0
  3672   000EBC  6E2D               	movwf	_hi_ha_tecla^0,c
  3673                           
  3674                           ;TTECLAT.c: 51:     caracters_escrits = -1;
  3675   000EBE  6829               	setf	_caracters_escrits^0,c
  3676                           
  3677                           ;TTECLAT.c: 52:     espera = 0;
  3678   000EC0  0E00               	movlw	0
  3679   000EC2  6E2A               	movwf	_espera^0,c
  3680   000EC4  0012               	return		;funcret
  3681   000EC6                     __end_of_initTeclat:
  3682                           	callstack 0
  3683                           
  3684 ;; *************** function _initMicro *****************
  3685 ;; Defined at:
  3686 ;;		line 25 in file "TRECORDING.c"
  3687 ;; Parameters:    Size  Location     Type
  3688 ;;		None
  3689 ;; Auto vars:     Size  Location     Type
  3690 ;;		None
  3691 ;; Return value:  Size  Location     Type
  3692 ;;                  1    wreg      void 
  3693 ;; Registers used:
  3694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3695 ;; Tracked objects:
  3696 ;;		On entry : 0/0
  3697 ;;		On exit  : 3F/0
  3698 ;;		Unchanged: 0/0
  3699 ;; Data sizes:     COMRAM   BANK0   BANK1
  3700 ;;      Params:         0       0       0
  3701 ;;      Locals:         0       0       0
  3702 ;;      Temps:          0       0       0
  3703 ;;      Totals:         0       0       0
  3704 ;;Total ram usage:        0 bytes
  3705 ;; Hardware stack levels used: 1
  3706 ;; Hardware stack levels required when called: 3
  3707 ;; This function calls:
  3708 ;;		_TI_NewTimer
  3709 ;;		_TI_ResetTics
  3710 ;; This function is called by:
  3711 ;;		_main
  3712 ;; This function uses a non-reentrant model
  3713 ;;
  3714                           
  3715                           	psect	text20
  3716   001042                     __ptext20:
  3717                           	callstack 0
  3718   001042                     _initMicro:
  3719                           	callstack 27
  3720                           
  3721                           ;TRECORDING.c: 26:     TI_NewTimer(&TimerRecordingADC);
  3722                           
  3723                           ;incstack = 0
  3724   001042  0E5B               	movlw	low _TimerRecordingADC
  3725   001044  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  3726   001046  EC26  F007         	call	_TI_NewTimer	;wreg free
  3727                           
  3728                           ;TRECORDING.c: 27:     TI_ResetTics (TimerRecordingADC);
  3729   00104A  505B               	movf	_TimerRecordingADC^0,w,c
  3730   00104C  ECF2  F007         	call	_TI_ResetTics
  3731                           
  3732                           ;TRECORDING.c: 28:     mostres = 0;
  3733   001050  0E00               	movlw	0
  3734   001052  0100               	movlb	0	; () banked
  3735   001054  6FDE               	movwf	(_mostres+1)& (0+255),b
  3736   001056  0E00               	movlw	0
  3737   001058  6FDD               	movwf	_mostres& (0+255),b
  3738                           
  3739                           ; BSR set to: 0
  3740   00105A  0012               	return		;funcret
  3741   00105C                     __end_of_initMicro:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _initEEPROM *****************
  3745 ;; Defined at:
  3746 ;;		line 28 in file "TEEPROM.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2
  3755 ;; Tracked objects:
  3756 ;;		On entry : 3F/0
  3757 ;;		On exit  : 3F/0
  3758 ;;		Unchanged: 3F/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1
  3760 ;;      Params:         0       0       0
  3761 ;;      Locals:         0       0       0
  3762 ;;      Temps:          0       0       0
  3763 ;;      Totals:         0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 2
  3767 ;; This function calls:
  3768 ;;		Nothing
  3769 ;; This function is called by:
  3770 ;;		_main
  3771 ;; This function uses a non-reentrant model
  3772 ;;
  3773                           
  3774                           	psect	text21
  3775   0010A4                     __ptext21:
  3776                           	callstack 0
  3777   0010A4                     _initEEPROM:
  3778                           	callstack 28
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;TEEPROM.c: 29:     EECON1bits.EEPGD = 0;
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;incstack = 0
  3785   0010A4  9EA6               	bcf	166,7,c	;volsfr
  3786                           
  3787                           ;TEEPROM.c: 30:     EECON1bits.CFGS = 0;
  3788   0010A6  9CA6               	bcf	166,6,c	;volsfr
  3789                           
  3790                           ; BSR set to: 0
  3791                           ;TEEPROM.c: 31:     EEADR = 0;
  3792   0010A8  0E00               	movlw	0
  3793   0010AA  6EA9               	movwf	169,c	;volatile
  3794                           
  3795                           ; BSR set to: 0
  3796   0010AC  0012               	return		;funcret
  3797   0010AE                     __end_of_initEEPROM:
  3798                           	callstack 0
  3799                           
  3800 ;; *************** function _TI_Init *****************
  3801 ;; Defined at:
  3802 ;;		line 36 in file "TTIMER.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  counter         1    0[COMRAM] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1
  3816 ;;      Params:         0       0       0
  3817 ;;      Locals:         1       0       0
  3818 ;;      Temps:          0       0       0
  3819 ;;      Totals:         1       0       0
  3820 ;;Total ram usage:        1 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; Hardware stack levels required when called: 2
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text22
  3831   000F92                     __ptext22:
  3832                           	callstack 0
  3833   000F92                     _TI_Init:
  3834                           	callstack 28
  3835                           
  3836                           ;TTIMER.c: 37:  for (unsigned char counter=0; counter<9; counter++) {
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;incstack = 0
  3840   000F92  0E00               	movlw	0
  3841   000F94  6E64               	movwf	TI_Init@counter^0,c
  3842   000F96                     l2910:
  3843                           
  3844                           ;TTIMER.c: 38:   Timers[counter].Busy=0;
  3845   000F96  5064               	movf	TI_Init@counter^0,w,c
  3846   000F98  0D05               	mullw	5
  3847   000F9A  50F3               	movf	243,w,c
  3848   000F9C  0F84               	addlw	low (_Timers+4)
  3849   000F9E  6ED9               	movwf	fsr2l,c
  3850   000FA0  6ADA               	clrf	fsr2h,c
  3851   000FA2  6ADF               	clrf	indf2,c
  3852                           
  3853                           ;TTIMER.c: 39:  }
  3854   000FA4  2A64               	incf	TI_Init@counter^0,f,c
  3855   000FA6  0E08               	movlw	8
  3856   000FA8  6464               	cpfsgt	TI_Init@counter^0,c
  3857   000FAA  D7F5               	goto	l2910
  3858                           
  3859                           ;TTIMER.c: 40:  T0CON = 0x88;
  3860   000FAC  0E88               	movlw	136
  3861   000FAE  6ED5               	movwf	213,c	;volatile
  3862                           
  3863                           ;TTIMER.c: 41:     TMR0 = 64536;
  3864   000FB0  0EFC               	movlw	252
  3865   000FB2  6ED7               	movwf	215,c	;volatile
  3866   000FB4  0E18               	movlw	24
  3867   000FB6  6ED6               	movwf	214,c	;volatile
  3868                           
  3869                           ;TTIMER.c: 42:  INTCONbits.TMR0IF = 0;
  3870   000FB8  94F2               	bcf	242,2,c	;volatile
  3871                           
  3872                           ;TTIMER.c: 43:  INTCONbits.TMR0IE = 1;
  3873   000FBA  8AF2               	bsf	242,5,c	;volatile
  3874   000FBC  0012               	return		;funcret
  3875   000FBE                     __end_of_TI_Init:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _Menu_Init *****************
  3879 ;; Defined at:
  3880 ;;		line 121 in file "TMENU.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1
  3894 ;;      Params:         0       0       0
  3895 ;;      Locals:         0       0       0
  3896 ;;      Temps:          0       0       0
  3897 ;;      Totals:         0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 3
  3901 ;; This function calls:
  3902 ;;		_TI_NewTimer
  3903 ;;		_TI_ResetTics
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text23
  3910   000EC6                     __ptext23:
  3911                           	callstack 0
  3912   000EC6                     _Menu_Init:
  3913                           	callstack 27
  3914                           
  3915                           ;TMENU.c: 122:     estat_menu = 0;
  3916                           
  3917                           ;incstack = 0
  3918   000EC6  0E00               	movlw	0
  3919   000EC8  6E49               	movwf	_estat_menu^0,c
  3920                           
  3921                           ;TMENU.c: 123:     flag_putstring = 0;
  3922   000ECA  0E00               	movlw	0
  3923   000ECC  6E45               	movwf	_flag_putstring^0,c
  3924                           
  3925                           ;TMENU.c: 124:     flag_startmenu = 0;
  3926   000ECE  0E00               	movlw	0
  3927   000ED0  6E42               	movwf	_flag_startmenu^0,c
  3928                           
  3929                           ;TMENU.c: 125:     TI_NewTimer(&TimerRecording);
  3930   000ED2  0E62               	movlw	low _TimerRecording
  3931   000ED4  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  3932   000ED6  EC26  F007         	call	_TI_NewTimer	;wreg free
  3933                           
  3934                           ;TMENU.c: 126:     TI_ResetTics (TimerRecording);
  3935   000EDA  5062               	movf	_TimerRecording^0,w,c
  3936   000EDC  ECF2  F007         	call	_TI_ResetTics
  3937                           
  3938                           ;TMENU.c: 127:     TI_NewTimer(&TimerMarquesina);
  3939   000EE0  0E61               	movlw	low _TimerMarquesina
  3940   000EE2  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  3941   000EE4  EC26  F007         	call	_TI_NewTimer	;wreg free
  3942                           
  3943                           ;TMENU.c: 128:     TI_ResetTics (TimerMarquesina);
  3944   000EE8  5061               	movf	_TimerMarquesina^0,w,c
  3945   000EEA  ECF2  F007         	call	_TI_ResetTics
  3946                           
  3947                           ;TMENU.c: 129:     TI_NewTimer(&timer_2s);
  3948   000EEE  0E60               	movlw	low _timer_2s
  3949   000EF0  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  3950   000EF2  EC26  F007         	call	_TI_NewTimer	;wreg free
  3951                           
  3952                           ;TMENU.c: 130:     TI_ResetTics (timer_2s);
  3953   000EF6  5060               	movf	_timer_2s^0,w,c
  3954   000EF8  ECF2  F007         	call	_TI_ResetTics
  3955                           
  3956                           ;TMENU.c: 131:     tower_name_position = 0;
  3957   000EFC  0E00               	movlw	0
  3958   000EFE  6E47               	movwf	_tower_name_position^0,c
  3959   000F00  0012               	return		;funcret
  3960   000F02                     __end_of_Menu_Init:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function _LcInit *****************
  3964 ;; Defined at:
  3965 ;;		line 68 in file "LCD.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  rows            1    wreg     unsigned char 
  3968 ;;  columns         1   21[COMRAM] unsigned char 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  rows            1   22[COMRAM] unsigned char 
  3971 ;;  i               2   23[COMRAM] int 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1
  3981 ;;      Params:         1       0       0
  3982 ;;      Locals:         3       0       0
  3983 ;;      Temps:          0       0       0
  3984 ;;      Totals:         4       0       0
  3985 ;;Total ram usage:        4 bytes
  3986 ;; Hardware stack levels used: 1
  3987 ;; Hardware stack levels required when called: 4
  3988 ;; This function calls:
  3989 ;;		_CantaIR
  3990 ;;		_EscriuPrimeraOrdre
  3991 ;;		_Espera
  3992 ;;		_TI_NewTimer
  3993 ;;		_WaitForBusy
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text24
  4000   0006D4                     __ptext24:
  4001                           	callstack 0
  4002   0006D4                     _LcInit:
  4003                           	callstack 26
  4004                           
  4005                           ;incstack = 0
  4006                           ;LcInit@rows stored from wreg
  4007   0006D4  6E7A               	movwf	LcInit@rows^0,c
  4008                           
  4009                           ;LCD.c: 75:  int i;;LCD.c: 76:  TI_NewTimer(&Timer);
  4010   0006D6  0E63               	movlw	low _Timer
  4011   0006D8  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  4012   0006DA  EC26  F007         	call	_TI_NewTimer	;wreg free
  4013                           
  4014                           ;LCD.c: 77:  Rows = rows; Columns = columns;
  4015   0006DE  C07A  F05A         	movff	LcInit@rows,_Rows
  4016   0006E2  C079  F059         	movff	LcInit@columns,_Columns
  4017                           
  4018                           ;LCD.c: 78:  RowAct = ColumnAct = 0;
  4019   0006E6  0E00               	movlw	0
  4020   0006E8  6E57               	movwf	_ColumnAct^0,c
  4021   0006EA  C057  F058         	movff	_ColumnAct,_RowAct
  4022                           
  4023                           ;LCD.c: 79:  (TRISBbits.TRISB0 = TRISBbits.TRISB1 = TRISBbits.TRISB2 = 0);
  4024   0006EE  9493               	bcf	147,2,c	;volatile
  4025   0006F0  9293               	bcf	147,1,c	;volatile
  4026   0006F2  9093               	bcf	147,0,c	;volatile
  4027                           
  4028                           ;LCD.c: 80:  for (i = 0; i < 2; i++) {
  4029   0006F4  0E00               	movlw	0
  4030   0006F6  6E7C               	movwf	(LcInit@i+1)^0,c
  4031   0006F8  0E00               	movlw	0
  4032   0006FA  6E7B               	movwf	LcInit@i^0,c
  4033   0006FC                     l2938:
  4034                           
  4035                           ;LCD.c: 81:   Espera(Timer, 100);
  4036   0006FC  0E00               	movlw	0
  4037   0006FE  6E71               	movwf	(Espera@ms+1)^0,c
  4038   000700  0E64               	movlw	100
  4039   000702  6E70               	movwf	Espera@ms^0,c
  4040   000704  5063               	movf	_Timer^0,w,c
  4041   000706  EC6B  F006         	call	_Espera
  4042                           
  4043                           ;LCD.c: 84:   EscriuPrimeraOrdre(0x02 | 0x01);
  4044   00070A  0E03               	movlw	3
  4045   00070C  EC5F  F005         	call	_EscriuPrimeraOrdre
  4046                           
  4047                           ;LCD.c: 85:   Espera(Timer, 5);
  4048   000710  0E00               	movlw	0
  4049   000712  6E71               	movwf	(Espera@ms+1)^0,c
  4050   000714  0E05               	movlw	5
  4051   000716  6E70               	movwf	Espera@ms^0,c
  4052   000718  5063               	movf	_Timer^0,w,c
  4053   00071A  EC6B  F006         	call	_Espera
  4054                           
  4055                           ;LCD.c: 86:   EscriuPrimeraOrdre(0x02 | 0x01);
  4056   00071E  0E03               	movlw	3
  4057   000720  EC5F  F005         	call	_EscriuPrimeraOrdre
  4058                           
  4059                           ;LCD.c: 87:   Espera(Timer, 1);
  4060   000724  0E00               	movlw	0
  4061   000726  6E71               	movwf	(Espera@ms+1)^0,c
  4062   000728  0E01               	movlw	1
  4063   00072A  6E70               	movwf	Espera@ms^0,c
  4064   00072C  5063               	movf	_Timer^0,w,c
  4065   00072E  EC6B  F006         	call	_Espera
  4066                           
  4067                           ;LCD.c: 88:   EscriuPrimeraOrdre(0x02 | 0x01);
  4068   000732  0E03               	movlw	3
  4069   000734  EC5F  F005         	call	_EscriuPrimeraOrdre
  4070                           
  4071                           ;LCD.c: 89:   Espera(Timer, 1);
  4072   000738  0E00               	movlw	0
  4073   00073A  6E71               	movwf	(Espera@ms+1)^0,c
  4074   00073C  0E01               	movlw	1
  4075   00073E  6E70               	movwf	Espera@ms^0,c
  4076   000740  5063               	movf	_Timer^0,w,c
  4077   000742  EC6B  F006         	call	_Espera
  4078                           
  4079                           ;LCD.c: 92:   EscriuPrimeraOrdre(0x02);
  4080   000746  0E02               	movlw	2
  4081   000748  EC5F  F005         	call	_EscriuPrimeraOrdre
  4082                           
  4083                           ;LCD.c: 93:   Espera(Timer, 1);
  4084   00074C  0E00               	movlw	0
  4085   00074E  6E71               	movwf	(Espera@ms+1)^0,c
  4086   000750  0E01               	movlw	1
  4087   000752  6E70               	movwf	Espera@ms^0,c
  4088   000754  5063               	movf	_Timer^0,w,c
  4089   000756  EC6B  F006         	call	_Espera
  4090                           
  4091                           ;LCD.c: 94:   CantaIR(0x20 | 0x08);
  4092   00075A  0E28               	movlw	40
  4093   00075C  EC9A  F007         	call	_CantaIR
  4094                           
  4095                           ;LCD.c: 97:   WaitForBusy(); CantaIR(0x08);
  4096   000760  EC97  F006         	call	_WaitForBusy	;wreg free
  4097   000764  0E08               	movlw	8
  4098   000766  EC9A  F007         	call	_CantaIR
  4099                           
  4100                           ;LCD.c: 98:   WaitForBusy(); CantaIR(0x01);
  4101   00076A  EC97  F006         	call	_WaitForBusy	;wreg free
  4102   00076E  0E01               	movlw	1
  4103   000770  EC9A  F007         	call	_CantaIR
  4104                           
  4105                           ;LCD.c: 99:   Espera(Timer,3);
  4106   000774  0E00               	movlw	0
  4107   000776  6E71               	movwf	(Espera@ms+1)^0,c
  4108   000778  0E03               	movlw	3
  4109   00077A  6E70               	movwf	Espera@ms^0,c
  4110   00077C  5063               	movf	_Timer^0,w,c
  4111   00077E  EC6B  F006         	call	_Espera
  4112                           
  4113                           ;LCD.c: 100:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4114   000782  EC97  F006         	call	_WaitForBusy	;wreg free
  4115   000786  0E06               	movlw	6
  4116   000788  EC9A  F007         	call	_CantaIR
  4117                           
  4118                           ;LCD.c: 101:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4119   00078C  EC97  F006         	call	_WaitForBusy	;wreg free
  4120   000790  0E0F               	movlw	15
  4121   000792  EC9A  F007         	call	_CantaIR
  4122                           
  4123                           ;LCD.c: 102:  }
  4124   000796  4A7B               	infsnz	LcInit@i^0,f,c
  4125   000798  2A7C               	incf	(LcInit@i+1)^0,f,c
  4126   00079A  BE7C               	btfsc	(LcInit@i+1)^0,7,c
  4127   00079C  D7AF               	goto	l2938
  4128   00079E  507C               	movf	(LcInit@i+1)^0,w,c
  4129   0007A0  E105               	bnz	u1750
  4130   0007A2  0E02               	movlw	2
  4131   0007A4  5C7B               	subwf	LcInit@i^0,w,c
  4132   0007A6  B0D8               	btfsc	status,0,c
  4133   0007A8  0012               	return	
  4134   0007AA  D7A8               	goto	l2938
  4135   0007AC                     u1750:
  4136   0007AC  0012               	return		;funcret
  4137   0007AE                     __end_of_LcInit:
  4138                           	callstack 0
  4139                           
  4140 ;; *************** function _WaitForBusy *****************
  4141 ;; Defined at:
  4142 ;;		line 295 in file "LCD.c"
  4143 ;; Parameters:    Size  Location     Type
  4144 ;;		None
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  Busy            1   12[COMRAM] unsigned char 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  1    wreg      void 
  4149 ;; Registers used:
  4150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMRAM   BANK0   BANK1
  4156 ;;      Params:         0       0       0
  4157 ;;      Locals:         1       0       0
  4158 ;;      Temps:          0       0       0
  4159 ;;      Totals:         1       0       0
  4160 ;;Total ram usage:        1 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; Hardware stack levels required when called: 3
  4163 ;; This function calls:
  4164 ;;		_TI_GetTics
  4165 ;;		_TI_ResetTics
  4166 ;; This function is called by:
  4167 ;;		_LcInit
  4168 ;;		_LcClear
  4169 ;;		_LcGotoXY
  4170 ;;		_LcPutChar
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text25
  4175   000D2E                     __ptext25:
  4176                           	callstack 0
  4177   000D2E                     _WaitForBusy:
  4178                           	callstack 24
  4179                           
  4180                           ;LCD.c: 296:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 1);
  4181                           
  4182                           ;incstack = 0
  4183   000D2E  8096               	bsf	150,0,c	;volatile
  4184   000D30  8A93               	bsf	147,5,c	;volatile
  4185   000D32  8893               	bsf	147,4,c	;volatile
  4186   000D34  8693               	bsf	147,3,c	;volatile
  4187                           
  4188                           ;LCD.c: 297:  (LATBbits.LATB0 = 0);
  4189   000D36  908A               	bcf	138,0,c	;volatile
  4190                           
  4191                           ;LCD.c: 298:  (LATBbits.LATB1 = 1);
  4192   000D38  828A               	bsf	138,1,c	;volatile
  4193                           
  4194                           ;LCD.c: 299:  TI_ResetTics(Timer);
  4195   000D3A  5063               	movf	_Timer^0,w,c
  4196   000D3C  ECF2  F007         	call	_TI_ResetTics
  4197   000D40                     l2558:
  4198                           
  4199                           ;LCD.c: 301:   (LATBbits.LATB2 = 1);(LATBbits.LATB2 = 1);
  4200   000D40  848A               	bsf	138,2,c	;volatile
  4201   000D42  848A               	bsf	138,2,c	;volatile
  4202                           
  4203                           ;LCD.c: 302:   Busy = (PORTEbits.RE0);
  4204   000D44  0E00               	movlw	0
  4205   000D46  B084               	btfsc	132,0,c	;volatile
  4206   000D48  0E01               	movlw	1
  4207   000D4A  6E70               	movwf	WaitForBusy@Busy^0,c
  4208                           
  4209                           ;LCD.c: 303:   (LATBbits.LATB2 = 0);
  4210   000D4C  948A               	bcf	138,2,c	;volatile
  4211                           
  4212                           ;LCD.c: 304:   (LATBbits.LATB2 = 0);
  4213   000D4E  948A               	bcf	138,2,c	;volatile
  4214                           
  4215                           ;LCD.c: 305:   (LATBbits.LATB2 = 1);(LATBbits.LATB2 = 1);
  4216   000D50  848A               	bsf	138,2,c	;volatile
  4217   000D52  848A               	bsf	138,2,c	;volatile
  4218                           
  4219                           ;LCD.c: 307:   (LATBbits.LATB2 = 0);
  4220   000D54  948A               	bcf	138,2,c	;volatile
  4221                           
  4222                           ;LCD.c: 308:   (LATBbits.LATB2 = 0);
  4223   000D56  948A               	bcf	138,2,c	;volatile
  4224                           
  4225                           ;LCD.c: 309:   if (TI_GetTics(Timer)) break;
  4226   000D58  5063               	movf	_Timer^0,w,c
  4227   000D5A  6E64               	movwf	TI_GetTics@TimerHandle^0,c
  4228   000D5C  6A65               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  4229   000D5E  6A66               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  4230   000D60  6A67               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  4231   000D62  ECBD  F006         	call	_TI_GetTics	;wreg free
  4232   000D66  5064               	movf	?_TI_GetTics^0,w,c
  4233   000D68  1065               	iorwf	(?_TI_GetTics+1)^0,w,c
  4234   000D6A  1066               	iorwf	(?_TI_GetTics+2)^0,w,c
  4235   000D6C  1067               	iorwf	(?_TI_GetTics+3)^0,w,c
  4236   000D6E  A4D8               	btfss	status,2,c
  4237   000D70  0012               	return	
  4238                           
  4239                           ;LCD.c: 310:  } while(Busy);
  4240   000D72  5070               	movf	WaitForBusy@Busy^0,w,c
  4241   000D74  B4D8               	btfsc	status,2,c
  4242   000D76  0012               	return	
  4243   000D78  D7E3               	goto	l2558
  4244   000D7A                     __end_of_WaitForBusy:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _Espera *****************
  4248 ;; Defined at:
  4249 ;;		line 244 in file "LCD.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  Timer           1    wreg     unsigned char 
  4252 ;;  ms              2   12[COMRAM] int 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  Timer           1   20[COMRAM] unsigned char 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  1    wreg      void 
  4257 ;; Registers used:
  4258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMRAM   BANK0   BANK1
  4264 ;;      Params:         2       0       0
  4265 ;;      Locals:         1       0       0
  4266 ;;      Temps:          6       0       0
  4267 ;;      Totals:         9       0       0
  4268 ;;Total ram usage:        9 bytes
  4269 ;; Hardware stack levels used: 1
  4270 ;; Hardware stack levels required when called: 3
  4271 ;; This function calls:
  4272 ;;		_TI_GetTics
  4273 ;;		_TI_ResetTics
  4274 ;; This function is called by:
  4275 ;;		_LcInit
  4276 ;;		_LcClear
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text26
  4281   000CD6                     __ptext26:
  4282                           	callstack 0
  4283   000CD6                     _Espera:
  4284                           	callstack 25
  4285                           
  4286                           ;incstack = 0
  4287                           ;Espera@Timer stored from wreg
  4288   000CD6  6E78               	movwf	Espera@Timer^0,c
  4289                           
  4290                           ;LCD.c: 245:  TI_ResetTics(Timer);
  4291   000CD8  5078               	movf	Espera@Timer^0,w,c
  4292   000CDA  ECF2  F007         	call	_TI_ResetTics
  4293   000CDE                     l2636:
  4294   000CDE  C070  F072         	movff	Espera@ms,??_Espera
  4295   000CE2  C071  F073         	movff	Espera@ms+1,??_Espera+1
  4296   000CE6  3A72               	swapf	??_Espera^0,f,c
  4297   000CE8  3A73               	swapf	(??_Espera+1)^0,f,c
  4298   000CEA  0EF0               	movlw	240
  4299   000CEC  1673               	andwf	(??_Espera+1)^0,f,c
  4300   000CEE  5072               	movf	??_Espera^0,w,c
  4301   000CF0  0B0F               	andlw	15
  4302   000CF2  1273               	iorwf	(??_Espera+1)^0,f,c
  4303   000CF4  0EF0               	movlw	240
  4304   000CF6  1672               	andwf	??_Espera^0,f,c
  4305   000CF8  C072  F074         	movff	??_Espera,??_Espera+2
  4306   000CFC  C073  F075         	movff	??_Espera+1,??_Espera+3
  4307   000D00  0E00               	movlw	0
  4308   000D02  BE75               	btfsc	(??_Espera+3)^0,7,c
  4309   000D04  0EFF               	movlw	255
  4310   000D06  6E76               	movwf	(??_Espera+4)^0,c
  4311   000D08  6E77               	movwf	(??_Espera+5)^0,c
  4312   000D0A  5078               	movf	Espera@Timer^0,w,c
  4313   000D0C  6E64               	movwf	TI_GetTics@TimerHandle^0,c
  4314   000D0E  6A65               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  4315   000D10  6A66               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  4316   000D12  6A67               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  4317   000D14  ECBD  F006         	call	_TI_GetTics	;wreg free
  4318   000D18  5074               	movf	(??_Espera+2)^0,w,c
  4319   000D1A  5C64               	subwf	?_TI_GetTics^0,w,c
  4320   000D1C  5075               	movf	(??_Espera+3)^0,w,c
  4321   000D1E  5865               	subwfb	(?_TI_GetTics+1)^0,w,c
  4322   000D20  5076               	movf	(??_Espera+4)^0,w,c
  4323   000D22  5866               	subwfb	(?_TI_GetTics+2)^0,w,c
  4324   000D24  5077               	movf	(??_Espera+5)^0,w,c
  4325   000D26  5867               	subwfb	(?_TI_GetTics+3)^0,w,c
  4326   000D28  B0D8               	btfsc	status,0,c
  4327   000D2A  0012               	return	
  4328   000D2C  D7D8               	goto	l2636
  4329   000D2E                     __end_of_Espera:
  4330                           	callstack 0
  4331                           
  4332 ;; *************** function _TI_GetTics *****************
  4333 ;; Defined at:
  4334 ;;		line 62 in file "TTIMER.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;  TimerHandle     4    0[COMRAM] unsigned long 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  CopiaTicsAct    4    8[COMRAM] unsigned long 
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  4    0[COMRAM] unsigned long 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1
  4348 ;;      Params:         4       0       0
  4349 ;;      Locals:         4       0       0
  4350 ;;      Temps:          4       0       0
  4351 ;;      Totals:        12       0       0
  4352 ;;Total ram usage:       12 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 2
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_Espera
  4359 ;;		_WaitForBusy
  4360 ;;		_writeCaracter
  4361 ;;		_motorTeclat
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text27
  4366   000D7A                     __ptext27:
  4367                           	callstack 0
  4368   000D7A                     _TI_GetTics:
  4369                           	callstack 26
  4370                           
  4371                           ;TTIMER.c: 63:     (INTCONbits.GIE = 0); unsigned long CopiaTicsActual=Tics; (INTCONbits
      +                          .GIE = 1);
  4372                           
  4373                           ;incstack = 0
  4374   000D7A  9EF2               	bcf	242,7,c	;volatile
  4375   000D7C  C005  F06C         	movff	_Tics,TI_GetTics@CopiaTicsActual	;volatile
  4376   000D80  C006  F06D         	movff	_Tics+1,TI_GetTics@CopiaTicsActual+1	;volatile
  4377   000D84  C007  F06E         	movff	_Tics+2,TI_GetTics@CopiaTicsActual+2	;volatile
  4378   000D88  C008  F06F         	movff	_Tics+3,TI_GetTics@CopiaTicsActual+3	;volatile
  4379   000D8C  8EF2               	bsf	242,7,c	;volatile
  4380                           
  4381                           ;TTIMER.c: 64:  return (CopiaTicsActual-(Timers[TimerHandle].TicsInicials));
  4382   000D8E  5064               	movf	TI_GetTics@TimerHandle^0,w,c
  4383   000D90  0D05               	mullw	5
  4384   000D92  50F3               	movf	243,w,c
  4385   000D94  0F80               	addlw	low _Timers
  4386   000D96  6ED9               	movwf	fsr2l,c
  4387   000D98  6ADA               	clrf	fsr2h,c
  4388   000D9A  CFDE F068          	movff	postinc2,??_TI_GetTics
  4389   000D9E  CFDE F069          	movff	postinc2,??_TI_GetTics+1
  4390   000DA2  CFDE F06A          	movff	postinc2,??_TI_GetTics+2
  4391   000DA6  CFDE F06B          	movff	postinc2,??_TI_GetTics+3
  4392   000DAA  5068               	movf	??_TI_GetTics^0,w,c
  4393   000DAC  5C6C               	subwf	TI_GetTics@CopiaTicsActual^0,w,c
  4394   000DAE  6E64               	movwf	?_TI_GetTics^0,c
  4395   000DB0  5069               	movf	(??_TI_GetTics+1)^0,w,c
  4396   000DB2  586D               	subwfb	(TI_GetTics@CopiaTicsActual+1)^0,w,c
  4397   000DB4  6E65               	movwf	(?_TI_GetTics+1)^0,c
  4398   000DB6  506A               	movf	(??_TI_GetTics+2)^0,w,c
  4399   000DB8  586E               	subwfb	(TI_GetTics@CopiaTicsActual+2)^0,w,c
  4400   000DBA  6E66               	movwf	(?_TI_GetTics+2)^0,c
  4401   000DBC  506B               	movf	(??_TI_GetTics+3)^0,w,c
  4402   000DBE  586F               	subwfb	(TI_GetTics@CopiaTicsActual+3)^0,w,c
  4403   000DC0  6E67               	movwf	(?_TI_GetTics+3)^0,c
  4404   000DC2  0012               	return		;funcret
  4405   000DC4                     __end_of_TI_GetTics:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _EscriuPrimeraOrdre *****************
  4409 ;; Defined at:
  4410 ;;		line 313 in file "LCD.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  ordre           1    wreg     unsigned char 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  ordre           1    1[COMRAM] unsigned char 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  1    wreg      void 
  4417 ;; Registers used:
  4418 ;;		wreg, status,2, status,0
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1
  4424 ;;      Params:         0       0       0
  4425 ;;      Locals:         1       0       0
  4426 ;;      Temps:          1       0       0
  4427 ;;      Totals:         2       0       0
  4428 ;;Total ram usage:        2 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 2
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_LcInit
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text28
  4439   000ABE                     __ptext28:
  4440                           	callstack 0
  4441   000ABE                     _EscriuPrimeraOrdre:
  4442                           	callstack 27
  4443                           
  4444                           ;incstack = 0
  4445                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4446   000ABE  6E65               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4447                           
  4448                           ;LCD.c: 315:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 0); (LATBbits.LATB0 = 0); (LATBbits.LATB1 = 0);
  4449   000AC0  9096               	bcf	150,0,c	;volatile
  4450   000AC2  9A93               	bcf	147,5,c	;volatile
  4451   000AC4  9893               	bcf	147,4,c	;volatile
  4452   000AC6  9693               	bcf	147,3,c	;volatile
  4453   000AC8  908A               	bcf	138,0,c	;volatile
  4454   000ACA  928A               	bcf	138,1,c	;volatile
  4455                           
  4456                           ;LCD.c: 316:  (LATBbits.LATB2 = 1); (LATBbits.LATB2 = 1);
  4457   000ACC  848A               	bsf	138,2,c	;volatile
  4458   000ACE  848A               	bsf	138,2,c	;volatile
  4459                           
  4460                           ;LCD.c: 317:   (LATEbits.LATE0 = (ordre & 0x08 ? 1 : 0));
  4461   000AD0  A665               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4462   000AD2  D003               	goto	u340
  4463   000AD4  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4464   000AD6  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  4465   000AD8  D001               	goto	u358
  4466   000ADA                     u340:
  4467   000ADA  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4468   000ADC                     u358:
  4469   000ADC  508D               	movf	141,w,c	;volatile
  4470   000ADE  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4471   000AE0  0BFE               	andlw	-2
  4472   000AE2  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4473   000AE4  6E8D               	movwf	141,c	;volatile
  4474                           
  4475                           ;LCD.c: 318:   (LATBbits.LATB5 = (ordre & 0x04 ? 1 : 0));
  4476   000AE6  A465               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4477   000AE8  D003               	goto	u360
  4478   000AEA  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4479   000AEC  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  4480   000AEE  D001               	goto	u378
  4481   000AF0                     u360:
  4482   000AF0  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4483   000AF2                     u378:
  4484   000AF2  3A64               	swapf	??_EscriuPrimeraOrdre^0,f,c
  4485   000AF4  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4486   000AF6  508A               	movf	138,w,c	;volatile
  4487   000AF8  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4488   000AFA  0BDF               	andlw	-33
  4489   000AFC  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4490   000AFE  6E8A               	movwf	138,c	;volatile
  4491                           
  4492                           ;LCD.c: 319:   (LATBbits.LATB4 = (ordre & 0x02 ? 1 : 0));
  4493   000B00  A265               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4494   000B02  D003               	goto	u380
  4495   000B04  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4496   000B06  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  4497   000B08  D001               	goto	u398
  4498   000B0A                     u380:
  4499   000B0A  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4500   000B0C                     u398:
  4501   000B0C  3A64               	swapf	??_EscriuPrimeraOrdre^0,f,c
  4502   000B0E  508A               	movf	138,w,c	;volatile
  4503   000B10  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4504   000B12  0BEF               	andlw	-17
  4505   000B14  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4506   000B16  6E8A               	movwf	138,c	;volatile
  4507                           
  4508                           ;LCD.c: 320:   (LATBbits.LATB3 = (ordre & 0x01 ? 1 : 0));
  4509   000B18  A065               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4510   000B1A  D003               	goto	u400
  4511   000B1C  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4512   000B1E  2A64               	incf	??_EscriuPrimeraOrdre^0,f,c
  4513   000B20  D001               	goto	u418
  4514   000B22                     u400:
  4515   000B22  6A64               	clrf	??_EscriuPrimeraOrdre^0,c
  4516   000B24                     u418:
  4517   000B24  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4518   000B26  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4519   000B28  4664               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4520   000B2A  508A               	movf	138,w,c	;volatile
  4521   000B2C  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4522   000B2E  0BF7               	andlw	-9
  4523   000B30  1864               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4524   000B32  6E8A               	movwf	138,c	;volatile
  4525                           
  4526                           ;LCD.c: 321:  (LATBbits.LATB2 = 0);
  4527   000B34  948A               	bcf	138,2,c	;volatile
  4528   000B36  0012               	return		;funcret
  4529   000B38                     __end_of_EscriuPrimeraOrdre:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _CantaIR *****************
  4533 ;; Defined at:
  4534 ;;		line 263 in file "LCD.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  IR              1    wreg     unsigned char 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  IR              1    2[COMRAM] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1
  4548 ;;      Params:         0       0       0
  4549 ;;      Locals:         1       0       0
  4550 ;;      Temps:          0       0       0
  4551 ;;      Totals:         1       0       0
  4552 ;;Total ram usage:        1 bytes
  4553 ;; Hardware stack levels used: 1
  4554 ;; Hardware stack levels required when called: 3
  4555 ;; This function calls:
  4556 ;;		_CantaPartAlta
  4557 ;;		_CantaPartBaixa
  4558 ;; This function is called by:
  4559 ;;		_LcInit
  4560 ;;		_LcClear
  4561 ;;		_LcGotoXY
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text29
  4566   000F34                     __ptext29:
  4567                           	callstack 0
  4568   000F34                     _CantaIR:
  4569                           	callstack 23
  4570                           
  4571                           ;incstack = 0
  4572                           ;CantaIR@IR stored from wreg
  4573   000F34  6E66               	movwf	CantaIR@IR^0,c
  4574                           
  4575                           ;LCD.c: 264:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 0);
  4576   000F36  9096               	bcf	150,0,c	;volatile
  4577   000F38  9A93               	bcf	147,5,c	;volatile
  4578   000F3A  9893               	bcf	147,4,c	;volatile
  4579   000F3C  9693               	bcf	147,3,c	;volatile
  4580                           
  4581                           ;LCD.c: 265:  (LATBbits.LATB0 = 0);
  4582   000F3E  908A               	bcf	138,0,c	;volatile
  4583                           
  4584                           ;LCD.c: 266:  (LATBbits.LATB1 = 0);
  4585   000F40  928A               	bcf	138,1,c	;volatile
  4586                           
  4587                           ;LCD.c: 267:  (LATBbits.LATB2 = 1);
  4588   000F42  848A               	bsf	138,2,c	;volatile
  4589                           
  4590                           ;LCD.c: 268:  CantaPartAlta(IR);
  4591   000F44  5066               	movf	CantaIR@IR^0,w,c
  4592   000F46  EC08  F006         	call	_CantaPartAlta
  4593                           
  4594                           ;LCD.c: 269:  (LATBbits.LATB2 = 1);
  4595   000F4A  848A               	bsf	138,2,c	;volatile
  4596                           
  4597                           ;LCD.c: 270:  (LATBbits.LATB2 = 0);
  4598   000F4C  948A               	bcf	138,2,c	;volatile
  4599                           
  4600                           ;LCD.c: 271:  (LATBbits.LATB2 = 0);
  4601   000F4E  948A               	bcf	138,2,c	;volatile
  4602                           
  4603                           ;LCD.c: 272:  (LATBbits.LATB2 = 1);
  4604   000F50  848A               	bsf	138,2,c	;volatile
  4605                           
  4606                           ;LCD.c: 273:  CantaPartBaixa(IR);
  4607   000F52  5066               	movf	CantaIR@IR^0,w,c
  4608   000F54  ECD4  F005         	call	_CantaPartBaixa
  4609                           
  4610                           ;LCD.c: 274:  (LATBbits.LATB2 = 1);
  4611   000F58  848A               	bsf	138,2,c	;volatile
  4612                           
  4613                           ;LCD.c: 275:  (LATBbits.LATB2 = 0);
  4614   000F5A  948A               	bcf	138,2,c	;volatile
  4615                           
  4616                           ;LCD.c: 276:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 1);
  4617   000F5C  8096               	bsf	150,0,c	;volatile
  4618   000F5E  8A93               	bsf	147,5,c	;volatile
  4619   000F60  8893               	bsf	147,4,c	;volatile
  4620   000F62  8693               	bsf	147,3,c	;volatile
  4621   000F64  0012               	return		;funcret
  4622   000F66                     __end_of_CantaIR:
  4623                           	callstack 0
  4624                           
  4625 ;; *************** function _CantaPartBaixa *****************
  4626 ;; Defined at:
  4627 ;;		line 256 in file "LCD.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  c               1    wreg     unsigned char 
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;  c               1    1[COMRAM] unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2, status,0
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1
  4641 ;;      Params:         0       0       0
  4642 ;;      Locals:         1       0       0
  4643 ;;      Temps:          1       0       0
  4644 ;;      Totals:         2       0       0
  4645 ;;Total ram usage:        2 bytes
  4646 ;; Hardware stack levels used: 1
  4647 ;; Hardware stack levels required when called: 2
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_CantaIR
  4652 ;;		_CantaData
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text30
  4657   000BA8                     __ptext30:
  4658                           	callstack 0
  4659   000BA8                     _CantaPartBaixa:
  4660                           	callstack 23
  4661                           
  4662                           ;incstack = 0
  4663                           ;CantaPartBaixa@c stored from wreg
  4664   000BA8  6E65               	movwf	CantaPartBaixa@c^0,c
  4665                           
  4666                           ;LCD.c: 257:   (LATEbits.LATE0 = (c & 0x08 ? 1 : 0));
  4667   000BAA  A665               	btfss	CantaPartBaixa@c^0,3,c
  4668   000BAC  D003               	goto	u1110
  4669   000BAE  6A64               	clrf	??_CantaPartBaixa^0,c
  4670   000BB0  2A64               	incf	??_CantaPartBaixa^0,f,c
  4671   000BB2  D001               	goto	u1128
  4672   000BB4                     u1110:
  4673   000BB4  6A64               	clrf	??_CantaPartBaixa^0,c
  4674   000BB6                     u1128:
  4675   000BB6  508D               	movf	141,w,c	;volatile
  4676   000BB8  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4677   000BBA  0BFE               	andlw	-2
  4678   000BBC  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4679   000BBE  6E8D               	movwf	141,c	;volatile
  4680                           
  4681                           ;LCD.c: 258:   (LATBbits.LATB5 = (c & 0x04 ? 1 : 0));
  4682   000BC0  A465               	btfss	CantaPartBaixa@c^0,2,c
  4683   000BC2  D003               	goto	u1130
  4684   000BC4  6A64               	clrf	??_CantaPartBaixa^0,c
  4685   000BC6  2A64               	incf	??_CantaPartBaixa^0,f,c
  4686   000BC8  D001               	goto	u1148
  4687   000BCA                     u1130:
  4688   000BCA  6A64               	clrf	??_CantaPartBaixa^0,c
  4689   000BCC                     u1148:
  4690   000BCC  3A64               	swapf	??_CantaPartBaixa^0,f,c
  4691   000BCE  4664               	rlncf	??_CantaPartBaixa^0,f,c
  4692   000BD0  508A               	movf	138,w,c	;volatile
  4693   000BD2  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4694   000BD4  0BDF               	andlw	-33
  4695   000BD6  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4696   000BD8  6E8A               	movwf	138,c	;volatile
  4697                           
  4698                           ;LCD.c: 259:   (LATBbits.LATB4 = (c & 0x02 ? 1 : 0));
  4699   000BDA  A265               	btfss	CantaPartBaixa@c^0,1,c
  4700   000BDC  D003               	goto	u1150
  4701   000BDE  6A64               	clrf	??_CantaPartBaixa^0,c
  4702   000BE0  2A64               	incf	??_CantaPartBaixa^0,f,c
  4703   000BE2  D001               	goto	u1168
  4704   000BE4                     u1150:
  4705   000BE4  6A64               	clrf	??_CantaPartBaixa^0,c
  4706   000BE6                     u1168:
  4707   000BE6  3A64               	swapf	??_CantaPartBaixa^0,f,c
  4708   000BE8  508A               	movf	138,w,c	;volatile
  4709   000BEA  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4710   000BEC  0BEF               	andlw	-17
  4711   000BEE  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4712   000BF0  6E8A               	movwf	138,c	;volatile
  4713                           
  4714                           ;LCD.c: 260:   (LATBbits.LATB3 = (c & 0x01 ? 1 : 0));
  4715   000BF2  A065               	btfss	CantaPartBaixa@c^0,0,c
  4716   000BF4  D003               	goto	u1170
  4717   000BF6  6A64               	clrf	??_CantaPartBaixa^0,c
  4718   000BF8  2A64               	incf	??_CantaPartBaixa^0,f,c
  4719   000BFA  D001               	goto	u1188
  4720   000BFC                     u1170:
  4721   000BFC  6A64               	clrf	??_CantaPartBaixa^0,c
  4722   000BFE                     u1188:
  4723   000BFE  4664               	rlncf	??_CantaPartBaixa^0,f,c
  4724   000C00  4664               	rlncf	??_CantaPartBaixa^0,f,c
  4725   000C02  4664               	rlncf	??_CantaPartBaixa^0,f,c
  4726   000C04  508A               	movf	138,w,c	;volatile
  4727   000C06  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4728   000C08  0BF7               	andlw	-9
  4729   000C0A  1864               	xorwf	??_CantaPartBaixa^0,w,c
  4730   000C0C  6E8A               	movwf	138,c	;volatile
  4731   000C0E  0012               	return		;funcret
  4732   000C10                     __end_of_CantaPartBaixa:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function _CantaPartAlta *****************
  4736 ;; Defined at:
  4737 ;;		line 249 in file "LCD.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  c               1    wreg     unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  c               1    1[COMRAM] unsigned char 
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1
  4751 ;;      Params:         0       0       0
  4752 ;;      Locals:         1       0       0
  4753 ;;      Temps:          1       0       0
  4754 ;;      Totals:         2       0       0
  4755 ;;Total ram usage:        2 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 2
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_CantaIR
  4762 ;;		_CantaData
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           	psect	text31
  4767   000C10                     __ptext31:
  4768                           	callstack 0
  4769   000C10                     _CantaPartAlta:
  4770                           	callstack 23
  4771                           
  4772                           ;incstack = 0
  4773                           ;CantaPartAlta@c stored from wreg
  4774   000C10  6E65               	movwf	CantaPartAlta@c^0,c
  4775                           
  4776                           ;LCD.c: 250:   (LATEbits.LATE0 = (c & 0x80 ? 1 : 0));
  4777   000C12  AE65               	btfss	CantaPartAlta@c^0,7,c
  4778   000C14  D003               	goto	u1030
  4779   000C16  6A64               	clrf	??_CantaPartAlta^0,c
  4780   000C18  2A64               	incf	??_CantaPartAlta^0,f,c
  4781   000C1A  D001               	goto	u1048
  4782   000C1C                     u1030:
  4783   000C1C  6A64               	clrf	??_CantaPartAlta^0,c
  4784   000C1E                     u1048:
  4785   000C1E  508D               	movf	141,w,c	;volatile
  4786   000C20  1864               	xorwf	??_CantaPartAlta^0,w,c
  4787   000C22  0BFE               	andlw	-2
  4788   000C24  1864               	xorwf	??_CantaPartAlta^0,w,c
  4789   000C26  6E8D               	movwf	141,c	;volatile
  4790                           
  4791                           ;LCD.c: 251:   (LATBbits.LATB5 = (c & 0x40 ? 1 : 0));
  4792   000C28  AC65               	btfss	CantaPartAlta@c^0,6,c
  4793   000C2A  D003               	goto	u1050
  4794   000C2C  6A64               	clrf	??_CantaPartAlta^0,c
  4795   000C2E  2A64               	incf	??_CantaPartAlta^0,f,c
  4796   000C30  D001               	goto	u1068
  4797   000C32                     u1050:
  4798   000C32  6A64               	clrf	??_CantaPartAlta^0,c
  4799   000C34                     u1068:
  4800   000C34  3A64               	swapf	??_CantaPartAlta^0,f,c
  4801   000C36  4664               	rlncf	??_CantaPartAlta^0,f,c
  4802   000C38  508A               	movf	138,w,c	;volatile
  4803   000C3A  1864               	xorwf	??_CantaPartAlta^0,w,c
  4804   000C3C  0BDF               	andlw	-33
  4805   000C3E  1864               	xorwf	??_CantaPartAlta^0,w,c
  4806   000C40  6E8A               	movwf	138,c	;volatile
  4807                           
  4808                           ;LCD.c: 252:   (LATBbits.LATB4 = (c & 0x20 ? 1 : 0));
  4809   000C42  AA65               	btfss	CantaPartAlta@c^0,5,c
  4810   000C44  D003               	goto	u1070
  4811   000C46  6A64               	clrf	??_CantaPartAlta^0,c
  4812   000C48  2A64               	incf	??_CantaPartAlta^0,f,c
  4813   000C4A  D001               	goto	u1088
  4814   000C4C                     u1070:
  4815   000C4C  6A64               	clrf	??_CantaPartAlta^0,c
  4816   000C4E                     u1088:
  4817   000C4E  3A64               	swapf	??_CantaPartAlta^0,f,c
  4818   000C50  508A               	movf	138,w,c	;volatile
  4819   000C52  1864               	xorwf	??_CantaPartAlta^0,w,c
  4820   000C54  0BEF               	andlw	-17
  4821   000C56  1864               	xorwf	??_CantaPartAlta^0,w,c
  4822   000C58  6E8A               	movwf	138,c	;volatile
  4823                           
  4824                           ;LCD.c: 253:   (LATBbits.LATB3 = (c & 0x10 ? 1 : 0));
  4825   000C5A  A865               	btfss	CantaPartAlta@c^0,4,c
  4826   000C5C  D003               	goto	u1090
  4827   000C5E  6A64               	clrf	??_CantaPartAlta^0,c
  4828   000C60  2A64               	incf	??_CantaPartAlta^0,f,c
  4829   000C62  D001               	goto	u1108
  4830   000C64                     u1090:
  4831   000C64  6A64               	clrf	??_CantaPartAlta^0,c
  4832   000C66                     u1108:
  4833   000C66  4664               	rlncf	??_CantaPartAlta^0,f,c
  4834   000C68  4664               	rlncf	??_CantaPartAlta^0,f,c
  4835   000C6A  4664               	rlncf	??_CantaPartAlta^0,f,c
  4836   000C6C  508A               	movf	138,w,c	;volatile
  4837   000C6E  1864               	xorwf	??_CantaPartAlta^0,w,c
  4838   000C70  0BF7               	andlw	-9
  4839   000C72  1864               	xorwf	??_CantaPartAlta^0,w,c
  4840   000C74  6E8A               	movwf	138,c	;volatile
  4841   000C76  0012               	return		;funcret
  4842   000C78                     __end_of_CantaPartAlta:
  4843                           	callstack 0
  4844                           
  4845 ;; *************** function _InitconfOsc *****************
  4846 ;; Defined at:
  4847 ;;		line 28 in file "newmain.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		wreg, status,2
  4856 ;; Tracked objects:
  4857 ;;		On entry : 0/0
  4858 ;;		On exit  : 0/0
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMRAM   BANK0   BANK1
  4861 ;;      Params:         0       0       0
  4862 ;;      Locals:         0       0       0
  4863 ;;      Temps:          0       0       0
  4864 ;;      Totals:         0       0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used: 1
  4867 ;; Hardware stack levels required when called: 2
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_main
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           	psect	text32
  4876   0010AE                     __ptext32:
  4877                           	callstack 0
  4878   0010AE                     _InitconfOsc:
  4879                           	callstack 28
  4880                           
  4881                           ;incstack = 0
  4882   0010AE  0E60               	movlw	96
  4883   0010B0  6ED3               	movwf	211,c	;volatile
  4884   0010B2  0E40               	movlw	64
  4885   0010B4  6E9B               	movwf	155,c	;volatile
  4886   0010B6  0012               	return		;funcret
  4887   0010B8                     __end_of_InitconfOsc:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _InitAltaveu *****************
  4891 ;; Defined at:
  4892 ;;		line 19 in file "TALTAVEU.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;		None
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1
  4906 ;;      Params:         0       0       0
  4907 ;;      Locals:         0       0       0
  4908 ;;      Temps:          0       0       0
  4909 ;;      Totals:         0       0       0
  4910 ;;Total ram usage:        0 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 3
  4913 ;; This function calls:
  4914 ;;		_TI_NewTimer
  4915 ;;		_TI_ResetTics
  4916 ;; This function is called by:
  4917 ;;		_main
  4918 ;; This function uses a non-reentrant model
  4919 ;;
  4920                           
  4921                           	psect	text33
  4922   000FBE                     __ptext33:
  4923                           	callstack 0
  4924   000FBE                     _InitAltaveu:
  4925                           	callstack 27
  4926                           
  4927                           ;TALTAVEU.c: 20:     TRISEbits.TRISE2 = 0;
  4928                           
  4929                           ;incstack = 0
  4930   000FBE  9496               	bcf	150,2,c	;volatile
  4931                           
  4932                           ;TALTAVEU.c: 21:     LATEbits.LATE2 = 0;
  4933   000FC0  948D               	bcf	141,2,c	;volatile
  4934                           
  4935                           ;TALTAVEU.c: 22:     TI_NewTimer(&TimerTiempoNota);
  4936   000FC2  0E5D               	movlw	low _TimerTiempoNota
  4937   000FC4  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  4938   000FC6  EC26  F007         	call	_TI_NewTimer	;wreg free
  4939                           
  4940                           ;TALTAVEU.c: 23:     TI_ResetTics (TimerTiempoNota);
  4941   000FCA  505D               	movf	_TimerTiempoNota^0,w,c
  4942   000FCC  ECF2  F007         	call	_TI_ResetTics
  4943                           
  4944                           ;TALTAVEU.c: 24:     TI_NewTimer(&TimerMelody);
  4945   000FD0  0E5C               	movlw	low _TimerMelody
  4946   000FD2  6E64               	movwf	TI_NewTimer@TimerHandle^0,c
  4947   000FD4  EC26  F007         	call	_TI_NewTimer	;wreg free
  4948                           
  4949                           ;TALTAVEU.c: 25:     TI_ResetTics (TimerMelody);
  4950   000FD8  505C               	movf	_TimerMelody^0,w,c
  4951   000FDA  ECF2  F007         	call	_TI_ResetTics
  4952                           
  4953                           ;TALTAVEU.c: 26:     p = 2;
  4954   000FDE  0E02               	movlw	2
  4955   000FE0  6E39               	movwf	_p^0,c
  4956   000FE2  0012               	return		;funcret
  4957   000FE4                     __end_of_InitAltaveu:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _TI_ResetTics *****************
  4961 ;; Defined at:
  4962 ;;		line 57 in file "TTIMER.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  TimerHandle     1    wreg     unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  TimerHandle     1    0[COMRAM] unsigned char 
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1
  4976 ;;      Params:         0       0       0
  4977 ;;      Locals:         1       0       0
  4978 ;;      Temps:          0       0       0
  4979 ;;      Totals:         1       0       0
  4980 ;;Total ram usage:        1 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 2
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_Espera
  4987 ;;		_WaitForBusy
  4988 ;;		_Menu_Init
  4989 ;;		_initTeclat
  4990 ;;		_motorTeclat
  4991 ;;		_InitAltaveu
  4992 ;;		_initMicro
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text34
  4997   000FE4                     __ptext34:
  4998                           	callstack 0
  4999   000FE4                     _TI_ResetTics:
  5000                           	callstack 24
  5001                           
  5002                           ;incstack = 0
  5003                           ;TI_ResetTics@TimerHandle stored from wreg
  5004   000FE4  6E64               	movwf	TI_ResetTics@TimerHandle^0,c
  5005                           
  5006                           ;TTIMER.c: 58:  (INTCONbits.GIE = 0); Timers[TimerHandle].TicsInicials=Tics; (INTCONbits
      +                          .GIE = 1);
  5007   000FE6  9EF2               	bcf	242,7,c	;volatile
  5008   000FE8  5064               	movf	TI_ResetTics@TimerHandle^0,w,c
  5009   000FEA  0D05               	mullw	5
  5010   000FEC  50F3               	movf	243,w,c
  5011   000FEE  0F80               	addlw	low _Timers
  5012   000FF0  6ED9               	movwf	fsr2l,c
  5013   000FF2  6ADA               	clrf	fsr2h,c
  5014   000FF4  C005  FFDE         	movff	_Tics,postinc2	;volatile
  5015   000FF8  C006  FFDE         	movff	_Tics+1,postinc2	;volatile
  5016   000FFC  C007  FFDE         	movff	_Tics+2,postinc2	;volatile
  5017   001000  C008  FFDE         	movff	_Tics+3,postinc2	;volatile
  5018   001004  8EF2               	bsf	242,7,c	;volatile
  5019   001006  0012               	return		;funcret
  5020   001008                     __end_of_TI_ResetTics:
  5021                           	callstack 0
  5022                           
  5023 ;; *************** function _TI_NewTimer *****************
  5024 ;; Defined at:
  5025 ;;		line 47 in file "TTIMER.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  TimerHandle     1    0[COMRAM] PTR unsigned char 
  5028 ;;		 -> TimerRecordingADC(1), TimerMelody(1), TimerTiempoNota(1), TimerCurrentTime(4), 
  5029 ;;		 -> Timer1S(1), TimerRebots(1), timer_2s(1), TimerRecording(1), 
  5030 ;;		 -> TimerMarquesina(1), Timer(1), 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  Comptador       1    2[COMRAM] unsigned char 
  5033 ;; Return value:  Size  Location     Type
  5034 ;;                  1    wreg      unsigned char 
  5035 ;; Registers used:
  5036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5037 ;; Tracked objects:
  5038 ;;		On entry : 0/0
  5039 ;;		On exit  : 0/0
  5040 ;;		Unchanged: 0/0
  5041 ;; Data sizes:     COMRAM   BANK0   BANK1
  5042 ;;      Params:         1       0       0
  5043 ;;      Locals:         1       0       0
  5044 ;;      Temps:          1       0       0
  5045 ;;      Totals:         3       0       0
  5046 ;;Total ram usage:        3 bytes
  5047 ;; Hardware stack levels used: 1
  5048 ;; Hardware stack levels required when called: 2
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_LcInit
  5053 ;;		_Menu_Init
  5054 ;;		_initTeclat
  5055 ;;		_InitAltaveu
  5056 ;;		_initMicro
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text35
  5061   000E4C                     __ptext35:
  5062                           	callstack 0
  5063   000E4C                     _TI_NewTimer:
  5064                           	callstack 27
  5065                           
  5066                           ;TTIMER.c: 48:  unsigned char Comptador=0;
  5067                           
  5068                           ;incstack = 0
  5069   000E4C  0E00               	movlw	0
  5070   000E4E  6E66               	movwf	TI_NewTimer@Comptador^0,c
  5071                           
  5072                           ;TTIMER.c: 49:  while (Timers[Comptador].Busy==1) {
  5073   000E50  D005               	goto	l2682
  5074   000E52                     l2678:
  5075                           
  5076                           ;TTIMER.c: 50:   if (++Comptador == 9) return (0);
  5077   000E52  2A66               	incf	TI_NewTimer@Comptador^0,f,c
  5078   000E54  0E09               	movlw	9
  5079   000E56  1866               	xorwf	TI_NewTimer@Comptador^0,w,c
  5080   000E58  B4D8               	btfsc	status,2,c
  5081   000E5A  0012               	return	
  5082   000E5C                     l2682:
  5083                           
  5084                           ;TTIMER.c: 49:  while (Timers[Comptador].Busy==1) {
  5085   000E5C  5066               	movf	TI_NewTimer@Comptador^0,w,c
  5086   000E5E  0D05               	mullw	5
  5087   000E60  50F3               	movf	243,w,c
  5088   000E62  0F84               	addlw	low (_Timers+4)
  5089   000E64  6ED9               	movwf	fsr2l,c
  5090   000E66  6ADA               	clrf	fsr2h,c
  5091   000E68  04DE               	decf	postinc2,w,c
  5092   000E6A  B4D8               	btfsc	status,2,c
  5093   000E6C  D7F2               	goto	l2678
  5094                           
  5095                           ;TTIMER.c: 52:  Timers[Comptador].Busy=1;
  5096   000E6E  5066               	movf	TI_NewTimer@Comptador^0,w,c
  5097   000E70  0D05               	mullw	5
  5098   000E72  50F3               	movf	243,w,c
  5099   000E74  0F84               	addlw	low (_Timers+4)
  5100   000E76  6ED9               	movwf	fsr2l,c
  5101   000E78  6ADA               	clrf	fsr2h,c
  5102   000E7A  0E01               	movlw	1
  5103   000E7C  6EDF               	movwf	indf2,c
  5104                           
  5105                           ;TTIMER.c: 53:  *TimerHandle=Comptador;
  5106   000E7E  5064               	movf	TI_NewTimer@TimerHandle^0,w,c
  5107   000E80  6ED9               	movwf	fsr2l,c
  5108   000E82  6ADA               	clrf	fsr2h,c
  5109   000E84  C066  FFDF         	movff	TI_NewTimer@Comptador,indf2
  5110   000E88  0012               	return		;funcret
  5111   000E8A                     __end_of_TI_NewTimer:
  5112                           	callstack 0
  5113                           
  5114 ;; *************** function _ADC_Init *****************
  5115 ;; Defined at:
  5116 ;;		line 13 in file "TJOYSTICK.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;		None
  5119 ;; Auto vars:     Size  Location     Type
  5120 ;;		None
  5121 ;; Return value:  Size  Location     Type
  5122 ;;                  1    wreg      void 
  5123 ;; Registers used:
  5124 ;;		wreg, status,2
  5125 ;; Tracked objects:
  5126 ;;		On entry : 0/0
  5127 ;;		On exit  : 0/0
  5128 ;;		Unchanged: 0/0
  5129 ;; Data sizes:     COMRAM   BANK0   BANK1
  5130 ;;      Params:         0       0       0
  5131 ;;      Locals:         0       0       0
  5132 ;;      Temps:          0       0       0
  5133 ;;      Totals:         0       0       0
  5134 ;;Total ram usage:        0 bytes
  5135 ;; Hardware stack levels used: 1
  5136 ;; Hardware stack levels required when called: 2
  5137 ;; This function calls:
  5138 ;;		Nothing
  5139 ;; This function is called by:
  5140 ;;		_main
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           	psect	text36
  5145   001086                     __ptext36:
  5146                           	callstack 0
  5147   001086                     _ADC_Init:
  5148                           	callstack 28
  5149                           
  5150                           ;TJOYSTICK.c: 14:     TRISAbits.TRISA1 = 1;
  5151                           
  5152                           ;incstack = 0
  5153   001086  8292               	bsf	146,1,c	;volatile
  5154                           
  5155                           ;TJOYSTICK.c: 15:  ADCON0 = 0x05;
  5156   001088  0E05               	movlw	5
  5157   00108A  6EC2               	movwf	194,c	;volatile
  5158                           
  5159                           ;TJOYSTICK.c: 16:  ADCON1 = 0x0C;
  5160   00108C  0E0C               	movlw	12
  5161   00108E  6EC1               	movwf	193,c	;volatile
  5162                           
  5163                           ;TJOYSTICK.c: 17:  ADCON2 = 0x09;
  5164   001090  0E09               	movlw	9
  5165   001092  6EC0               	movwf	192,c	;volatile
  5166   001094  0012               	return		;funcret
  5167   001096                     __end_of_ADC_Init:
  5168                           	callstack 0
  5169                           
  5170 ;; *************** function _my_interrupts *****************
  5171 ;; Defined at:
  5172 ;;		line 23 in file "newmain.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;		None
  5175 ;; Auto vars:     Size  Location     Type
  5176 ;;		None
  5177 ;; Return value:  Size  Location     Type
  5178 ;;                  1    wreg      void 
  5179 ;; Registers used:
  5180 ;;		wreg, status,2, status,0, cstack
  5181 ;; Tracked objects:
  5182 ;;		On entry : 0/0
  5183 ;;		On exit  : 0/0
  5184 ;;		Unchanged: 0/0
  5185 ;; Data sizes:     COMRAM   BANK0   BANK1
  5186 ;;      Params:         0       0       0
  5187 ;;      Locals:         0       0       0
  5188 ;;      Temps:          0       0       0
  5189 ;;      Totals:         0       0       0
  5190 ;;Total ram usage:        0 bytes
  5191 ;; Hardware stack levels used: 1
  5192 ;; Hardware stack levels required when called: 1
  5193 ;; This function calls:
  5194 ;;		_RSI_Timer0
  5195 ;; This function is called by:
  5196 ;;		Interrupt level 2
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	intcode
  5201   000008                     __pintcode:
  5202                           	callstack 0
  5203   000008                     _my_interrupts:
  5204                           	callstack 23
  5205                           
  5206                           ;incstack = 0
  5207   000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5208   00000A  EC2E  F008         	call	_RSI_Timer0	;wreg free
  5209   00000E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5210   000010  0011               	retfie		f
  5211   000012                     __end_of_my_interrupts:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function _RSI_Timer0 *****************
  5215 ;; Defined at:
  5216 ;;		line 25 in file "TTIMER.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;		None
  5219 ;; Auto vars:     Size  Location     Type
  5220 ;;		None
  5221 ;; Return value:  Size  Location     Type
  5222 ;;                  1    wreg      void 
  5223 ;; Registers used:
  5224 ;;		wreg, status,2, status,0
  5225 ;; Tracked objects:
  5226 ;;		On entry : 0/0
  5227 ;;		On exit  : 0/0
  5228 ;;		Unchanged: 0/0
  5229 ;; Data sizes:     COMRAM   BANK0   BANK1
  5230 ;;      Params:         0       0       0
  5231 ;;      Locals:         0       0       0
  5232 ;;      Temps:          0       0       0
  5233 ;;      Totals:         0       0       0
  5234 ;;Total ram usage:        0 bytes
  5235 ;; Hardware stack levels used: 1
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_my_interrupts
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text38
  5244   00105C                     __ptext38:
  5245                           	callstack 0
  5246   00105C                     _RSI_Timer0:
  5247                           	callstack 23
  5248                           
  5249                           ;TTIMER.c: 27:     TMR0 = 64536;
  5250                           
  5251                           ;incstack = 0
  5252   00105C  0EFC               	movlw	252
  5253   00105E  6ED7               	movwf	215,c	;volatile
  5254   001060  0E18               	movlw	24
  5255   001062  6ED6               	movwf	214,c	;volatile
  5256                           
  5257                           ;TTIMER.c: 28:     TMR0IF = 0;
  5258   001064  94F2               	bcf	4082,2,c	;volatile
  5259                           
  5260                           ;TTIMER.c: 29:     Tics++;
  5261   001066  0E01               	movlw	1
  5262   001068  2605               	addwf	_Tics^0,f,c	;volatile
  5263   00106A  0E00               	movlw	0
  5264   00106C  2206               	addwfc	(_Tics+1)^0,f,c	;volatile
  5265   00106E  2207               	addwfc	(_Tics+2)^0,f,c	;volatile
  5266   001070  2208               	addwfc	(_Tics+3)^0,f,c	;volatile
  5267   001072  0012               	return		;funcret
  5268   001074                     __end_of_RSI_Timer0:
  5269                           	callstack 0
  5270                           
  5271                           	psect	rparam
  5272   000000                     
  5273                           	psect	temp
  5274   00007F                     btemp:
  5275                           	callstack 0
  5276   00007F                     	ds	1
  5277   000000                     int$flags	set	btemp
  5278   000000                     wtemp8	set	btemp+1
  5279   000000                     ttemp5	set	btemp+1
  5280   000000                     ttemp6	set	btemp+4
  5281   000000                     ttemp7	set	btemp+8
  5282                           
  5283                           	psect	idloc
  5284                           
  5285                           ;Config register IDLOC0 @ 0x200000
  5286                           ;	unspecified, using default values
  5287   200000                     	org	2097152
  5288   200000  FF                 	db	255
  5289                           
  5290                           ;Config register IDLOC1 @ 0x200001
  5291                           ;	unspecified, using default values
  5292   200001                     	org	2097153
  5293   200001  FF                 	db	255
  5294                           
  5295                           ;Config register IDLOC2 @ 0x200002
  5296                           ;	unspecified, using default values
  5297   200002                     	org	2097154
  5298   200002  FF                 	db	255
  5299                           
  5300                           ;Config register IDLOC3 @ 0x200003
  5301                           ;	unspecified, using default values
  5302   200003                     	org	2097155
  5303   200003  FF                 	db	255
  5304                           
  5305                           ;Config register IDLOC4 @ 0x200004
  5306                           ;	unspecified, using default values
  5307   200004                     	org	2097156
  5308   200004  FF                 	db	255
  5309                           
  5310                           ;Config register IDLOC5 @ 0x200005
  5311                           ;	unspecified, using default values
  5312   200005                     	org	2097157
  5313   200005  FF                 	db	255
  5314                           
  5315                           ;Config register IDLOC6 @ 0x200006
  5316                           ;	unspecified, using default values
  5317   200006                     	org	2097158
  5318   200006  FF                 	db	255
  5319                           
  5320                           ;Config register IDLOC7 @ 0x200007
  5321                           ;	unspecified, using default values
  5322   200007                     	org	2097159
  5323   200007  FF                 	db	255
  5324                           
  5325                           	psect	config
  5326                           
  5327                           ; Padding undefined space
  5328   300000                     	org	3145728
  5329   300000  FF                 	db	255
  5330                           
  5331                           ;Config register CONFIG1H @ 0x300001
  5332                           ;	Oscillator
  5333                           ;	OSC = INTIO1, Internal oscillator block, CLKO function on RA6, port function on RA7
  5334                           ;	Fail-Safe Clock Monitor Enable bit
  5335                           ;	FCMEN = 0x0, unprogrammed default
  5336                           ;	Internal/External Oscillator Switchover bit
  5337                           ;	IESO = 0x0, unprogrammed default
  5338   300001                     	org	3145729
  5339   300001  09                 	db	9
  5340                           
  5341                           ;Config register CONFIG2L @ 0x300002
  5342                           ;	Power-up Timer Enable bit
  5343                           ;	PWRT = OFF, PWRT disabled
  5344                           ;	Brown-out Reset Enable bits
  5345                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5346                           ;	Brown-out Reset Voltage bits
  5347                           ;	BORV = 0x3, unprogrammed default
  5348   300002                     	org	3145730
  5349   300002  19                 	db	25
  5350                           
  5351                           ;Config register CONFIG2H @ 0x300003
  5352                           ;	Watchdog Timer Enable bit
  5353                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5354                           ;	Watchdog Timer Postscale Select bits
  5355                           ;	WDTPS = 0xF, unprogrammed default
  5356   300003                     	org	3145731
  5357   300003  1E                 	db	30
  5358                           
  5359                           ; Padding undefined space
  5360   300004                     	org	3145732
  5361   300004  FF                 	db	255
  5362                           
  5363                           ;Config register CONFIG3H @ 0x300005
  5364                           ;	CCP2 MUX bit
  5365                           ;	CCP2MX = 0x1, unprogrammed default
  5366                           ;	PORTB A/D Enable bit
  5367                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5368                           ;	Low-Power Timer1 Oscillator Enable bit
  5369                           ;	LPT1OSC = 0x0, unprogrammed default
  5370                           ;	MCLR Pin Enable bit
  5371                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5372   300005                     	org	3145733
  5373   300005  01                 	db	1
  5374                           
  5375                           ;Config register CONFIG4L @ 0x300006
  5376                           ;	Stack Full/Underflow Reset Enable bit
  5377                           ;	STVREN = 0x1, unprogrammed default
  5378                           ;	Single-Supply ICSP Enable bit
  5379                           ;	LVP = OFF, Single-Supply ICSP disabled
  5380                           ;	Boot Block Size Select bits
  5381                           ;	BBSIZ = 0x0, unprogrammed default
  5382                           ;	Extended Instruction Set Enable bit
  5383                           ;	XINST = 0x0, unprogrammed default
  5384                           ;	Background Debugger Enable bit
  5385                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5386   300006                     	org	3145734
  5387   300006  81                 	db	129
  5388                           
  5389                           ; Padding undefined space
  5390   300007                     	org	3145735
  5391   300007  FF                 	db	255
  5392                           
  5393                           ;Config register CONFIG5L @ 0x300008
  5394                           ;	unspecified, using default values
  5395                           ;	Code Protection bit
  5396                           ;	CP0 = 0x1, unprogrammed default
  5397                           ;	Code Protection bit
  5398                           ;	CP1 = 0x1, unprogrammed default
  5399   300008                     	org	3145736
  5400   300008  03                 	db	3
  5401                           
  5402                           ;Config register CONFIG5H @ 0x300009
  5403                           ;	unspecified, using default values
  5404                           ;	Boot Block Code Protection bitProtect Boot
  5405                           ;	CPB = 0x1, unprogrammed default
  5406                           ;	Data EEPROM Code Protection bit
  5407                           ;	CPD = 0x1, unprogrammed default
  5408   300009                     	org	3145737
  5409   300009  C0                 	db	192
  5410                           
  5411                           ;Config register CONFIG6L @ 0x30000A
  5412                           ;	unspecified, using default values
  5413                           ;	Write Protection bit
  5414                           ;	WRT0 = 0x1, unprogrammed default
  5415                           ;	Write Protection bit
  5416                           ;	WRT1 = 0x1, unprogrammed default
  5417   30000A                     	org	3145738
  5418   30000A  03                 	db	3
  5419                           
  5420                           ;Config register CONFIG6H @ 0x30000B
  5421                           ;	unspecified, using default values
  5422                           ;	Configuration Register Write Protection bit
  5423                           ;	WRTC = 0x1, unprogrammed default
  5424                           ;	Boot Block Write Protection bit
  5425                           ;	WRTB = 0x1, unprogrammed default
  5426                           ;	Data EEPROM Write Protection bit
  5427                           ;	WRTD = 0x1, unprogrammed default
  5428   30000B                     	org	3145739
  5429   30000B  E0                 	db	224
  5430                           
  5431                           ;Config register CONFIG7L @ 0x30000C
  5432                           ;	unspecified, using default values
  5433                           ;	Table Read Protection bit
  5434                           ;	EBTR0 = 0x1, unprogrammed default
  5435                           ;	Table Read Protection bit
  5436                           ;	EBTR1 = 0x1, unprogrammed default
  5437   30000C                     	org	3145740
  5438   30000C  03                 	db	3
  5439                           
  5440                           ;Config register CONFIG7H @ 0x30000D
  5441                           ;	unspecified, using default values
  5442                           ;	Boot Block Table Read Protection bit
  5443                           ;	EBTRB = 0x1, unprogrammed default
  5444   30000D                     	org	3145741
  5445   30000D  40                 	db	64
  5446                           tosu	equ	0xFFF
  5447                           tosh	equ	0xFFE
  5448                           tosl	equ	0xFFD
  5449                           stkptr	equ	0xFFC
  5450                           pclatu	equ	0xFFB
  5451                           pclath	equ	0xFFA
  5452                           pcl	equ	0xFF9
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           prodh	equ	0xFF4
  5458                           prodl	equ	0xFF3
  5459                           indf0	equ	0xFEF
  5460                           postinc0	equ	0xFEE
  5461                           postdec0	equ	0xFED
  5462                           preinc0	equ	0xFEC
  5463                           plusw0	equ	0xFEB
  5464                           fsr0h	equ	0xFEA
  5465                           fsr0l	equ	0xFE9
  5466                           wreg	equ	0xFE8
  5467                           indf1	equ	0xFE7
  5468                           postinc1	equ	0xFE6
  5469                           postdec1	equ	0xFE5
  5470                           preinc1	equ	0xFE4
  5471                           plusw1	equ	0xFE3
  5472                           fsr1h	equ	0xFE2
  5473                           fsr1l	equ	0xFE1
  5474                           bsr	equ	0xFE0
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           preinc2	equ	0xFDC
  5479                           plusw2	equ	0xFDB
  5480                           fsr2h	equ	0xFDA
  5481                           fsr2l	equ	0xFD9
  5482                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    48
    Data        188
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     25     126
    BANK0           128      2     123
    BANK1           256      0     186

Pointer List with Targets:

    MyPutString@frase	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[11]), STR_2(CODE[10]), STR_3(CODE[11]), STR_4(CODE[14]), 

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 4
		 -> Timer(COMRAM[1]), Timer1S(COMRAM[1]), timer_2s(COMRAM[1]), TimerCurrentTime(BANK0[4]), 
		 -> TimerMarquesina(COMRAM[1]), TimerMelody(COMRAM[1]), TimerRebots(COMRAM[1]), TimerRecording(COMRAM[1]), 
		 -> TimerRecordingADC(COMRAM[1]), TimerTiempoNota(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_LcInit
    _motorTeclat->_writeCaracter
    _writeCaracter->_LcPutChar
    _motorMenu->_MyPutString
    _MyPutString->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcClear->_Espera
    _initTeclat->_TI_NewTimer
    _initMicro->_TI_NewTimer
    _Menu_Init->_TI_NewTimer
    _LcInit->_Espera
    _WaitForBusy->_TI_GetTics
    _Espera->_TI_GetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _InitAltaveu->_TI_NewTimer

Critical Paths under _my_interrupts in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_motorTeclat

Critical Paths under _my_interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_interrupts in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27786
                           _ADC_Init
                        _InitAltaveu
                        _InitconfOsc
                           _LcGotoXY
                             _LcInit
                          _Menu_Init
                            _TI_Init
                         _initEEPROM
                          _initMicro
                         _initTeclat
                           _motorJoy
                          _motorMenu
                        _motorTeclat
                            _sioInit
 ---------------------------------------------------------------------------------
 (1) _sioInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorTeclat                                          2     2      0    8311
                                              0 BANK0      2     2      0
                    _Getflag_TTeclat
                         _TI_GetTics
                       _TI_ResetTics
                _comprovaHiHaColumna
                          _saveTecla
                           _setFiles
                     _waitTeclaTreta
                      _writeCaracter
 ---------------------------------------------------------------------------------
 (2) _writeCaracter                                        2     2      0    7209
                                             22 COMRAM     2     2      0
                           _LcGotoXY
                          _LcPutChar
                         _TI_GetTics
 ---------------------------------------------------------------------------------
 (2) _waitTeclaTreta                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFiles                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _saveTecla                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _comprovaHiHaColumna                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Getflag_TTeclat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorMenu                                            0     0      0    9465
                            _LcClear
                           _LcGotoXY
                        _MyPutString
                _getCaractersEscrits
                          _getEspera
                       _getTowerName
 ---------------------------------------------------------------------------------
 (2) _getTowerName                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getEspera                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCaractersEscrits                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyPutString                                          2     1      1    4105
                                             22 COMRAM     2     1      1
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (3) _LcPutChar                                            1     1      0    3748
                                             21 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _LcGotoXY                                             8     7      1    2469
                                             13 COMRAM     8     7      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _CantaData                                            1     1      0     220
                                              2 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2869
                            _CantaIR
                             _Espera
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _motorJoy                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTeclat                                           0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (1) _initMicro                                            0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (1) _initEEPROM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Menu_Init                                            0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    3953
                                             21 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _TI_NewTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _WaitForBusy                                          1     1      0    1037
                                             12 COMRAM     1     1      0
                         _TI_GetTics
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (3) _Espera                                               9     7      2    1612
                                             12 COMRAM     9     7      2
                         _TI_GetTics
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (3) _TI_GetTics                                          12     8      4     992
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaIR                                              1     1      0     220
                                              2 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (6) _CantaPartBaixa                                       2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _CantaPartAlta                                        2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitconfOsc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitAltaveu                                          0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (5) _TI_ResetTics                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     858
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _my_interrupts                                        0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (8) _RSI_Timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _InitAltaveu
     _TI_NewTimer
     _TI_ResetTics
   _InitconfOsc
   _LcGotoXY
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _WaitForBusy
       _TI_GetTics
       _TI_ResetTics
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
       _TI_GetTics
       _TI_ResetTics
     _TI_NewTimer
     _WaitForBusy
   _Menu_Init
     _TI_NewTimer
     _TI_ResetTics
   _TI_Init
   _initEEPROM
   _initMicro
     _TI_NewTimer
     _TI_ResetTics
   _initTeclat
     _TI_NewTimer
     _TI_ResetTics
   _motorJoy
   _motorMenu
     _LcClear
       _CantaIR
       _Espera
       _WaitForBusy
     _LcGotoXY
     _MyPutString
       _LcPutChar
         _CantaData
           _CantaPartAlta
           _CantaPartBaixa
         _LcGotoXY
         _WaitForBusy
     _getCaractersEscrits
     _getEspera
     _getTowerName
   _motorTeclat
     _Getflag_TTeclat
     _TI_GetTics
     _TI_ResetTics
     _comprovaHiHaColumna
     _saveTecla
     _setFiles
     _waitTeclaTreta
     _writeCaracter
       _LcGotoXY
       _LcPutChar
       _TI_GetTics
   _sioInit

 _my_interrupts (ROOT)
   _RSI_Timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BA       7       72.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2      7B       5       96.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     19      7E       1      100.0%
BITBIGSFRhl         1A      0       0       9        0.0%
BITBIGSFRlhhlhh      E      0       0      11        0.0%
BITBIGSFRhh          D      0       0       8        0.0%
BITBIGSFRlhhlhl      7      0       0      16        0.0%
BITBIGSFRlhhlhl      7      0       0      14        0.0%
BITBIGSFRlhhlhl      7      0       0      13        0.0%
BITBIGSFRllllh       5      0       0      22        0.0%
BITBIGSFRlhhll       4      0       0      18        0.0%
BITBIGSFRllh         4      0       0      20        0.0%
BITBIGSFRlhhlhl      2      0       0      17        0.0%
BITBIGSFRllllll      2      0       0      24        0.0%
BITBIGSFRlhhlhl      1      0       0      15        0.0%
BITBIGSFRlhhlhh      1      0       0      12        0.0%
BITBIGSFRlllllh      1      0       0      23        0.0%
BITBIGSFRlhhh        1      0       0      10        0.0%
BITBIGSFRlllh        1      0       0      21        0.0%
BITBIGSFRlhl         1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      25        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Apr 10 13:35:14 2024

                                 _j 0009                                   _n 000B  
                                 _p 0039                       getTowerName@p 0064  
                        _RSI_Timer0 105C                                  _p1 00F1  
                   _tower_name_menu 00D6                          _TI_GetTics 0D7A  
                               l111 098E                                 l104 094E  
                               l490 0F8E                                 l596 0B42  
                               u400 0B22                                 u340 0ADA  
                               u360 0AF0                                 u418 0B24  
                               u380 0B0A                                 u358 0ADC  
                               u378 0AF2                                 u398 0B0C  
                  _tower_name_menu0 0036                    _tower_name_menu1 0035  
                  _tower_name_menu2 0034                    ??_CantaPartBaixa 0064  
                    ??_getTowerName 0064                                 prod 0FF3  
                               wreg 0FE8         __end_of_comprovaHiHaColumna 0F92  
                       _total_temps 004D                                l3020 045C  
                              l3030 0480                                l3024 046A  
                              l3016 044A                                l3042 04CE  
                              l3026 0470                                l3062 0534  
                              l3054 04F8                                l3038 04BC  
                              l3310 039A                                l3302 037A  
                              l2600 096E                                l3072 0556  
                              l3048 04DE                                l3066 0546  
                              l3322 03E8                                l3306 0390  
                              l3242 028C                                l2700 09D0  
                              l3076 0566                                l3228 0262  
                              l2606 0996                                l3086 0598  
                              l3270 02E0                                l2480 0B60  
                              l2608 09AC                                l2712 0A06  
                              l3256 02B6                                l2482 0B66  
                              l2722 0A22                                l2706 09D4  
                              l3338 0412                                l2636 0CDE  
                              l2476 0B50                                l2468 0B3A  
                              l2492 0B86                                l2732 0A2A  
                              l2804 061C                                l3284 030A  
                              l2558 0D40                                l2910 0F96  
                              l2486 0B76                                l2654 0A6C  
                              l2822 064C                                l2814 0634  
                              l2806 061E                                l3358 0DFC  
                              l2488 0B7C                                l2584 092A  
                              l2656 0A78                                l2808 0622  
                              l3296 0368                                l2682 0E5C  
                              l2674 0AB2                                l2666 0A96  
                              l2842 0686                                l2834 066E  
                              l2826 065A                                l2818 0640  
                              l2762 0E3A                                l2754 0E1A  
                              l3298 036E                         _TI_NewTimer 0E4C  
                              l2596 095E                                l2588 0938  
                              l2668 0AA2                                l2772 0F76  
                              l2860 06C0                                l2828 065C  
                              l2678 0E52                                l2862 06C2  
                              l2854 06AC                                l2846 0694  
                              l2838 067A                                l2758 0E2A  
                              l2776 0F82                                l2864 06C6  
                              l2848 0696                                l2880 0800  
                              l2938 06FC                                l2698 09C4  
                              l2794 0600                                l2890 083E  
                              l2874 07E8                                l2796 0602  
                              l2788 05EA                                l2884 0826  
                              l2798 0606                                l2894 0866  
                              STR_1 024A                                STR_2 0255  
                              STR_3 023F                                STR_4 0231  
                              u1030 0C1C                                u1110 0BB4  
                              u2000 038C                                u1050 0C32  
                              u1130 0BCA                                u1108 0C66  
                              u2020 03B4                                u1070 0C4C  
                              u1150 0BE4                                u1048 0C1E  
                              u1128 0BB6                                u1090 0C64  
                              u1170 0BFC                                u1068 0C34  
                              u1148 0BCC                                u1088 0C4E  
                              u1168 0BE6                                u1188 0BFE  
                              u1750 07AC                                u1670 07FA  
                              u1980 033E                                _TMR0 0FD6  
                              _Tics 0005                                _Rows 005A  
                              _flag 0021                                _main 0DC4  
                              _nota 0015                       ??_InitAltaveu 0067  
                              fsr1h 0FE2                                fsr2h 0FDA  
                              indf1 0FE7                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              _rows 002F                                btemp 007F  
                  __end_of_ADC_Init 1096                     __end_of_TI_Init 0FBE  
                              prodl 0FF3                     __end_of_LcClear 1042  
                              start 0012                     __end_of_CantaIR 0F66  
                     LcInit@columns 0079                        ___param_bank 0000  
                _valor_micro_ADRESH 000D          _arrModifyCurrentTimeMinuts 00E3  
        _arrModifyCurrentTimeSegons 00E1                         Espera@Timer 0078  
                             ?_main 0064                               _EEADR 0FA9  
                     ??_InitconfOsc 0064                               _T0CON 0FD5  
                             _RCREG 0FAE                               _RCSTA 0FAB  
                             _SPBRG 0FAF                               _TXREG 0FAD  
                             _TXSTA 0FAC                               _Timer 0063  
                             _index 00AD                        _TI_ResetTics 0FE4  
                   __end_of_sioInit 1028                               tablat 0FF5  
                             ttemp5 0080                               ttemp6 0083  
                             ttemp7 0087                               status 0FD8  
                             wtemp8 0080                    __end_of_LcGotoXY 09C2  
           EscriuPrimeraOrdre@ordre 0065                     __initialization 0C78  
                      __end_of_main 0E0A                 __end_of_InitAltaveu 0FE4  
                       ?_RSI_Timer0 0064                      TI_Init@counter 0064  
                    _index0_playrec 00E8                         ?_TI_GetTics 0064  
                   _Getflag_TTeclat 10B8               _flag_CurrentTime_menu 003C  
                  _total_gravacions 00EF                              ??_main 007D  
                     ??_MyPutString 007B                       __activetblptr 0002  
                            _ADCON0 0FC2                              _ADCON1 0FC1  
                            _ADCON2 0FC0                 __end_of_InitconfOsc 10B8  
                            _ADRESH 0FC4                              _EEDATA 0FA8  
                            _EECON2 0FA7                           ??_TI_Init 0064  
                         ??_LcClear 0079                           ??_CantaIR 0066  
                    LcGotoXY@Fisics 0076                      LcGotoXY@Column 0078  
                            _OSCCON 0FD3                       ??_WaitForBusy 0070  
                            _TMR0IF 7F92                              _SPBRGH 0FB0  
                            _LcInit 06D4                              _Espera 0CD6  
                      _LcGotoXY$395 0074                __end_of_getTowerName 10A4  
                            _RowAct 0058                     _columna_polsada 002C  
                            _Timers 0080                              _eedata 0053  
                      ?_motorTeclat 0064                              _espera 002A  
                            clear_0 0CB6                              clear_1 0CC2  
                            isa$std 0001                    __end_of_setFiles 0E4C  
               _tower_name_position 0047                        __pdataCOMRAM 007D  
                  __end_of_motorJoy 0BA8                           ?_ADC_Init 0064  
                  _posicio_caracter 0037                        __mediumconst 0000  
                         ??_sioInit 0064                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
               __end_of_MyPutString 0A40                   __end_of_CantaData 0F34  
                  _flag_end_playing 00E7                    _posicio_grabacio 0051  
           _posicio_ensenyar_eeprom 0050                          __accesstop 0080  
           __end_of__initialization 0CC8                   __end_of_LcPutChar 0ABE  
                       _InitAltaveu 0FBE                       ___rparam_used 0001  
                _flag_startmenu_sio 0022                 _estat_tad_recording 000E  
           __end_of_Getflag_TTeclat 10BC                      __pcstackCOMRAM 0064  
               __end_of_WaitForBusy 0D7A                        __pidataBANK1 086C  
              TI_NewTimer@Comptador 0066         __end_of_getCaractersEscrits 10C4  
                       _InitconfOsc 10AE                       _estat_altaveu 0014  
                 __end_of_Menu_Init 0F02                          ??_ADC_Init 0064  
                         ?_LcGotoXY 0071               _timer_start_recording 0040  
             __end_of_my_interrupts 0012                        ?_TI_NewTimer 0064  
                 _tiempo_nota_total 0010                          __pbssBANK0 0080  
                           ?_LcInit 0079                       _CantaPartAlta 0C10  
                     _writeCaracter 07AE              TI_NewTimer@TimerHandle 0064  
                           ?_Espera 0070                    _hi_ha_tecla_menu 004A  
           TI_ResetTics@TimerHandle 0064                          _flag_index 00F0  
                       _MyPutString 09C2                        _flag_TTeclat 007D  
                           LcInit@i 007B                      _TimerRecording 0062  
                        ??_LcGotoXY 0072                       _matriu_teclat 0178  
                           _OSCTUNE 0F9B                      _TimerNotaTotal 0013  
                           _TI_Init 0F92                             _LcClear 1028  
                           _CantaIR 0F34                          _initEEPROM 10A4  
                       _WaitForBusy 0D2E                    _TimerCurrentTime 00F5  
                    ?_CantaPartAlta 0064                             _Columns 0059  
                    ?_writeCaracter 0064                   __end_of_getEspera 10C0  
                         ?_setFiles 0064                          _index_data 00EC  
                           __Hparam 0000                             __Lparam 0000  
                      _flag_tad_sio 003B                    ?_Getflag_TTeclat 0064  
                           _Timer1S 005E                           ?_motorJoy 0064  
                        _initTeclat 0E8A                        ??_RSI_Timer0 0064  
                    _fase_escombrat 002E                        __psmallconst 0200  
                      ??_TI_GetTics 0068                          _estat_menu 0049  
                        _estat_play 00EA                             __pcinit 0C78  
                           __ramtop 0200                       _iteracio_char 0038  
                       _TimerMelody 005C                             __ptext0 0DC4  
                           __ptext1 1008                             __ptext2 0260  
                           __ptext3 07AE                             __ptext4 1074  
                           __ptext5 0E0A                             __ptext6 05DA  
                           __ptext7 0F66                             __ptext8 10B8  
                           __ptext9 0448                         _TimerRebots 005F  
                 __end_of_initMicro 105C                           CantaIR@IR 0066  
                   _marquesina_text 0100                    _index_gravacions 00F4  
                           _sioInit 1008                        _getTowerName 1096  
                           _mostres 00DD                     WaitForBusy@Busy 0070  
              end_of_initialization 0CC8                   __end_of_saveTecla 06D4  
                __end_of_RSI_Timer0 1074                       __Lmediumconst 0000  
                __end_of_TI_GetTics 0DC4                   __end_of_motorMenu 05DA  
                _CurrentTimeComplet 004E                          ??_setFiles 0064  
              _gravacio_reprduir_id 00E9                          ??_motorJoy 0064  
                           postdec1 0FE5                             postinc0 0FEE  
                           postinc2 0FDE                   _flag_TTeclat_menu 007E  
            _flag_modifyCurrentTime 004C                           _PORTCbits 0F82  
                        _timer_tics 00CA                           _PORTEbits 0F84  
                    _digit_minuts_0 001D                      _digit_minuts_1 001C  
                    _digit_segons_0 001F                      _digit_segons_1 001E  
                    _waitTeclaTreta 1074               TI_GetTics@TimerHandle 0064  
         _array_notas@TALTAVEU$F537 0219                           _TRISAbits 0F92  
                         _TRISBbits 0F93                           _TRISCbits 0F94  
                         _TRISEbits 0F96                     ??_CantaPartAlta 0064  
                   ??_writeCaracter 007A                         ?_initEEPROM 0064  
                         _CantaData 0F02                        ?_InitAltaveu 0064  
                   _filamatriu_menu 004B                       _joy_direction 0025  
                    __end_of_LcInit 07AE                          _tower_name 00C6  
                _eeprom_adress_temp 00EE                           _LcPutChar 0A40  
                    __end_of_Espera 0D2E                         ?_initTeclat 0064  
        __end_of_EscriuPrimeraOrdre 0B38                         _BAUDCONbits 0FB8  
                     __pidataCOMRAM 10C4                           _ColumnAct 0057  
            __end_of_waitTeclaTreta 1086                        ?_InitconfOsc 0064  
               start_initialization 0C78                           _Menu_Init 0EC6  
                     _tecla_premuda 0011              _current_time_recording 00BD  
__end_of_array_notas@TALTAVEU$F1257 0219          _array_notas@TALTAVEU$F1257 020D  
__end_of_array_notas@TALTAVEU$F1459 020D          _array_notas@TALTAVEU$F1459 0201  
                        ?_CantaData 0064                            ??_LcInit 007A  
                          ??_Espera 0072                          ?_LcPutChar 0064  
                   _eeprom_overflow 00EB                         __pdataBANK1 0100  
               _comprovaHiHaColumna 0F66                     ?_waitTeclaTreta 0064  
                      ?_MyPutString 007A                     _old_fila_matriu 0027  
                       __pbssCOMRAM 0001                 __end_of_array_notas 0231  
            _caracters_escrits_menu 0031                      _current_tics_x 00C2  
                     __pcstackBANK0 00F9                          ?_Menu_Init 0064  
                     ?_TI_ResetTics 0064                      _flag_startmenu 0042  
                  _fila_matriu_menu 0046                            ?_TI_Init 0064  
                          ?_LcClear 0064                            ?_CantaIR 0064  
                      _estat_eeprom 00F3                        setFiles@rows 0064  
                    _CantaPartBaixa 0BA8                      _flag_towername 0041  
              ?_comprovaHiHaColumna 0064                        _estat_teclat 0030  
                    _flag_putstring 0045                        ?_WaitForBusy 0064  
            _flag_show_current_time 0043                        _estat_string 0056  
             _time_recording_minuts 003E               _time_recording_segons 003D  
                    _time_recording 003F                           __pintcode 0008  
                         _getEspera 10BC                           _flag_menu 0048  
                         _dest_port 00D2                     CantaPartBaixa@c 0065  
                    _temps_grabacio 00DF                 _fila_play_recording 0055  
                       __smallconst 0200                            _ADC_Init 1086  
                       _hi_ha_tecla 002D                            ?_sioInit 0064  
                   _TimerMarquesina 0061                           _initMicro 1042  
                    ??_TI_ResetTics 0064                  _flagAltaveu_teclat 0032  
                         _estat_joy 0026                           _estat_sio 0023  
                       _fila_matriu 0028              __end_of_CantaPartBaixa 0C10  
             ??_comprovaHiHaColumna 0064                         ??_CantaData 0066  
                          _LATBbits 0F8A                            _LATCbits 0F8B  
                          _LATEbits 0F8D                         _eeprom_data 00F2  
                         _saveTecla 05DA                         _eeprom_read 00ED  
                          _PIR1bits 0F9E                         ??_LcPutChar 0079  
                         _motorMenu 0448                          ?_getEspera 0064  
                     ??_motorTeclat 00F9                         _array_notas 0225  
                        _ADCON0bits 0FC2                     _TimerTiempoNota 005D  
                          Espera@ms 0070                           _user_name 00DA  
                          _LcGotoXY 0926                          ?_initMicro 0064  
                       ??_Menu_Init 0067                        _minuts0_menu 0018  
                      _minuts1_menu 0017                         LcGotoXY@Row 0071  
                         copy_data0 0C8C                     ?_CantaPartBaixa 0064  
                     _my_interrupts 0008                        ??_initEEPROM 0064  
                        ?_saveTecla 0064                          _EECON1bits 0FA6  
 __end_of_array_notas@TALTAVEU$F537 0225                            __Hrparam 0000  
                          __Lrparam 0000                          ?_motorMenu 0064  
                _iterador_towername 0052                        ??_initTeclat 0067  
                     _flag_preemenu 0033                        _segons0_menu 001A  
                      _segons1_menu 0019               _joystick_down_counter 0054  
                  _flag_CurrentTime 001B                  __end_of_initEEPROM 10AE  
               __end_of_motorTeclat 0448                            __ptext10 1096  
                          __ptext11 10BC                  _EscriuPrimeraOrdre 0ABE  
                          __ptext20 1042                            __ptext12 10C0  
                          __ptext21 10A4                            __ptext13 09C2  
                          __ptext30 0BA8                            __ptext22 0F92  
                          __ptext14 0A40                            __ptext31 0C10  
                          __ptext23 0EC6                            __ptext15 0926  
                          __ptext32 10AE                            __ptext24 06D4  
                          __ptext16 0F02                            __ptext33 0FBE  
                          __ptext25 0D2E                            __ptext17 1028  
                          __ptext34 0FE4                            __ptext26 0CD6  
                          __ptext18 0B38                            __ptext35 0E4C  
                          __ptext27 0D7A                            __ptext19 0E8A  
                          __ptext36 1086                            __ptext28 0ABE  
                          __ptext29 0F34                            __ptext38 105C  
                    ?_my_interrupts 0064                       ??_TI_NewTimer 0065  
                    CantaPartAlta@c 0065                  __end_of_initTeclat 0EC6  
                          _estat_ct 0020                 ?_EscriuPrimeraOrdre 0064  
             __end_of_CantaPartAlta 0C78               __end_of_writeCaracter 086C  
                     CantaData@Data 0066                       _mostres_micro 00E5  
                          _rec_port 00CE                            _setFiles 0E0A  
                 _caracters_escrits 0029                            _motorJoy 0B38  
                      _valor_ADRESH 0024                            _temps_5s 000F  
                          _temps_8s 004F                 _getCaractersEscrits 10C0  
                          _timer_2s 0060                            isa$xinst 0000  
                          _pos_marq 003A                         ??_getEspera 0064  
              __end_of_TI_ResetTics 1008                            int$flags 007F  
                  ??_waitTeclaTreta 0064              _flag_putstring_current 0016  
                 _TimerRecordingADC 005B                ??_EscriuPrimeraOrdre 0064  
                        LcInit@rows 007A                       _timer_tics_1s 0001  
                     _eeprom_adress 000C                          _INTCONbits 0FF2  
         TI_GetTics@CopiaTicsActual 006C                         ??_initMicro 0067  
              ?_getCaractersEscrits 0064                   ??_Getflag_TTeclat 0064  
                          intlevel2 0000                          LcPutChar@c 0079  
                       ??_saveTecla 0064                 __end_of_TI_NewTimer 0E8A  
                       ??_motorMenu 007C                    MyPutString@frase 007A  
                       _motorTeclat 0260                     _caracter_actual 002B  
                _joystick_direction 0044                         _tiempo_nota 0012  
             ??_getCaractersEscrits 0064                       ?_getTowerName 0064  
                   ??_my_interrupts 0064  
