

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Apr 10 12:26:10 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og9 
     1                           	processor	18F4321
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Generated 09/02/2023 GMT
    60                           ; 
    61                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution. Publication is not required when
    75                           ;        this file is used in an embedded application.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F4321 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000000                     
    94                           	psect	idataCOMRAM
    95   001108                     __pidataCOMRAM:
    96                           	callstack 0
    97                           
    98                           ;initializer for _flag_TTeclat
    99   001108  01                 	db	1
   100                           
   101                           ;initializer for _flag_TTeclat_menu
   102   001109  01                 	db	1
   103                           
   104                           	psect	idataBANK1
   105   000886                     __pidataBANK1:
   106                           	callstack 0
   107                           
   108                           ;initializer for _marquesina_text
   109   000886  31                 	db	49
   110   000887  2E                 	db	46
   111   000888  4C                 	db	76
   112   000889  49                 	db	73
   113   00088A  53                 	db	83
   114   00088B  54                 	db	84
   115   00088C  20                 	db	32
   116   00088D  41                 	db	65
   117   00088E  43                 	db	67
   118   00088F  43                 	db	67
   119   000890  45                 	db	69
   120   000891  53                 	db	83
   121   000892  53                 	db	83
   122   000893  20                 	db	32
   123   000894  50                 	db	80
   124   000895  4F                 	db	79
   125   000896  49                 	db	73
   126   000897  4E                 	db	78
   127   000898  54                 	db	84
   128   000899  53                 	db	83
   129   00089A  32                 	db	50
   130   00089B  2E                 	db	46
   131   00089C  53                 	db	83
   132   00089D  48                 	db	72
   133   00089E  4F                 	db	79
   134   00089F  57                 	db	87
   135   0008A0  20                 	db	32
   136   0008A1  43                 	db	67
   137   0008A2  4F                 	db	79
   138   0008A3  4E                 	db	78
   139   0008A4  4E                 	db	78
   140   0008A5  2E                 	db	46
   141   0008A6  20                 	db	32
   142   0008A7  53                 	db	83
   143   0008A8  54                 	db	84
   144   0008A9  41                 	db	65
   145   0008AA  54                 	db	84
   146   0008AB  55                 	db	85
   147   0008AC  53                 	db	83
   148   0008AD  20                 	db	32
   149   0008AE  33                 	db	51
   150   0008AF  2E                 	db	46
   151   0008B0  43                 	db	67
   152   0008B1  48                 	db	72
   153   0008B2  41                 	db	65
   154   0008B3  4E                 	db	78
   155   0008B4  47                 	db	71
   156   0008B5  45                 	db	69
   157   0008B6  20                 	db	32
   158   0008B7  43                 	db	67
   159   0008B8  48                 	db	72
   160   0008B9  41                 	db	65
   161   0008BA  54                 	db	84
   162   0008BB  20                 	db	32
   163   0008BC  4D                 	db	77
   164   0008BD  4F                 	db	79
   165   0008BE  44                 	db	68
   166   0008BF  45                 	db	69
   167   0008C0  20                 	db	32
   168   0008C1  20                 	db	32
   169   0008C2  34                 	db	52
   170   0008C3  2E                 	db	46
   171   0008C4  45                 	db	69
   172   0008C5  4E                 	db	78
   173   0008C6  54                 	db	84
   174   0008C7  45                 	db	69
   175   0008C8  52                 	db	82
   176   0008C9  20                 	db	32
   177   0008CA  43                 	db	67
   178   0008CB  48                 	db	72
   179   0008CC  41                 	db	65
   180   0008CD  54                 	db	84
   181   0008CE  20                 	db	32
   182   0008CF  4D                 	db	77
   183   0008D0  4F                 	db	79
   184   0008D1  44                 	db	68
   185   0008D2  45                 	db	69
   186   0008D3  20                 	db	32
   187   0008D4  20                 	db	32
   188   0008D5  20                 	db	32
   189   0008D6  35                 	db	53
   190   0008D7  2E                 	db	46
   191   0008D8  4C                 	db	76
   192   0008D9  49                 	db	73
   193   0008DA  53                 	db	83
   194   0008DB  54                 	db	84
   195   0008DC  20                 	db	32
   196   0008DD  4C                 	db	76
   197   0008DE  41                 	db	65
   198   0008DF  53                 	db	83
   199   0008E0  54                 	db	84
   200   0008E1  20                 	db	32
   201   0008E2  4D                 	db	77
   202   0008E3  53                 	db	83
   203   0008E4  47                 	db	71
   204   0008E5  53                 	db	83
   205   0008E6  2E                 	db	46
   206   0008E7  20                 	db	32
   207   0008E8  20                 	db	32
   208   0008E9  20                 	db	32
   209   0008EA  36                 	db	54
   210   0008EB  2E                 	db	46
   211   0008EC  43                 	db	67
   212   0008ED  4C                 	db	76
   213   0008EE  4F                 	db	79
   214   0008EF  53                 	db	83
   215   0008F0  45                 	db	69
   216   0008F1  20                 	db	32
   217   0008F2  43                 	db	67
   218   0008F3  4F                 	db	79
   219   0008F4  4E                 	db	78
   220   0008F5  4E                 	db	78
   221   0008F6  45                 	db	69
   222   0008F7  43                 	db	67
   223   0008F8  54                 	db	84
   224   0008F9  49                 	db	73
   225   0008FA  4F                 	db	79
   226   0008FB  4E                 	db	78
   227   0008FC  20                 	db	32
   228   0008FD  20                 	db	32
   229                           
   230                           ;initializer for _matriu_teclat
   231   0008FE  31                 	db	49
   232   0008FF  00                 	db	0
   233   000900  00                 	db	0
   234   000901  00                 	db	0
   235   000902  00                 	db	0
   236   000903  00                 	db	0
   237   000904  41                 	db	65
   238   000905  42                 	db	66
   239   000906  43                 	db	67
   240   000907  32                 	db	50
   241   000908  00                 	db	0
   242   000909  00                 	db	0
   243   00090A  44                 	db	68
   244   00090B  45                 	db	69
   245   00090C  46                 	db	70
   246   00090D  33                 	db	51
   247   00090E  00                 	db	0
   248   00090F  00                 	db	0
   249   000910  47                 	db	71
   250   000911  48                 	db	72
   251   000912  49                 	db	73
   252   000913  34                 	db	52
   253   000914  00                 	db	0
   254   000915  00                 	db	0
   255   000916  4A                 	db	74
   256   000917  4B                 	db	75
   257   000918  4C                 	db	76
   258   000919  35                 	db	53
   259   00091A  00                 	db	0
   260   00091B  00                 	db	0
   261   00091C  4D                 	db	77
   262   00091D  4E                 	db	78
   263   00091E  4F                 	db	79
   264   00091F  36                 	db	54
   265   000920  00                 	db	0
   266   000921  00                 	db	0
   267   000922  50                 	db	80
   268   000923  51                 	db	81
   269   000924  52                 	db	82
   270   000925  53                 	db	83
   271   000926  37                 	db	55
   272   000927  00                 	db	0
   273   000928  54                 	db	84
   274   000929  55                 	db	85
   275   00092A  56                 	db	86
   276   00092B  38                 	db	56
   277   00092C  00                 	db	0
   278   00092D  00                 	db	0
   279   00092E  57                 	db	87
   280   00092F  58                 	db	88
   281   000930  59                 	db	89
   282   000931  5A                 	db	90
   283   000932  39                 	db	57
   284   000933  00                 	db	0
   285   000934  2A                 	db	42
   286   000935  00                 	db	0
   287   000936  00                 	db	0
   288   000937  00                 	db	0
   289   000938  00                 	db	0
   290   000939  00                 	db	0
   291   00093A  30                 	db	48
   292   00093B  20                 	db	32
   293   00093C  00                 	db	0
   294   00093D  00                 	db	0
   295   00093E  00                 	db	0
   296   00093F  00                 	db	0
   297                           
   298                           	psect	smallconst
   299   000200                     __psmallconst:
   300                           	callstack 0
   301   000200  00                 	db	0
   302   000201  02                 	db	2
   303   000202  04                 	db	4
   304   000203  06                 	db	6
   305   000204  08                 	db	8
   306   000205  0A                 	db	10
   307   000206  0C                 	db	12
   308   000207  0E                 	db	14
   309   000208  12                 	db	18
   310   000209  14                 	db	20
   311   00020A  16                 	db	22
   312   00020B  1A                 	db	26
   313   00020C  1C                 	db	28
   314   00020D                     __end_of_array_notas@TALTAVEU$F1459:
   315                           	callstack 0
   316   00020D  02                 	db	2
   317   00020E  04                 	db	4
   318   00020F  06                 	db	6
   319   000210  08                 	db	8
   320   000211  0A                 	db	10
   321   000212  0C                 	db	12
   322   000213  0E                 	db	14
   323   000214  12                 	db	18
   324   000215  14                 	db	20
   325   000216  16                 	db	22
   326   000217  1A                 	db	26
   327   000218  1C                 	db	28
   328   000219                     __end_of_array_notas@TALTAVEU$F1257:
   329                           	callstack 0
   330   000219  02                 	db	2
   331   00021A  04                 	db	4
   332   00021B  06                 	db	6
   333   00021C  08                 	db	8
   334   00021D  0A                 	db	10
   335   00021E  0C                 	db	12
   336   00021F  0E                 	db	14
   337   000220  12                 	db	18
   338   000221  14                 	db	20
   339   000222  16                 	db	22
   340   000223  1A                 	db	26
   341   000224  1C                 	db	28
   342   000225                     __end_of_array_notas@TALTAVEU$F537:
   343                           	callstack 0
   344   000225  02                 	db	2
   345   000226  04                 	db	4
   346   000227  06                 	db	6
   347   000228  08                 	db	8
   348   000229  0A                 	db	10
   349   00022A  0C                 	db	12
   350   00022B  0E                 	db	14
   351   00022C  12                 	db	18
   352   00022D  14                 	db	20
   353   00022E  16                 	db	22
   354   00022F  1A                 	db	26
   355   000230  1C                 	db	28
   356   000231                     __end_of_array_notas:
   357                           	callstack 0
   358   000000                     _EEDATA	set	4008
   359   000000                     _EECON2	set	4007
   360   000000                     _EEADR	set	4009
   361   000000                     _RCREG	set	4014
   362   000000                     _TXREG	set	4013
   363   000000                     _SPBRG	set	4015
   364   000000                     _BAUDCONbits	set	4024
   365   000000                     _ADCON0bits	set	4034
   366   000000                     _INTCONbits	set	4082
   367   000000                     _TMR0	set	4054
   368   000000                     _PORTCbits	set	3970
   369   000000                     _PORTEbits	set	3972
   370   000000                     _LATBbits	set	3978
   371   000000                     _LATEbits	set	3981
   372   000000                     _TRISBbits	set	3987
   373   000000                     _T0CON	set	4053
   374   000000                     _TMR0IF	set	32658
   375   000000                     _TRISCbits	set	3988
   376   000000                     _TRISEbits	set	3990
   377   000000                     _TRISAbits	set	3986
   378   000000                     _LATCbits	set	3979
   379   000000                     _OSCTUNE	set	3995
   380   000000                     _OSCCON	set	4051
   381   000000                     _PIR1bits	set	3998
   382   000000                     _RCSTA	set	4011
   383   000000                     _TXSTA	set	4012
   384   000000                     _ADCON2	set	4032
   385   000000                     _ADCON1	set	4033
   386   000000                     _ADCON0	set	4034
   387   000000                     _ADRESH	set	4036
   388   000000                     _SPBRGH	set	4016
   389   000000                     _EECON1bits	set	4006
   390   000231  43                 	db	67	;'C'
   391   000232  55                 	db	85	;'U'
   392   000233  52                 	db	82	;'R'
   393   000234  52                 	db	82	;'R'
   394   000235  45                 	db	69	;'E'
   395   000236  4E                 	db	78	;'N'
   396   000237  54                 	db	84	;'T'
   397   000238  20                 	db	32
   398   000239  54                 	db	84	;'T'
   399   00023A  49                 	db	73	;'I'
   400   00023B  4D                 	db	77	;'M'
   401   00023C  45                 	db	69	;'E'
   402   00023D  3A                 	db	58	;':'
   403   00023E  00                 	db	0
   404   00023F                     STR_3:
   405   00023F  55                 	db	85	;'U'
   406   000240  53                 	db	83	;'S'
   407   000241  45                 	db	69	;'E'
   408   000242  52                 	db	82	;'R'
   409   000243  20                 	db	32
   410   000244  4E                 	db	78	;'N'
   411   000245  41                 	db	65	;'A'
   412   000246  4D                 	db	77	;'M'
   413   000247  45                 	db	69	;'E'
   414   000248  3A                 	db	58	;':'
   415   000249  00                 	db	0
   416   00024A                     STR_1:
   417   00024A  44                 	db	68	;'D'
   418   00024B  45                 	db	69	;'E'
   419   00024C  53                 	db	83	;'S'
   420   00024D  54                 	db	84	;'T'
   421   00024E  2E                 	db	46
   422   00024F  50                 	db	80	;'P'
   423   000250  4F                 	db	79	;'O'
   424   000251  52                 	db	82	;'R'
   425   000252  54                 	db	84	;'T'
   426   000253  3A                 	db	58	;':'
   427   000254  00                 	db	0
   428   000255                     STR_2:
   429   000255  52                 	db	82	;'R'
   430   000256  45                 	db	69	;'E'
   431   000257  43                 	db	67	;'C'
   432   000258  2E                 	db	46
   433   000259  50                 	db	80	;'P'
   434   00025A  4F                 	db	79	;'O'
   435   00025B  52                 	db	82	;'R'
   436   00025C  54                 	db	84	;'T'
   437   00025D  3A                 	db	58	;':'
   438   00025E  00                 	db	0
   439   00025F  00                 	db	0	; dummy byte at the end
   440   000000                     
   441                           ; #config settings
   442                           
   443                           	psect	cinit
   444   000CBC                     __pcinit:
   445                           	callstack 0
   446   000CBC                     start_initialization:
   447                           	callstack 0
   448   000CBC                     __initialization:
   449                           	callstack 0
   450                           
   451                           ; Initialize objects allocated to BANK1 (186 bytes)
   452                           ; load TBLPTR registers with __pidataBANK1
   453   000CBC  0E86               	movlw	low __pidataBANK1
   454   000CBE  6EF6               	movwf	tblptrl,c
   455   000CC0  0E08               	movlw	high __pidataBANK1
   456   000CC2  6EF7               	movwf	tblptrh,c
   457   000CC4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   458   000CC6  6EF8               	movwf	tblptru,c
   459   000CC8  EE01  F000         	lfsr	0,__pdataBANK1
   460   000CCC  EE10 F0BA          	lfsr	1,186
   461   000CD0                     copy_data0:
   462   000CD0  0009               	tblrd		*+
   463   000CD2  CFF5 FFEE          	movff	tablat,postinc0
   464   000CD6  50E5               	movf	postdec1,w,c
   465   000CD8  50E1               	movf	fsr1l,w,c
   466   000CDA  E1FA               	bnz	copy_data0
   467                           
   468                           ; Initialize objects allocated to COMRAM (2 bytes)
   469                           ; load TBLPTR registers with __pidataCOMRAM
   470   000CDC  0E08               	movlw	low __pidataCOMRAM
   471   000CDE  6EF6               	movwf	tblptrl,c
   472   000CE0  0E11               	movlw	high __pidataCOMRAM
   473   000CE2  6EF7               	movwf	tblptrh,c
   474   000CE4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   475   000CE6  6EF8               	movwf	tblptru,c
   476   000CE8  0009               	tblrd		*+	;fetch initializer
   477   000CEA  CFF5 F07D          	movff	tablat,__pdataCOMRAM
   478   000CEE  0009               	tblrd		*+	;fetch initializer
   479   000CF0  CFF5 F07E          	movff	tablat,__pdataCOMRAM+1
   480                           
   481                           ; Clear objects allocated to BANK0 (123 bytes)
   482   000CF4  EE00  F080         	lfsr	0,__pbssBANK0
   483   000CF8  0E7B               	movlw	123
   484   000CFA                     clear_0:
   485   000CFA  6AEE               	clrf	postinc0,c
   486   000CFC  06E8               	decf	wreg,f,c
   487   000CFE  E1FD               	bnz	clear_0
   488                           
   489                           ; Clear objects allocated to COMRAM (97 bytes)
   490   000D00  EE00  F001         	lfsr	0,__pbssCOMRAM
   491   000D04  0E61               	movlw	97
   492   000D06                     clear_1:
   493   000D06  6AEE               	clrf	postinc0,c
   494   000D08  06E8               	decf	wreg,f,c
   495   000D0A  E1FD               	bnz	clear_1
   496   000D0C                     end_of_initialization:
   497                           	callstack 0
   498   000D0C                     __end_of__initialization:
   499                           	callstack 0
   500   000D0C  907F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   501   000D0E  927F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   502   000D10  0E00               	movlw	low (__Lmediumconst shr (0+16))
   503   000D12  6EF8               	movwf	tblptru,c
   504   000D14  0100               	movlb	0
   505   000D16  EF04  F007         	goto	_main	;jump to C main() function
   506                           
   507                           	psect	bssCOMRAM
   508   000001                     __pbssCOMRAM:
   509                           	callstack 0
   510   000001                     _timer_tics_1s:
   511                           	callstack 0
   512   000001                     	ds	4
   513   000005                     _Tics:
   514                           	callstack 0
   515   000005                     	ds	4
   516   000009                     _j:
   517                           	callstack 0
   518   000009                     	ds	2
   519   00000B                     _valor_micro_ADRESH:
   520                           	callstack 0
   521   00000B                     	ds	1
   522   00000C                     _estat_tad_recording:
   523                           	callstack 0
   524   00000C                     	ds	1
   525   00000D                     _temps_5s:
   526                           	callstack 0
   527   00000D                     	ds	1
   528   00000E                     _tiempo_nota_total:
   529                           	callstack 0
   530   00000E                     	ds	1
   531   00000F                     _tecla_premuda:
   532                           	callstack 0
   533   00000F                     	ds	1
   534   000010                     _tiempo_nota:
   535                           	callstack 0
   536   000010                     	ds	1
   537   000011                     _TimerNotaTotal:
   538                           	callstack 0
   539   000011                     	ds	1
   540   000012                     _estat_altaveu:
   541                           	callstack 0
   542   000012                     	ds	1
   543   000013                     _nota:
   544                           	callstack 0
   545   000013                     	ds	1
   546   000014                     _flag_putstring_current:
   547                           	callstack 0
   548   000014                     	ds	1
   549   000015                     _minuts1_menu:
   550                           	callstack 0
   551   000015                     	ds	1
   552   000016                     _minuts0_menu:
   553                           	callstack 0
   554   000016                     	ds	1
   555   000017                     _segons1_menu:
   556                           	callstack 0
   557   000017                     	ds	1
   558   000018                     _segons0_menu:
   559                           	callstack 0
   560   000018                     	ds	1
   561   000019                     _flag_CurrentTime:
   562                           	callstack 0
   563   000019                     	ds	1
   564   00001A                     _digit_minuts_1:
   565                           	callstack 0
   566   00001A                     	ds	1
   567   00001B                     _digit_minuts_0:
   568                           	callstack 0
   569   00001B                     	ds	1
   570   00001C                     _digit_segons_1:
   571                           	callstack 0
   572   00001C                     	ds	1
   573   00001D                     _digit_segons_0:
   574                           	callstack 0
   575   00001D                     	ds	1
   576   00001E                     _estat_ct:
   577                           	callstack 0
   578   00001E                     	ds	1
   579   00001F                     _flag:
   580                           	callstack 0
   581   00001F                     	ds	1
   582   000020                     _flag_startmenu_sio:
   583                           	callstack 0
   584   000020                     	ds	1
   585   000021                     _estat_sio:
   586                           	callstack 0
   587   000021                     	ds	1
   588   000022                     _valor_ADRESH:
   589                           	callstack 0
   590   000022                     	ds	1
   591   000023                     _joy_direction:
   592                           	callstack 0
   593   000023                     	ds	1
   594   000024                     _estat_joy:
   595                           	callstack 0
   596   000024                     	ds	1
   597   000025                     _old_fila_matriu:
   598                           	callstack 0
   599   000025                     	ds	1
   600   000026                     _fila_matriu:
   601                           	callstack 0
   602   000026                     	ds	1
   603   000027                     _caracters_escrits:
   604                           	callstack 0
   605   000027                     	ds	1
   606   000028                     _espera:
   607                           	callstack 0
   608   000028                     	ds	1
   609   000029                     _caracter_actual:
   610                           	callstack 0
   611   000029                     	ds	1
   612   00002A                     _columna_polsada:
   613                           	callstack 0
   614   00002A                     	ds	1
   615   00002B                     _hi_ha_tecla:
   616                           	callstack 0
   617   00002B                     	ds	1
   618   00002C                     _fase_escombrat:
   619                           	callstack 0
   620   00002C                     	ds	1
   621   00002D                     _rows:
   622                           	callstack 0
   623   00002D                     	ds	1
   624   00002E                     _estat_teclat:
   625                           	callstack 0
   626   00002E                     	ds	1
   627   00002F                     _caracters_escrits_menu:
   628                           	callstack 0
   629   00002F                     	ds	1
   630   000030                     _flagAltaveu_teclat:
   631                           	callstack 0
   632   000030                     	ds	1
   633   000031                     _flag_preemenu:
   634                           	callstack 0
   635   000031                     	ds	1
   636   000032                     _tower_name_menu2:
   637                           	callstack 0
   638   000032                     	ds	1
   639   000033                     _tower_name_menu1:
   640                           	callstack 0
   641   000033                     	ds	1
   642   000034                     _tower_name_menu0:
   643                           	callstack 0
   644   000034                     	ds	1
   645   000035                     _posicio_caracter:
   646                           	callstack 0
   647   000035                     	ds	1
   648   000036                     _iteracio_char:
   649                           	callstack 0
   650   000036                     	ds	1
   651   000037                     _p:
   652                           	callstack 0
   653   000037                     	ds	1
   654   000038                     _pos_marq:
   655                           	callstack 0
   656   000038                     	ds	1
   657   000039                     _flag_tad_sio:
   658                           	callstack 0
   659   000039                     	ds	1
   660   00003A                     _flag_CurrentTime_menu:
   661                           	callstack 0
   662   00003A                     	ds	1
   663   00003B                     _time_recording_segons:
   664                           	callstack 0
   665   00003B                     	ds	1
   666   00003C                     _time_recording_minuts:
   667                           	callstack 0
   668   00003C                     	ds	1
   669   00003D                     _time_recording:
   670                           	callstack 0
   671   00003D                     	ds	1
   672   00003E                     _timer_start_recording:
   673                           	callstack 0
   674   00003E                     	ds	1
   675   00003F                     _flag_towername:
   676                           	callstack 0
   677   00003F                     	ds	1
   678   000040                     _flag_startmenu:
   679                           	callstack 0
   680   000040                     	ds	1
   681   000041                     _flag_show_current_time:
   682                           	callstack 0
   683   000041                     	ds	1
   684   000042                     _joystick_direction:
   685                           	callstack 0
   686   000042                     	ds	1
   687   000043                     _flag_putstring:
   688                           	callstack 0
   689   000043                     	ds	1
   690   000044                     _fila_matriu_menu:
   691                           	callstack 0
   692   000044                     	ds	1
   693   000045                     _tower_name_position:
   694                           	callstack 0
   695   000045                     	ds	1
   696   000046                     _flag_menu:
   697                           	callstack 0
   698   000046                     	ds	1
   699   000047                     _estat_menu:
   700                           	callstack 0
   701   000047                     	ds	1
   702   000048                     _hi_ha_tecla_menu:
   703                           	callstack 0
   704   000048                     	ds	1
   705   000049                     _filamatriu_menu:
   706                           	callstack 0
   707   000049                     	ds	1
   708   00004A                     _flag_modifyCurrentTime:
   709                           	callstack 0
   710   00004A                     	ds	1
   711   00004B                     _total_temps:
   712                           	callstack 0
   713   00004B                     	ds	1
   714   00004C                     _CurrentTimeComplet:
   715                           	callstack 0
   716   00004C                     	ds	1
   717   00004D                     _temps_8s:
   718                           	callstack 0
   719   00004D                     	ds	1
   720   00004E                     _posicio_ensenyar_eeprom:
   721                           	callstack 0
   722   00004E                     	ds	1
   723   00004F                     _posicio_grabacio:
   724                           	callstack 0
   725   00004F                     	ds	1
   726   000050                     _iterador_towername:
   727                           	callstack 0
   728   000050                     	ds	1
   729   000051                     _eedata:
   730                           	callstack 0
   731   000051                     	ds	1
   732   000052                     _joystick_down_counter:
   733                           	callstack 0
   734   000052                     	ds	1
   735   000053                     _fila_play_recording:
   736                           	callstack 0
   737   000053                     	ds	1
   738   000054                     _estat_string:
   739                           	callstack 0
   740   000054                     	ds	1
   741   000055                     _ColumnAct:
   742                           	callstack 0
   743   000055                     	ds	1
   744   000056                     _RowAct:
   745                           	callstack 0
   746   000056                     	ds	1
   747   000057                     _Columns:
   748                           	callstack 0
   749   000057                     	ds	1
   750   000058                     _Rows:
   751                           	callstack 0
   752   000058                     	ds	1
   753   000059                     _TimerRecordingADC:
   754                           	callstack 0
   755   000059                     	ds	1
   756   00005A                     _TimerMelody:
   757                           	callstack 0
   758   00005A                     	ds	1
   759   00005B                     _TimerTiempoNota:
   760                           	callstack 0
   761   00005B                     	ds	1
   762   00005C                     _Timer1S:
   763                           	callstack 0
   764   00005C                     	ds	1
   765   00005D                     _TimerRebots:
   766                           	callstack 0
   767   00005D                     	ds	1
   768   00005E                     _timer_2s:
   769                           	callstack 0
   770   00005E                     	ds	1
   771   00005F                     _TimerMarquesina:
   772                           	callstack 0
   773   00005F                     	ds	1
   774   000060                     _TimerRecording:
   775                           	callstack 0
   776   000060                     	ds	1
   777   000061                     _Timer:
   778                           	callstack 0
   779   000061                     	ds	1
   780                           
   781                           	psect	dataCOMRAM
   782   00007D                     __pdataCOMRAM:
   783                           	callstack 0
   784   00007D                     _flag_TTeclat:
   785                           	callstack 0
   786   00007D                     	ds	1
   787   00007E                     _flag_TTeclat_menu:
   788                           	callstack 0
   789   00007E                     	ds	1
   790                           
   791                           	psect	bssBANK0
   792   000080                     __pbssBANK0:
   793                           	callstack 0
   794   000080                     _Timers:
   795                           	callstack 0
   796   000080                     	ds	45
   797   0000AD                     _index:
   798                           	callstack 0
   799   0000AD                     	ds	16
   800   0000BD                     _current_time_recording:
   801                           	callstack 0
   802   0000BD                     	ds	5
   803   0000C2                     _current_tics_x:
   804                           	callstack 0
   805   0000C2                     	ds	4
   806   0000C6                     _tower_name:
   807                           	callstack 0
   808   0000C6                     	ds	4
   809   0000CA                     _timer_tics:
   810                           	callstack 0
   811   0000CA                     	ds	4
   812   0000CE                     _rec_port:
   813                           	callstack 0
   814   0000CE                     	ds	4
   815   0000D2                     _dest_port:
   816                           	callstack 0
   817   0000D2                     	ds	4
   818   0000D6                     _tower_name_menu:
   819                           	callstack 0
   820   0000D6                     	ds	4
   821   0000DA                     _user_name:
   822                           	callstack 0
   823   0000DA                     	ds	3
   824   0000DD                     _mostres:
   825                           	callstack 0
   826   0000DD                     	ds	2
   827   0000DF                     _temps_grabacio:
   828                           	callstack 0
   829   0000DF                     	ds	2
   830   0000E1                     _arrModifyCurrentTimeSegons:
   831                           	callstack 0
   832   0000E1                     	ds	2
   833   0000E3                     _arrModifyCurrentTimeMinuts:
   834                           	callstack 0
   835   0000E3                     	ds	2
   836   0000E5                     _mostres_micro:
   837                           	callstack 0
   838   0000E5                     	ds	2
   839   0000E7                     _flag_end_playing:
   840                           	callstack 0
   841   0000E7                     	ds	1
   842   0000E8                     _index0_playrec:
   843                           	callstack 0
   844   0000E8                     	ds	1
   845   0000E9                     _gravacio_reprduir_id:
   846                           	callstack 0
   847   0000E9                     	ds	1
   848   0000EA                     _estat_play:
   849                           	callstack 0
   850   0000EA                     	ds	1
   851   0000EB                     _eeprom_overflow:
   852                           	callstack 0
   853   0000EB                     	ds	1
   854   0000EC                     _index_data:
   855                           	callstack 0
   856   0000EC                     	ds	1
   857   0000ED                     _eeprom_read:
   858                           	callstack 0
   859   0000ED                     	ds	1
   860   0000EE                     _eeprom_adress_temp:
   861                           	callstack 0
   862   0000EE                     	ds	1
   863   0000EF                     _total_gravacions:
   864                           	callstack 0
   865   0000EF                     	ds	1
   866   0000F0                     _flag_index:
   867                           	callstack 0
   868   0000F0                     	ds	1
   869   0000F1                     _p1:
   870                           	callstack 0
   871   0000F1                     	ds	1
   872   0000F2                     _eeprom_data:
   873                           	callstack 0
   874   0000F2                     	ds	1
   875   0000F3                     _estat_eeprom:
   876                           	callstack 0
   877   0000F3                     	ds	1
   878   0000F4                     _index_gravacions:
   879                           	callstack 0
   880   0000F4                     	ds	1
   881   0000F5                     _n:
   882                           	callstack 0
   883   0000F5                     	ds	1
   884   0000F6                     _eeprom_adress:
   885                           	callstack 0
   886   0000F6                     	ds	1
   887   0000F7                     _TimerCurrentTime:
   888                           	callstack 0
   889   0000F7                     	ds	4
   890                           
   891                           	psect	dataBANK1
   892   000100                     __pdataBANK1:
   893                           	callstack 0
   894   000100                     _marquesina_text:
   895                           	callstack 0
   896   000100                     	ds	120
   897   000178                     _matriu_teclat:
   898                           	callstack 0
   899   000178                     	ds	66
   900                           
   901                           	psect	cstackCOMRAM
   902   000062                     __pcstackCOMRAM:
   903                           	callstack 0
   904   000062                     ??_EscriuPrimeraOrdre:
   905   000062                     ??_motorJoy:
   906   000062                     ??_CantaPartAlta:
   907   000062                     ??_CantaPartBaixa:
   908   000062                     ?_TI_GetTics:
   909                           	callstack 0
   910   000062                     TI_Init@counter:
   911                           	callstack 0
   912   000062                     TI_NewTimer@TimerHandle:
   913                           	callstack 0
   914   000062                     TI_ResetTics@TimerHandle:
   915                           	callstack 0
   916   000062                     getTowerName@p:
   917                           	callstack 0
   918   000062                     setFiles@rows:
   919                           	callstack 0
   920   000062                     TI_GetTics@TimerHandle:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0x0
   924   000062                     	ds	1
   925   000063                     CantaPartAlta@c:
   926                           	callstack 0
   927   000063                     CantaPartBaixa@c:
   928                           	callstack 0
   929   000063                     EscriuPrimeraOrdre@ordre:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x1
   933   000063                     	ds	1
   934   000064                     TI_NewTimer@Comptador:
   935                           	callstack 0
   936   000064                     CantaIR@IR:
   937                           	callstack 0
   938   000064                     CantaData@Data:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x2
   942   000064                     	ds	1
   943   000065                     
   944                           ; 1 bytes @ 0x3
   945   000065                     	ds	1
   946   000066                     ??_TI_GetTics:
   947                           
   948                           ; 1 bytes @ 0x4
   949   000066                     	ds	4
   950   00006A                     TI_GetTics@CopiaTicsActual:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x8
   954   00006A                     	ds	4
   955   00006E                     WaitForBusy@Busy:
   956                           	callstack 0
   957   00006E                     Espera@ms:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0xC
   961   00006E                     	ds	1
   962   00006F                     LcGotoXY@Row:
   963                           	callstack 0
   964                           
   965                           ; 1 bytes @ 0xD
   966   00006F                     	ds	1
   967   000070                     ??_Espera:
   968   000070                     ??_LcGotoXY:
   969                           
   970                           ; 1 bytes @ 0xE
   971   000070                     	ds	2
   972   000072                     _LcGotoXY$395:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x10
   976   000072                     	ds	2
   977   000074                     LcGotoXY@Fisics:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x12
   981   000074                     	ds	2
   982   000076                     LcGotoXY@Column:
   983                           	callstack 0
   984   000076                     Espera@Timer:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x14
   988   000076                     	ds	1
   989   000077                     LcInit@columns:
   990                           	callstack 0
   991   000077                     LcPutChar@c:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x15
   995   000077                     	ds	1
   996   000078                     ??_writeCaracter:
   997   000078                     LcInit@rows:
   998                           	callstack 0
   999   000078                     MyPutString@frase:
  1000                           	callstack 0
  1001                           
  1002                           ; 1 bytes @ 0x16
  1003   000078                     	ds	1
  1004   000079                     ??_MyPutString:
  1005   000079                     LcInit@i:
  1006                           	callstack 0
  1007                           
  1008                           ; 2 bytes @ 0x17
  1009   000079                     	ds	1
  1010   00007A                     ??_motorTeclat:
  1011                           
  1012                           ; 1 bytes @ 0x18
  1013   00007A                     	ds	1
  1014   00007B                     ??_motorMenu:
  1015                           
  1016                           ; 1 bytes @ 0x19
  1017   00007B                     	ds	2
  1018   00007D                     
  1019                           ; 1 bytes @ 0x1B
  1020 ;;
  1021 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1022 ;;
  1023 ;; *************** function _main *****************
  1024 ;; Defined at:
  1025 ;;		line 57 in file "newmain.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1
  1039 ;;      Params:         0       0       0
  1040 ;;      Locals:         0       0       0
  1041 ;;      Temps:          0       0       0
  1042 ;;      Totals:         0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels required when called: 8
  1045 ;; This function calls:
  1046 ;;		_ADC_Init
  1047 ;;		_InitAltaveu
  1048 ;;		_InitconfOsc
  1049 ;;		_LcGotoXY
  1050 ;;		_LcInit
  1051 ;;		_Menu_Init
  1052 ;;		_TI_Init
  1053 ;;		_initEEPROM
  1054 ;;		_initMicro
  1055 ;;		_initTeclat
  1056 ;;		_motorJoy
  1057 ;;		_motorMenu
  1058 ;;		_motorTeclat
  1059 ;;		_sioInit
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           	psect	text0
  1066   000E08                     __ptext0:
  1067                           	callstack 0
  1068   000E08                     _main:
  1069                           	callstack 23
  1070                           
  1071                           ;newmain.c: 59:     InitconfOsc();
  1072                           
  1073                           ;incstack = 0
  1074   000E08  EC79  F008         	call	_InitconfOsc	;wreg free
  1075                           
  1076                           ;newmain.c: 60:     TI_Init();
  1077   000E0C  ECEB  F007         	call	_TI_Init	;wreg free
  1078                           
  1079                           ;newmain.c: 61:     Menu_Init();
  1080   000E10  EC85  F007         	call	_Menu_Init	;wreg free
  1081                           
  1082                           ;newmain.c: 62:     LcInit(2, 16);
  1083   000E14  0E10               	movlw	16
  1084   000E16  6E77               	movwf	LcInit@columns^0,c
  1085   000E18  0E02               	movlw	2
  1086   000E1A  EC77  F003         	call	_LcInit
  1087                           
  1088                           ;newmain.c: 63:     initTeclat();
  1089   000E1E  EC67  F007         	call	_initTeclat	;wreg free
  1090                           
  1091                           ;newmain.c: 64:     LcGotoXY(0,0);
  1092   000E22  0E00               	movlw	0
  1093   000E24  6E6F               	movwf	LcGotoXY@Row^0,c
  1094   000E26  0E00               	movlw	0
  1095   000E28  ECA0  F004         	call	_LcGotoXY
  1096                           
  1097                           ;newmain.c: 65:     ADC_Init();
  1098   000E2C  EC65  F008         	call	_ADC_Init	;wreg free
  1099                           
  1100                           ;newmain.c: 66:     InitAltaveu();
  1101   000E30  EC01  F008         	call	_InitAltaveu	;wreg free
  1102                           
  1103                           ;newmain.c: 67:     sioInit();
  1104   000E34  EC26  F008         	call	_sioInit	;wreg free
  1105                           
  1106                           ;newmain.c: 68:     initMicro();
  1107   000E38  EC43  F008         	call	_initMicro	;wreg free
  1108                           
  1109                           ;newmain.c: 69:     initEEPROM();
  1110   000E3C  EC74  F008         	call	_initEEPROM	;wreg free
  1111   000E40                     l3276:
  1112                           
  1113                           ;newmain.c: 73:         motorMenu();
  1114   000E40  EC2A  F002         	call	_motorMenu	;wreg free
  1115                           
  1116                           ;newmain.c: 74:         motorTeclat();
  1117   000E44  EC30  F001         	call	_motorTeclat	;wreg free
  1118                           
  1119                           ;newmain.c: 75:         motorJoy();
  1120   000E48  EC7A  F005         	call	_motorJoy	;wreg free
  1121   000E4C  D7F9               	goto	l3276
  1122   000E4E                     __end_of_main:
  1123                           	callstack 0
  1124                           
  1125 ;; *************** function _sioInit *****************
  1126 ;; Defined at:
  1127 ;;		line 11 in file "SIO.c"
  1128 ;; Parameters:    Size  Location     Type
  1129 ;;		None
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;		None
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, status,2
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMRAM   BANK0   BANK1
  1141 ;;      Params:         0       0       0
  1142 ;;      Locals:         0       0       0
  1143 ;;      Temps:          0       0       0
  1144 ;;      Totals:         0       0       0
  1145 ;;Total ram usage:        0 bytes
  1146 ;; Hardware stack levels used: 1
  1147 ;; Hardware stack levels required when called: 2
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text1
  1156   00104C                     __ptext1:
  1157                           	callstack 0
  1158   00104C                     _sioInit:
  1159                           	callstack 28
  1160                           
  1161                           ;SIO.c: 12:     estat_sio = 0;
  1162                           
  1163                           ;incstack = 0
  1164   00104C  0E00               	movlw	0
  1165   00104E  6E21               	movwf	_estat_sio^0,c
  1166                           
  1167                           ;SIO.c: 13:     flag_tad_sio = 0;
  1168   001050  0E00               	movlw	0
  1169   001052  6E39               	movwf	_flag_tad_sio^0,c
  1170                           
  1171                           ;SIO.c: 15:     TRISCbits.TRISC6 = 1;
  1172   001054  8C94               	bsf	148,6,c	;volatile
  1173                           
  1174                           ;SIO.c: 16:     TRISCbits.TRISC7 = 1;
  1175   001056  8E94               	bsf	148,7,c	;volatile
  1176                           
  1177                           ;SIO.c: 18:     TXSTA = 0x26;
  1178   001058  0E26               	movlw	38
  1179   00105A  6EAC               	movwf	172,c	;volatile
  1180                           
  1181                           ;SIO.c: 19:     RCSTA = 0x90;
  1182   00105C  0E90               	movlw	144
  1183   00105E  6EAB               	movwf	171,c	;volatile
  1184                           
  1185                           ;SIO.c: 20:     BAUDCONbits.BRG16 = 1;
  1186   001060  86B8               	bsf	184,3,c	;volatile
  1187                           
  1188                           ;SIO.c: 21:     SPBRG = 68;
  1189   001062  0E44               	movlw	68
  1190   001064  6EAF               	movwf	175,c	;volatile
  1191                           
  1192                           ;SIO.c: 22:     SPBRGH = 0;
  1193   001066  0E00               	movlw	0
  1194   001068  6EB0               	movwf	176,c	;volatile
  1195   00106A  0012               	return		;funcret
  1196   00106C                     __end_of_sioInit:
  1197                           	callstack 0
  1198                           
  1199 ;; *************** function _motorTeclat *****************
  1200 ;; Defined at:
  1201 ;;		line 234 in file "TTECLAT.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMRAM   BANK0   BANK1
  1215 ;;      Params:         0       0       0
  1216 ;;      Locals:         0       0       0
  1217 ;;      Temps:          2       0       0
  1218 ;;      Totals:         2       0       0
  1219 ;;Total ram usage:        2 bytes
  1220 ;; Hardware stack levels used: 1
  1221 ;; Hardware stack levels required when called: 7
  1222 ;; This function calls:
  1223 ;;		_Getflag_TTeclat
  1224 ;;		_TI_GetTics
  1225 ;;		_TI_ResetTics
  1226 ;;		_comprovaHiHaColumna
  1227 ;;		_saveTecla
  1228 ;;		_setFiles
  1229 ;;		_waitTeclaTreta
  1230 ;;		_writeCaracter
  1231 ;; This function is called by:
  1232 ;;		_main
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text2
  1237   000260                     __ptext2:
  1238                           	callstack 0
  1239   000260                     _motorTeclat:
  1240                           	callstack 23
  1241                           
  1242                           ;TTECLAT.c: 235:     switch (estat_teclat){
  1243                           
  1244                           ;incstack = 0
  1245   000260  D0D7               	goto	l3252
  1246   000262                     l3142:
  1247                           
  1248                           ;TTECLAT.c: 237:             rows = 0x01;
  1249   000262  0E01               	movlw	1
  1250   000264  6E2D               	movwf	_rows^0,c
  1251                           
  1252                           ;TTECLAT.c: 238:             setFiles(rows);
  1253   000266  502D               	movf	_rows^0,w,c
  1254   000268  EC27  F007         	call	_setFiles
  1255                           
  1256                           ;TTECLAT.c: 239:             estat_teclat = 1;
  1257   00026C  0E01               	movlw	1
  1258   00026E  6E2E               	movwf	_estat_teclat^0,c
  1259                           
  1260                           ;TTECLAT.c: 240:             columna_polsada = comprovaHiHaColumna();
  1261   000270  ECD5  F007         	call	_comprovaHiHaColumna	;wreg free
  1262   000274  6E2A               	movwf	_columna_polsada^0,c
  1263                           
  1264                           ;TTECLAT.c: 241:             if (hi_ha_tecla == 1){
  1265   000276  042B               	decf	_hi_ha_tecla^0,w,c
  1266   000278  A4D8               	btfss	status,2,c
  1267   00027A  0012               	return	
  1268                           
  1269                           ;TTECLAT.c: 242:                 flagAltaveu_teclat = 1;
  1270   00027C  0E01               	movlw	1
  1271   00027E  6E30               	movwf	_flagAltaveu_teclat^0,c
  1272                           
  1273                           ;TTECLAT.c: 243:                 estat_teclat = 4;
  1274   000280  0E04               	movlw	4
  1275   000282  6E2E               	movwf	_estat_teclat^0,c
  1276                           
  1277                           ;TTECLAT.c: 244:                 TI_ResetTics (TimerRebots);
  1278   000284  505D               	movf	_TimerRebots^0,w,c
  1279   000286  EC14  F008         	call	_TI_ResetTics
  1280   00028A  0012               	return	
  1281   00028C                     l3156:
  1282                           
  1283                           ;TTECLAT.c: 248:             rows = 0x02;
  1284   00028C  0E02               	movlw	2
  1285   00028E  6E2D               	movwf	_rows^0,c
  1286                           
  1287                           ;TTECLAT.c: 249:             setFiles(rows);
  1288   000290  502D               	movf	_rows^0,w,c
  1289   000292  EC27  F007         	call	_setFiles
  1290                           
  1291                           ;TTECLAT.c: 250:             estat_teclat = 2;
  1292   000296  0E02               	movlw	2
  1293   000298  6E2E               	movwf	_estat_teclat^0,c
  1294                           
  1295                           ;TTECLAT.c: 251:             columna_polsada = comprovaHiHaColumna();
  1296   00029A  ECD5  F007         	call	_comprovaHiHaColumna	;wreg free
  1297   00029E  6E2A               	movwf	_columna_polsada^0,c
  1298                           
  1299                           ;TTECLAT.c: 252:             if (hi_ha_tecla){
  1300   0002A0  502B               	movf	_hi_ha_tecla^0,w,c
  1301   0002A2  B4D8               	btfsc	status,2,c
  1302   0002A4  0012               	return	
  1303                           
  1304                           ;TTECLAT.c: 253:                 flagAltaveu_teclat = 1;
  1305   0002A6  0E01               	movlw	1
  1306   0002A8  6E30               	movwf	_flagAltaveu_teclat^0,c
  1307                           
  1308                           ;TTECLAT.c: 254:                 estat_teclat = 4;
  1309   0002AA  0E04               	movlw	4
  1310   0002AC  6E2E               	movwf	_estat_teclat^0,c
  1311                           
  1312                           ;TTECLAT.c: 255:                 TI_ResetTics (TimerRebots);
  1313   0002AE  505D               	movf	_TimerRebots^0,w,c
  1314   0002B0  EC14  F008         	call	_TI_ResetTics
  1315   0002B4  0012               	return	
  1316   0002B6                     l3170:
  1317                           
  1318                           ;TTECLAT.c: 260:             rows = 0x04;
  1319   0002B6  0E04               	movlw	4
  1320   0002B8  6E2D               	movwf	_rows^0,c
  1321                           
  1322                           ;TTECLAT.c: 261:             setFiles(rows);
  1323   0002BA  502D               	movf	_rows^0,w,c
  1324   0002BC  EC27  F007         	call	_setFiles
  1325                           
  1326                           ;TTECLAT.c: 262:             estat_teclat = 3;
  1327   0002C0  0E03               	movlw	3
  1328   0002C2  6E2E               	movwf	_estat_teclat^0,c
  1329                           
  1330                           ;TTECLAT.c: 263:             columna_polsada = comprovaHiHaColumna();
  1331   0002C4  ECD5  F007         	call	_comprovaHiHaColumna	;wreg free
  1332   0002C8  6E2A               	movwf	_columna_polsada^0,c
  1333                           
  1334                           ;TTECLAT.c: 264:             if (hi_ha_tecla){
  1335   0002CA  502B               	movf	_hi_ha_tecla^0,w,c
  1336   0002CC  B4D8               	btfsc	status,2,c
  1337   0002CE  0012               	return	
  1338                           
  1339                           ;TTECLAT.c: 265:                 flagAltaveu_teclat = 1;
  1340   0002D0  0E01               	movlw	1
  1341   0002D2  6E30               	movwf	_flagAltaveu_teclat^0,c
  1342                           
  1343                           ;TTECLAT.c: 266:                 estat_teclat = 4;
  1344   0002D4  0E04               	movlw	4
  1345   0002D6  6E2E               	movwf	_estat_teclat^0,c
  1346                           
  1347                           ;TTECLAT.c: 267:                 TI_ResetTics (TimerRebots);
  1348   0002D8  505D               	movf	_TimerRebots^0,w,c
  1349   0002DA  EC14  F008         	call	_TI_ResetTics
  1350   0002DE  0012               	return	
  1351   0002E0                     l3184:
  1352                           
  1353                           ;TTECLAT.c: 272:             rows = 0x08;
  1354   0002E0  0E08               	movlw	8
  1355   0002E2  6E2D               	movwf	_rows^0,c
  1356                           
  1357                           ;TTECLAT.c: 273:             setFiles(rows);
  1358   0002E4  502D               	movf	_rows^0,w,c
  1359   0002E6  EC27  F007         	call	_setFiles
  1360                           
  1361                           ;TTECLAT.c: 274:             estat_teclat = 0;
  1362   0002EA  0E00               	movlw	0
  1363   0002EC  6E2E               	movwf	_estat_teclat^0,c
  1364                           
  1365                           ;TTECLAT.c: 275:             columna_polsada = comprovaHiHaColumna();
  1366   0002EE  ECD5  F007         	call	_comprovaHiHaColumna	;wreg free
  1367   0002F2  6E2A               	movwf	_columna_polsada^0,c
  1368                           
  1369                           ;TTECLAT.c: 276:             if (hi_ha_tecla){
  1370   0002F4  502B               	movf	_hi_ha_tecla^0,w,c
  1371   0002F6  B4D8               	btfsc	status,2,c
  1372   0002F8  0012               	return	
  1373                           
  1374                           ;TTECLAT.c: 277:                 flagAltaveu_teclat = 1;
  1375   0002FA  0E01               	movlw	1
  1376   0002FC  6E30               	movwf	_flagAltaveu_teclat^0,c
  1377                           
  1378                           ;TTECLAT.c: 278:                 estat_teclat = 4;
  1379   0002FE  0E04               	movlw	4
  1380   000300  6E2E               	movwf	_estat_teclat^0,c
  1381                           
  1382                           ;TTECLAT.c: 279:                 TI_ResetTics (TimerRebots);
  1383   000302  505D               	movf	_TimerRebots^0,w,c
  1384   000304  EC14  F008         	call	_TI_ResetTics
  1385   000308  0012               	return	
  1386   00030A                     l3198:
  1387                           
  1388                           ;TTECLAT.c: 284:             flagAltaveu_teclat = 0;
  1389   00030A  0E00               	movlw	0
  1390   00030C  6E30               	movwf	_flagAltaveu_teclat^0,c
  1391                           
  1392                           ;TTECLAT.c: 285:             timer_tics = TI_GetTics (TimerRebots);
  1393   00030E  505D               	movf	_TimerRebots^0,w,c
  1394   000310  6E62               	movwf	TI_GetTics@TimerHandle^0,c
  1395   000312  6A63               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  1396   000314  6A64               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  1397   000316  6A65               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  1398   000318  ECDF  F006         	call	_TI_GetTics	;wreg free
  1399   00031C  C062  F0CA         	movff	?_TI_GetTics,_timer_tics
  1400   000320  C063  F0CB         	movff	?_TI_GetTics+1,_timer_tics+1
  1401   000324  C064  F0CC         	movff	?_TI_GetTics+2,_timer_tics+2
  1402   000328  C065  F0CD         	movff	?_TI_GetTics+3,_timer_tics+3
  1403                           
  1404                           ;TTECLAT.c: 286:             if (timer_tics >= 8){
  1405   00032C  0100               	movlb	0	; () banked
  1406   00032E  51CD               	movf	(_timer_tics+3)& (0+255),w,b
  1407   000330  11CC               	iorwf	(_timer_tics+2)& (0+255),w,b
  1408   000332  11CB               	iorwf	(_timer_tics+1)& (0+255),w,b
  1409   000334  E104               	bnz	u1870
  1410   000336  0E08               	movlw	8
  1411   000338  5DCA               	subwf	_timer_tics& (0+255),w,b
  1412   00033A  A0D8               	btfss	status,0,c
  1413   00033C  0012               	return	
  1414   00033E                     u1870:
  1415                           
  1416                           ; BSR set to: 0
  1417                           ;TTECLAT.c: 287:                 if (hi_ha_tecla){
  1418   00033E  502B               	movf	_hi_ha_tecla^0,w,c
  1419   000340  B4D8               	btfsc	status,2,c
  1420   000342  D012               	goto	l3210
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;TTECLAT.c: 288:                     estat_teclat = 5;
  1424   000344  0E05               	movlw	5
  1425   000346  6E2E               	movwf	_estat_teclat^0,c
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;TTECLAT.c: 289:                     timer_tics_1s = TI_GetTics (Timer1S);
  1429   000348  505C               	movf	_Timer1S^0,w,c
  1430   00034A  6E62               	movwf	TI_GetTics@TimerHandle^0,c
  1431   00034C  6A63               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  1432   00034E  6A64               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  1433   000350  6A65               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  1434   000352  ECDF  F006         	call	_TI_GetTics	;wreg free
  1435   000356  C062  F001         	movff	?_TI_GetTics,_timer_tics_1s
  1436   00035A  C063  F002         	movff	?_TI_GetTics+1,_timer_tics_1s+1
  1437   00035E  C064  F003         	movff	?_TI_GetTics+2,_timer_tics_1s+2
  1438   000362  C065  F004         	movff	?_TI_GetTics+3,_timer_tics_1s+3
  1439                           
  1440                           ;TTECLAT.c: 291:                 }else{
  1441   000366  0012               	return	
  1442   000368                     l3210:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;TTECLAT.c: 292:                     estat_teclat = 0;
  1446   000368  0E00               	movlw	0
  1447   00036A  6E2E               	movwf	_estat_teclat^0,c
  1448   00036C  0012               	return	
  1449   00036E                     l3212:
  1450                           
  1451                           ;TTECLAT.c: 298:             waitTeclaTreta();
  1452   00036E  EC5C  F008         	call	_waitTeclaTreta	;wreg free
  1453                           
  1454                           ;TTECLAT.c: 299:             TI_ResetTics (Timer1S);
  1455   000372  505C               	movf	_Timer1S^0,w,c
  1456   000374  EC14  F008         	call	_TI_ResetTics
  1457                           
  1458                           ;TTECLAT.c: 300:         break;
  1459   000378  0012               	return	
  1460   00037A                     l3216:
  1461                           
  1462                           ;TTECLAT.c: 304:             if (timer_tics_1s >= 4000){
  1463   00037A  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1464   00037C  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1465   00037E  E106               	bnz	u1890
  1466   000380  0EA0               	movlw	160
  1467   000382  5C01               	subwf	_timer_tics_1s^0,w,c
  1468   000384  0E0F               	movlw	15
  1469   000386  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1470   000388  A0D8               	btfss	status,0,c
  1471   00038A  D002               	goto	l3220
  1472   00038C                     u1890:
  1473                           
  1474                           ;TTECLAT.c: 305:                 caracter_actual = 0;
  1475   00038C  0E00               	movlw	0
  1476   00038E  6E29               	movwf	_caracter_actual^0,c
  1477   000390                     l3220:
  1478                           
  1479                           ;TTECLAT.c: 308:             saveTecla();
  1480   000390  ECFA  F002         	call	_saveTecla	;wreg free
  1481                           
  1482                           ;TTECLAT.c: 309:             estat_teclat = 7;
  1483   000394  0E07               	movlw	7
  1484   000396  6E2E               	movwf	_estat_teclat^0,c
  1485                           
  1486                           ;TTECLAT.c: 310:             break;
  1487   000398  0012               	return	
  1488   00039A                     l3224:
  1489                           
  1490                           ;TTECLAT.c: 313:             if(old_fila_matriu != fila_matriu || timer_tics_1s > 4000){
  1491   00039A  5026               	movf	_fila_matriu^0,w,c
  1492   00039C  1825               	xorwf	_old_fila_matriu^0,w,c
  1493   00039E  A4D8               	btfss	status,2,c
  1494   0003A0  D009               	goto	u1910
  1495   0003A2  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1496   0003A4  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1497   0003A6  E106               	bnz	u1910
  1498   0003A8  0EA1               	movlw	161
  1499   0003AA  5C01               	subwf	_timer_tics_1s^0,w,c
  1500   0003AC  0E0F               	movlw	15
  1501   0003AE  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1502   0003B0  A0D8               	btfss	status,0,c
  1503   0003B2  D019               	goto	l3236
  1504   0003B4                     u1910:
  1505                           
  1506                           ;TTECLAT.c: 314:                 tower_name[caracters_escrits] = matriu_teclat[fila_matr
      +                          iu][caracter_actual-1];
  1507   0003B4  5026               	movf	_fila_matriu^0,w,c
  1508   0003B6  0D06               	mullw	6
  1509   0003B8  0E77               	movlw	low (_matriu_teclat+65535)
  1510   0003BA  24F3               	addwf	243,w,c
  1511   0003BC  6E7A               	movwf	??_motorTeclat^0,c
  1512   0003BE  0E01               	movlw	high (_matriu_teclat+65535)
  1513   0003C0  20F4               	addwfc	prodh,w,c
  1514   0003C2  6E7B               	movwf	(??_motorTeclat+1)^0,c
  1515   0003C4  5029               	movf	_caracter_actual^0,w,c
  1516   0003C6  247A               	addwf	??_motorTeclat^0,w,c
  1517   0003C8  6ED9               	movwf	fsr2l,c
  1518   0003CA  0E00               	movlw	0
  1519   0003CC  207B               	addwfc	(??_motorTeclat+1)^0,w,c
  1520   0003CE  6EDA               	movwf	fsr2h,c
  1521   0003D0  5027               	movf	_caracters_escrits^0,w,c
  1522   0003D2  0FC6               	addlw	low _tower_name
  1523   0003D4  6EE1               	movwf	fsr1l,c
  1524   0003D6  6AE2               	clrf	fsr1h,c
  1525   0003D8  CFDF FFE7          	movff	indf2,indf1
  1526                           
  1527                           ;TTECLAT.c: 316:                 caracters_escrits++;
  1528   0003DC  2A27               	incf	_caracters_escrits^0,f,c
  1529                           
  1530                           ;TTECLAT.c: 317:                 caracter_actual = 0;
  1531   0003DE  0E00               	movlw	0
  1532   0003E0  6E29               	movwf	_caracter_actual^0,c
  1533                           
  1534                           ;TTECLAT.c: 318:                 caracters_escrits_menu = caracters_escrits;
  1535   0003E2  C027  F02F         	movff	_caracters_escrits,_caracters_escrits_menu
  1536   0003E6                     l3236:
  1537                           
  1538                           ;TTECLAT.c: 320:             flag_TTeclat = Getflag_TTeclat();
  1539   0003E6  EC7E  F008         	call	_Getflag_TTeclat	;wreg free
  1540   0003EA  6E7D               	movwf	_flag_TTeclat^0,c
  1541                           
  1542                           ;TTECLAT.c: 321:             if(flag_TTeclat){
  1543   0003EC  507D               	movf	_flag_TTeclat^0,w,c
  1544   0003EE  A4D8               	btfss	status,2,c
  1545                           
  1546                           ;TTECLAT.c: 322:                 writeCaracter();
  1547   0003F0  ECE4  F003         	call	_writeCaracter	;wreg free
  1548                           
  1549                           ;TTECLAT.c: 324:             estat_teclat = 0;
  1550   0003F4  0E00               	movlw	0
  1551   0003F6  6E2E               	movwf	_estat_teclat^0,c
  1552                           
  1553                           ;TTECLAT.c: 325:             old_fila_matriu = fila_matriu;
  1554   0003F8  C026  F025         	movff	_fila_matriu,_old_fila_matriu
  1555                           
  1556                           ;TTECLAT.c: 326:             if (flag_preemenu == 1){
  1557   0003FC  0431               	decf	_flag_preemenu^0,w,c
  1558   0003FE  A4D8               	btfss	status,2,c
  1559   000400  0012               	return	
  1560                           
  1561                           ;TTECLAT.c: 327:                 estat_teclat = 0;
  1562   000402  0E00               	movlw	0
  1563   000404  6E2E               	movwf	_estat_teclat^0,c
  1564                           
  1565                           ;TTECLAT.c: 328:                 fila_matriu = 12;
  1566   000406  0E0C               	movlw	12
  1567   000408  6E26               	movwf	_fila_matriu^0,c
  1568                           
  1569                           ;TTECLAT.c: 329:                 flag_preemenu = 0;
  1570   00040A  0E00               	movlw	0
  1571   00040C  6E31               	movwf	_flag_preemenu^0,c
  1572   00040E  0012               	return	
  1573   000410                     l3252:
  1574   000410  502E               	movf	_estat_teclat^0,w,c
  1575   000412  6E7A               	movwf	??_motorTeclat^0,c
  1576   000414  6A7B               	clrf	(??_motorTeclat+1)^0,c
  1577                           
  1578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1579                           ; Switch size 1, requested type "simple"
  1580                           ; Number of cases is 1, Range of values is 0 to 0
  1581                           ; switch strategies available:
  1582                           ; Name         Instructions Cycles
  1583                           ; simple_byte            4     3 (average)
  1584                           ;	Chosen strategy is simple_byte
  1585   000416  507B               	movf	(??_motorTeclat+1)^0,w,c
  1586   000418  0A00               	xorlw	0	; case 0
  1587   00041A  A4D8               	btfss	status,2,c
  1588   00041C  0012               	return	
  1589                           
  1590                           ; Switch size 1, requested type "simple"
  1591                           ; Number of cases is 9, Range of values is 0 to 8
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte           28    15 (average)
  1595                           ;	Chosen strategy is simple_byte
  1596   00041E  507A               	movf	??_motorTeclat^0,w,c
  1597   000420  0A00               	xorlw	0	; case 0
  1598   000422  B4D8               	btfsc	status,2,c
  1599   000424  D71E               	goto	l3142
  1600   000426  0A01               	xorlw	1	; case 1
  1601   000428  B4D8               	btfsc	status,2,c
  1602   00042A  D730               	goto	l3156
  1603   00042C  0A03               	xorlw	3	; case 2
  1604   00042E  B4D8               	btfsc	status,2,c
  1605   000430  D742               	goto	l3170
  1606   000432  0A01               	xorlw	1	; case 3
  1607   000434  B4D8               	btfsc	status,2,c
  1608   000436  D754               	goto	l3184
  1609   000438  0A07               	xorlw	7	; case 4
  1610   00043A  B4D8               	btfsc	status,2,c
  1611   00043C  D766               	goto	l3198
  1612   00043E  0A01               	xorlw	1	; case 5
  1613   000440  B4D8               	btfsc	status,2,c
  1614   000442  D795               	goto	l3212
  1615   000444  0A03               	xorlw	3	; case 6
  1616   000446  B4D8               	btfsc	status,2,c
  1617   000448  D798               	goto	l3216
  1618   00044A  0A01               	xorlw	1	; case 7
  1619   00044C  B4D8               	btfsc	status,2,c
  1620   00044E  D7A5               	goto	l3224
  1621   000450  0A0F               	xorlw	15	; case 8
  1622   000452  0012               	return	
  1623   000454                     __end_of_motorTeclat:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _writeCaracter *****************
  1627 ;; Defined at:
  1628 ;;		line 197 in file "TTECLAT.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1
  1642 ;;      Params:         0       0       0
  1643 ;;      Locals:         0       0       0
  1644 ;;      Temps:          2       0       0
  1645 ;;      Totals:         2       0       0
  1646 ;;Total ram usage:        2 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 6
  1649 ;; This function calls:
  1650 ;;		_LcGotoXY
  1651 ;;		_LcPutChar
  1652 ;;		_TI_GetTics
  1653 ;; This function is called by:
  1654 ;;		_motorTeclat
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text3
  1659   0007C8                     __ptext3:
  1660                           	callstack 0
  1661   0007C8                     _writeCaracter:
  1662                           	callstack 23
  1663                           
  1664                           ;TTECLAT.c: 198:     timer_tics_1s = TI_GetTics (Timer1S);
  1665                           
  1666                           ;incstack = 0
  1667   0007C8  505C               	movf	_Timer1S^0,w,c
  1668   0007CA  6E62               	movwf	TI_GetTics@TimerHandle^0,c
  1669   0007CC  6A63               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  1670   0007CE  6A64               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  1671   0007D0  6A65               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  1672   0007D2  ECDF  F006         	call	_TI_GetTics	;wreg free
  1673   0007D6  C062  F001         	movff	?_TI_GetTics,_timer_tics_1s
  1674   0007DA  C063  F002         	movff	?_TI_GetTics+1,_timer_tics_1s+1
  1675   0007DE  C064  F003         	movff	?_TI_GetTics+2,_timer_tics_1s+2
  1676   0007E2  C065  F004         	movff	?_TI_GetTics+3,_timer_tics_1s+3
  1677                           
  1678                           ;TTECLAT.c: 200:     if (timer_tics_1s < 4000){
  1679   0007E6  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1680   0007E8  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1681   0007EA  E10B               	bnz	l2922
  1682   0007EC  0EA0               	movlw	160
  1683   0007EE  5C01               	subwf	_timer_tics_1s^0,w,c
  1684   0007F0  0E0F               	movlw	15
  1685   0007F2  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1686   0007F4  B0D8               	btfsc	status,0,c
  1687   0007F6  D005               	goto	l2922
  1688                           
  1689                           ;TTECLAT.c: 201:         LcGotoXY(caracters_escrits, 1);
  1690   0007F8  0E01               	movlw	1
  1691   0007FA  6E6F               	movwf	LcGotoXY@Row^0,c
  1692   0007FC  5027               	movf	_caracters_escrits^0,w,c
  1693   0007FE  ECA0  F004         	call	_LcGotoXY
  1694   000802                     l2922:
  1695                           
  1696                           ;TTECLAT.c: 205:     if(timer_tics_1s > 4000){
  1697   000802  5004               	movf	(_timer_tics_1s+3)^0,w,c
  1698   000804  1003               	iorwf	(_timer_tics_1s+2)^0,w,c
  1699   000806  E106               	bnz	u1670
  1700   000808  0EA1               	movlw	161
  1701   00080A  5C01               	subwf	_timer_tics_1s^0,w,c
  1702   00080C  0E0F               	movlw	15
  1703   00080E  5802               	subwfb	(_timer_tics_1s+1)^0,w,c
  1704   000810  A0D8               	btfss	status,0,c
  1705   000812  D003               	goto	l2928
  1706   000814                     u1670:
  1707                           
  1708                           ;TTECLAT.c: 206:         caracters_escrits++;
  1709   000814  2A27               	incf	_caracters_escrits^0,f,c
  1710                           
  1711                           ;TTECLAT.c: 207:         caracters_escrits_menu = caracters_escrits;
  1712   000816  C027  F02F         	movff	_caracters_escrits,_caracters_escrits_menu
  1713   00081A                     l2928:
  1714                           
  1715                           ;TTECLAT.c: 210:     if(matriu_teclat[fila_matriu][caracter_actual] == '\0'){
  1716   00081A  5026               	movf	_fila_matriu^0,w,c
  1717   00081C  0D06               	mullw	6
  1718   00081E  0E78               	movlw	low _matriu_teclat
  1719   000820  24F3               	addwf	243,w,c
  1720   000822  6E78               	movwf	??_writeCaracter^0,c
  1721   000824  0E01               	movlw	high _matriu_teclat
  1722   000826  20F4               	addwfc	prodh,w,c
  1723   000828  6E79               	movwf	(??_writeCaracter+1)^0,c
  1724   00082A  5029               	movf	_caracter_actual^0,w,c
  1725   00082C  2478               	addwf	??_writeCaracter^0,w,c
  1726   00082E  6ED9               	movwf	fsr2l,c
  1727   000830  0E00               	movlw	0
  1728   000832  2079               	addwfc	(??_writeCaracter+1)^0,w,c
  1729   000834  6EDA               	movwf	fsr2h,c
  1730   000836  50DF               	movf	indf2,w,c
  1731   000838  A4D8               	btfss	status,2,c
  1732   00083A  D002               	goto	l2932
  1733                           
  1734                           ;TTECLAT.c: 211:         caracter_actual = 1;
  1735   00083C  0E01               	movlw	1
  1736   00083E  6E29               	movwf	_caracter_actual^0,c
  1737   000840                     l2932:
  1738                           
  1739                           ;TTECLAT.c: 213:     if(caracters_escrits == 4){
  1740   000840  0E04               	movlw	4
  1741   000842  1827               	xorwf	_caracters_escrits^0,w,c
  1742   000844  A4D8               	btfss	status,2,c
  1743   000846  D008               	goto	l2938
  1744                           
  1745                           ;TTECLAT.c: 214:         caracters_escrits_menu = 0;
  1746   000848  0E00               	movlw	0
  1747   00084A  6E2F               	movwf	_caracters_escrits_menu^0,c
  1748                           
  1749                           ;TTECLAT.c: 215:         caracters_escrits = -1;
  1750   00084C  6827               	setf	_caracters_escrits^0,c
  1751                           
  1752                           ;TTECLAT.c: 216:         flag_preemenu = 1;
  1753   00084E  0E01               	movlw	1
  1754   000850  6E31               	movwf	_flag_preemenu^0,c
  1755                           
  1756                           ;TTECLAT.c: 217:         espera = 1;
  1757   000852  0E01               	movlw	1
  1758   000854  6E28               	movwf	_espera^0,c
  1759                           
  1760                           ;TTECLAT.c: 218:     }else{
  1761   000856  D014               	goto	l2942
  1762   000858                     l2938:
  1763                           
  1764                           ;TTECLAT.c: 219:         if(caracters_escrits < 4){
  1765   000858  0E04               	movlw	4
  1766   00085A  6027               	cpfslt	_caracters_escrits^0,c
  1767   00085C  D011               	goto	l2942
  1768                           
  1769                           ;TTECLAT.c: 220:             LcPutChar(matriu_teclat[fila_matriu][caracter_actual]);
  1770   00085E  5026               	movf	_fila_matriu^0,w,c
  1771   000860  0D06               	mullw	6
  1772   000862  0E78               	movlw	low _matriu_teclat
  1773   000864  24F3               	addwf	243,w,c
  1774   000866  6E78               	movwf	??_writeCaracter^0,c
  1775   000868  0E01               	movlw	high _matriu_teclat
  1776   00086A  20F4               	addwfc	prodh,w,c
  1777   00086C  6E79               	movwf	(??_writeCaracter+1)^0,c
  1778   00086E  5029               	movf	_caracter_actual^0,w,c
  1779   000870  2478               	addwf	??_writeCaracter^0,w,c
  1780   000872  6ED9               	movwf	fsr2l,c
  1781   000874  0E00               	movlw	0
  1782   000876  2079               	addwfc	(??_writeCaracter+1)^0,w,c
  1783   000878  6EDA               	movwf	fsr2h,c
  1784   00087A  50DF               	movf	indf2,w,c
  1785   00087C  EC3B  F005         	call	_LcPutChar
  1786   000880                     l2942:
  1787                           
  1788                           ;TTECLAT.c: 223:     estat_teclat = 4;
  1789   000880  0E04               	movlw	4
  1790   000882  6E2E               	movwf	_estat_teclat^0,c
  1791   000884  0012               	return		;funcret
  1792   000886                     __end_of_writeCaracter:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _waitTeclaTreta *****************
  1796 ;; Defined at:
  1797 ;;		line 228 in file "TTECLAT.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1
  1811 ;;      Params:         0       0       0
  1812 ;;      Locals:         0       0       0
  1813 ;;      Temps:          0       0       0
  1814 ;;      Totals:         0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used: 1
  1817 ;; Hardware stack levels required when called: 2
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_motorTeclat
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text4
  1826   0010B8                     __ptext4:
  1827                           	callstack 0
  1828   0010B8                     _waitTeclaTreta:
  1829                           	callstack 27
  1830                           
  1831                           ;TTECLAT.c: 229:     if(PORTCbits.RC2 == 0 && PORTCbits.RC0 == 0 && PORTCbits.RC4 == 0){
  1832                           
  1833                           ;incstack = 0
  1834   0010B8  B482               	btfsc	130,2,c	;volatile
  1835   0010BA  0012               	return	
  1836   0010BC  B082               	btfsc	130,0,c	;volatile
  1837   0010BE  0012               	return	
  1838   0010C0  B882               	btfsc	130,4,c	;volatile
  1839   0010C2  0012               	return	
  1840                           
  1841                           ;TTECLAT.c: 230:         estat_teclat = 6;
  1842   0010C4  0E06               	movlw	6
  1843   0010C6  6E2E               	movwf	_estat_teclat^0,c
  1844   0010C8  0012               	return		;funcret
  1845   0010CA                     __end_of_waitTeclaTreta:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _setFiles *****************
  1849 ;; Defined at:
  1850 ;;		line 68 in file "TTECLAT.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  rows            1    wreg     unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  rows            1    0[COMRAM] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1
  1864 ;;      Params:         0       0       0
  1865 ;;      Locals:         1       0       0
  1866 ;;      Temps:          0       0       0
  1867 ;;      Totals:         1       0       0
  1868 ;;Total ram usage:        1 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 2
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_motorTeclat
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text5
  1879   000E4E                     __ptext5:
  1880                           	callstack 0
  1881   000E4E                     _setFiles:
  1882                           	callstack 27
  1883                           
  1884                           ;incstack = 0
  1885                           ;setFiles@rows stored from wreg
  1886   000E4E  6E62               	movwf	setFiles@rows^0,c
  1887                           
  1888                           ;TTECLAT.c: 70:     if (rows == 0x01){
  1889   000E50  0462               	decf	setFiles@rows^0,w,c
  1890   000E52  A4D8               	btfss	status,2,c
  1891   000E54  D004               	goto	l2802
  1892                           
  1893                           ;TTECLAT.c: 71:         LATCbits.LATC1 = 1;
  1894   000E56  828B               	bsf	139,1,c	;volatile
  1895                           
  1896                           ;TTECLAT.c: 72:         LATEbits.LATE1 = 0;
  1897   000E58  928D               	bcf	141,1,c	;volatile
  1898                           
  1899                           ;TTECLAT.c: 73:         LATCbits.LATC5 = 0;
  1900   000E5A  9A8B               	bcf	139,5,c	;volatile
  1901                           
  1902                           ;TTECLAT.c: 74:         LATCbits.LATC3 = 0;
  1903   000E5C  968B               	bcf	139,3,c	;volatile
  1904   000E5E                     l2802:
  1905                           
  1906                           ;TTECLAT.c: 76:     if (rows == 0x02){
  1907   000E5E  0E02               	movlw	2
  1908   000E60  1862               	xorwf	setFiles@rows^0,w,c
  1909   000E62  A4D8               	btfss	status,2,c
  1910   000E64  D004               	goto	l2806
  1911                           
  1912                           ;TTECLAT.c: 77:         LATCbits.LATC1 = 0;
  1913   000E66  928B               	bcf	139,1,c	;volatile
  1914                           
  1915                           ;TTECLAT.c: 78:         LATEbits.LATE1 = 1;
  1916   000E68  828D               	bsf	141,1,c	;volatile
  1917                           
  1918                           ;TTECLAT.c: 79:         LATCbits.LATC5 = 0;
  1919   000E6A  9A8B               	bcf	139,5,c	;volatile
  1920                           
  1921                           ;TTECLAT.c: 80:         LATCbits.LATC3 = 0;
  1922   000E6C  968B               	bcf	139,3,c	;volatile
  1923   000E6E                     l2806:
  1924                           
  1925                           ;TTECLAT.c: 82:     if (rows == 0x04){
  1926   000E6E  0E04               	movlw	4
  1927   000E70  1862               	xorwf	setFiles@rows^0,w,c
  1928   000E72  A4D8               	btfss	status,2,c
  1929   000E74  D004               	goto	l2810
  1930                           
  1931                           ;TTECLAT.c: 83:         LATCbits.LATC1 = 0;
  1932   000E76  928B               	bcf	139,1,c	;volatile
  1933                           
  1934                           ;TTECLAT.c: 84:         LATEbits.LATE1 = 0;
  1935   000E78  928D               	bcf	141,1,c	;volatile
  1936                           
  1937                           ;TTECLAT.c: 85:         LATCbits.LATC5 = 1;
  1938   000E7A  8A8B               	bsf	139,5,c	;volatile
  1939                           
  1940                           ;TTECLAT.c: 86:         LATCbits.LATC3 = 0;
  1941   000E7C  968B               	bcf	139,3,c	;volatile
  1942   000E7E                     l2810:
  1943                           
  1944                           ;TTECLAT.c: 88:     if (rows == 0x08){
  1945   000E7E  0E08               	movlw	8
  1946   000E80  1862               	xorwf	setFiles@rows^0,w,c
  1947   000E82  A4D8               	btfss	status,2,c
  1948   000E84  0012               	return	
  1949                           
  1950                           ;TTECLAT.c: 89:         LATCbits.LATC1 = 0;
  1951   000E86  928B               	bcf	139,1,c	;volatile
  1952                           
  1953                           ;TTECLAT.c: 90:         LATEbits.LATE1 = 0;
  1954   000E88  928D               	bcf	141,1,c	;volatile
  1955                           
  1956                           ;TTECLAT.c: 91:         LATCbits.LATC5 = 0;
  1957   000E8A  9A8B               	bcf	139,5,c	;volatile
  1958                           
  1959                           ;TTECLAT.c: 92:         LATCbits.LATC3 = 1;
  1960   000E8C  868B               	bsf	139,3,c	;volatile
  1961   000E8E  0012               	return		;funcret
  1962   000E90                     __end_of_setFiles:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _saveTecla *****************
  1966 ;; Defined at:
  1967 ;;		line 115 in file "TTECLAT.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1
  1981 ;;      Params:         0       0       0
  1982 ;;      Locals:         0       0       0
  1983 ;;      Temps:          0       0       0
  1984 ;;      Totals:         0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; Hardware stack levels required when called: 2
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		_motorTeclat
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text6
  1996   0005F4                     __ptext6:
  1997                           	callstack 0
  1998   0005F4                     _saveTecla:
  1999                           	callstack 27
  2000                           
  2001                           ;TTECLAT.c: 117:     if (rows == 0x01){
  2002                           
  2003                           ;incstack = 0
  2004   0005F4  042D               	decf	_rows^0,w,c
  2005   0005F6  A4D8               	btfss	status,2,c
  2006   0005F8  D021               	goto	l2856
  2007                           
  2008                           ;TTECLAT.c: 118:         if (columna_polsada == 0x01){
  2009   0005FA  042A               	decf	_columna_polsada^0,w,c
  2010   0005FC  A4D8               	btfss	status,2,c
  2011   0005FE  D002               	goto	l2836
  2012                           
  2013                           ;TTECLAT.c: 119:             fila_matriu = 0;
  2014   000600  0E00               	movlw	0
  2015   000602  6E26               	movwf	_fila_matriu^0,c
  2016   000604                     l2836:
  2017                           
  2018                           ;TTECLAT.c: 121:         if (columna_polsada == 0x02){
  2019   000604  0E02               	movlw	2
  2020   000606  182A               	xorwf	_columna_polsada^0,w,c
  2021   000608  A4D8               	btfss	status,2,c
  2022   00060A  D00A               	goto	l2846
  2023                           
  2024                           ;TTECLAT.c: 122:             if (caracter_actual == 3){
  2025   00060C  0E03               	movlw	3
  2026   00060E  1829               	xorwf	_caracter_actual^0,w,c
  2027   000610  A4D8               	btfss	status,2,c
  2028   000612  D003               	goto	l2842
  2029                           
  2030                           ;TTECLAT.c: 123:                 caracter_actual = 0;
  2031   000614  0E00               	movlw	0
  2032   000616  6E29               	movwf	_caracter_actual^0,c
  2033                           
  2034                           ;TTECLAT.c: 124:             }else{
  2035   000618  D001               	goto	l2844
  2036   00061A                     l2842:
  2037                           
  2038                           ;TTECLAT.c: 125:                 caracter_actual++;
  2039   00061A  2A29               	incf	_caracter_actual^0,f,c
  2040   00061C                     l2844:
  2041                           
  2042                           ;TTECLAT.c: 127:             fila_matriu = 1;
  2043   00061C  0E01               	movlw	1
  2044   00061E  6E26               	movwf	_fila_matriu^0,c
  2045   000620                     l2846:
  2046                           
  2047                           ;TTECLAT.c: 129:         if (columna_polsada == 0x04){
  2048   000620  0E04               	movlw	4
  2049   000622  182A               	xorwf	_columna_polsada^0,w,c
  2050   000624  A4D8               	btfss	status,2,c
  2051   000626  D00A               	goto	l2856
  2052                           
  2053                           ;TTECLAT.c: 130:             if (caracter_actual == 3){
  2054   000628  0E03               	movlw	3
  2055   00062A  1829               	xorwf	_caracter_actual^0,w,c
  2056   00062C  A4D8               	btfss	status,2,c
  2057   00062E  D003               	goto	l2852
  2058                           
  2059                           ;TTECLAT.c: 131:                 caracter_actual = 0;
  2060   000630  0E00               	movlw	0
  2061   000632  6E29               	movwf	_caracter_actual^0,c
  2062                           
  2063                           ;TTECLAT.c: 132:             }else{
  2064   000634  D001               	goto	l2854
  2065   000636                     l2852:
  2066                           
  2067                           ;TTECLAT.c: 133:                 caracter_actual++;
  2068   000636  2A29               	incf	_caracter_actual^0,f,c
  2069   000638                     l2854:
  2070                           
  2071                           ;TTECLAT.c: 135:             fila_matriu = 2;
  2072   000638  0E02               	movlw	2
  2073   00063A  6E26               	movwf	_fila_matriu^0,c
  2074   00063C                     l2856:
  2075                           
  2076                           ;TTECLAT.c: 139:     if (rows == 0x02){
  2077   00063C  0E02               	movlw	2
  2078   00063E  182D               	xorwf	_rows^0,w,c
  2079   000640  A4D8               	btfss	status,2,c
  2080   000642  D019               	goto	l2876
  2081                           
  2082                           ;TTECLAT.c: 140:         if (columna_polsada == 0x01){
  2083   000644  042A               	decf	_columna_polsada^0,w,c
  2084   000646  A4D8               	btfss	status,2,c
  2085   000648  D002               	goto	l2862
  2086                           
  2087                           ;TTECLAT.c: 141:             fila_matriu = 3;
  2088   00064A  0E03               	movlw	3
  2089   00064C  6E26               	movwf	_fila_matriu^0,c
  2090   00064E                     l2862:
  2091                           
  2092                           ;TTECLAT.c: 143:         if (columna_polsada == 0x02){
  2093   00064E  0E02               	movlw	2
  2094   000650  182A               	xorwf	_columna_polsada^0,w,c
  2095   000652  A4D8               	btfss	status,2,c
  2096   000654  D002               	goto	l2866
  2097                           
  2098                           ;TTECLAT.c: 144:             fila_matriu = 4;
  2099   000656  0E04               	movlw	4
  2100   000658  6E26               	movwf	_fila_matriu^0,c
  2101   00065A                     l2866:
  2102                           
  2103                           ;TTECLAT.c: 146:         if (columna_polsada == 0x04){
  2104   00065A  0E04               	movlw	4
  2105   00065C  182A               	xorwf	_columna_polsada^0,w,c
  2106   00065E  A4D8               	btfss	status,2,c
  2107   000660  D002               	goto	l2870
  2108                           
  2109                           ;TTECLAT.c: 147:             fila_matriu = 5;
  2110   000662  0E05               	movlw	5
  2111   000664  6E26               	movwf	_fila_matriu^0,c
  2112   000666                     l2870:
  2113                           
  2114                           ;TTECLAT.c: 149:         if (caracter_actual == 3){
  2115   000666  0E03               	movlw	3
  2116   000668  1829               	xorwf	_caracter_actual^0,w,c
  2117   00066A  A4D8               	btfss	status,2,c
  2118   00066C  D003               	goto	l2874
  2119                           
  2120                           ;TTECLAT.c: 150:                 caracter_actual = 0;
  2121   00066E  0E00               	movlw	0
  2122   000670  6E29               	movwf	_caracter_actual^0,c
  2123                           
  2124                           ;TTECLAT.c: 151:             }else{
  2125   000672  D001               	goto	l2876
  2126   000674                     l2874:
  2127                           
  2128                           ;TTECLAT.c: 152:                 caracter_actual++;
  2129   000674  2A29               	incf	_caracter_actual^0,f,c
  2130   000676                     l2876:
  2131                           
  2132                           ;TTECLAT.c: 156:     if (rows == 0x04){
  2133   000676  0E04               	movlw	4
  2134   000678  182D               	xorwf	_rows^0,w,c
  2135   00067A  A4D8               	btfss	status,2,c
  2136   00067C  D019               	goto	l2896
  2137                           
  2138                           ;TTECLAT.c: 157:         if (columna_polsada == 0x01){
  2139   00067E  042A               	decf	_columna_polsada^0,w,c
  2140   000680  A4D8               	btfss	status,2,c
  2141   000682  D002               	goto	l2882
  2142                           
  2143                           ;TTECLAT.c: 158:             fila_matriu = 6;
  2144   000684  0E06               	movlw	6
  2145   000686  6E26               	movwf	_fila_matriu^0,c
  2146   000688                     l2882:
  2147                           
  2148                           ;TTECLAT.c: 160:         if (columna_polsada == 0x02){
  2149   000688  0E02               	movlw	2
  2150   00068A  182A               	xorwf	_columna_polsada^0,w,c
  2151   00068C  A4D8               	btfss	status,2,c
  2152   00068E  D002               	goto	l2886
  2153                           
  2154                           ;TTECLAT.c: 161:             fila_matriu = 7;
  2155   000690  0E07               	movlw	7
  2156   000692  6E26               	movwf	_fila_matriu^0,c
  2157   000694                     l2886:
  2158                           
  2159                           ;TTECLAT.c: 163:         if (columna_polsada == 0x04){
  2160   000694  0E04               	movlw	4
  2161   000696  182A               	xorwf	_columna_polsada^0,w,c
  2162   000698  A4D8               	btfss	status,2,c
  2163   00069A  D002               	goto	l2890
  2164                           
  2165                           ;TTECLAT.c: 164:             fila_matriu = 8;
  2166   00069C  0E08               	movlw	8
  2167   00069E  6E26               	movwf	_fila_matriu^0,c
  2168   0006A0                     l2890:
  2169                           
  2170                           ;TTECLAT.c: 166:         if (caracter_actual == 3){
  2171   0006A0  0E03               	movlw	3
  2172   0006A2  1829               	xorwf	_caracter_actual^0,w,c
  2173   0006A4  A4D8               	btfss	status,2,c
  2174   0006A6  D003               	goto	l2894
  2175                           
  2176                           ;TTECLAT.c: 167:                 caracter_actual = 0;
  2177   0006A8  0E00               	movlw	0
  2178   0006AA  6E29               	movwf	_caracter_actual^0,c
  2179                           
  2180                           ;TTECLAT.c: 168:             }else{
  2181   0006AC  D001               	goto	l2896
  2182   0006AE                     l2894:
  2183                           
  2184                           ;TTECLAT.c: 169:                 caracter_actual++;
  2185   0006AE  2A29               	incf	_caracter_actual^0,f,c
  2186   0006B0                     l2896:
  2187                           
  2188                           ;TTECLAT.c: 172:     if (rows == 0x08){
  2189   0006B0  0E08               	movlw	8
  2190   0006B2  182D               	xorwf	_rows^0,w,c
  2191   0006B4  A4D8               	btfss	status,2,c
  2192   0006B6  0012               	return	
  2193                           
  2194                           ;TTECLAT.c: 173:         if (columna_polsada == 0x01){
  2195   0006B8  042A               	decf	_columna_polsada^0,w,c
  2196   0006BA  A4D8               	btfss	status,2,c
  2197   0006BC  D004               	goto	l2902
  2198                           
  2199                           ;TTECLAT.c: 174:             caracter_actual = 0;
  2200   0006BE  0E00               	movlw	0
  2201   0006C0  6E29               	movwf	_caracter_actual^0,c
  2202                           
  2203                           ;TTECLAT.c: 175:             fila_matriu = 9;
  2204   0006C2  0E09               	movlw	9
  2205   0006C4  6E26               	movwf	_fila_matriu^0,c
  2206   0006C6                     l2902:
  2207                           
  2208                           ;TTECLAT.c: 177:         if (columna_polsada == 0x02){
  2209   0006C6  0E02               	movlw	2
  2210   0006C8  182A               	xorwf	_columna_polsada^0,w,c
  2211   0006CA  A4D8               	btfss	status,2,c
  2212   0006CC  D009               	goto	l2912
  2213                           
  2214                           ;TTECLAT.c: 178:             if (caracter_actual == 1){
  2215   0006CE  0429               	decf	_caracter_actual^0,w,c
  2216   0006D0  A4D8               	btfss	status,2,c
  2217   0006D2  D003               	goto	l2908
  2218                           
  2219                           ;TTECLAT.c: 179:                 caracter_actual = 0;
  2220   0006D4  0E00               	movlw	0
  2221   0006D6  6E29               	movwf	_caracter_actual^0,c
  2222                           
  2223                           ;TTECLAT.c: 180:             }else{
  2224   0006D8  D001               	goto	l2910
  2225   0006DA                     l2908:
  2226                           
  2227                           ;TTECLAT.c: 181:                 caracter_actual++;
  2228   0006DA  2A29               	incf	_caracter_actual^0,f,c
  2229   0006DC                     l2910:
  2230                           
  2231                           ;TTECLAT.c: 183:             fila_matriu = 10;
  2232   0006DC  0E0A               	movlw	10
  2233   0006DE  6E26               	movwf	_fila_matriu^0,c
  2234   0006E0                     l2912:
  2235                           
  2236                           ;TTECLAT.c: 185:         if (columna_polsada == 0x04){
  2237   0006E0  0E04               	movlw	4
  2238   0006E2  182A               	xorwf	_columna_polsada^0,w,c
  2239   0006E4  A4D8               	btfss	status,2,c
  2240   0006E6  0012               	return	
  2241                           
  2242                           ;TTECLAT.c: 186:             fila_matriu = 11;
  2243   0006E8  0E0B               	movlw	11
  2244   0006EA  6E26               	movwf	_fila_matriu^0,c
  2245   0006EC  0012               	return		;funcret
  2246   0006EE                     __end_of_saveTecla:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _comprovaHiHaColumna *****************
  2250 ;; Defined at:
  2251 ;;		line 97 in file "TTECLAT.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      unsigned char 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1
  2265 ;;      Params:         0       0       0
  2266 ;;      Locals:         0       0       0
  2267 ;;      Temps:          0       0       0
  2268 ;;      Totals:         0       0       0
  2269 ;;Total ram usage:        0 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; Hardware stack levels required when called: 2
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_motorTeclat
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text7
  2280   000FAA                     __ptext7:
  2281                           	callstack 0
  2282   000FAA                     _comprovaHiHaColumna:
  2283                           	callstack 27
  2284                           
  2285                           ;TTECLAT.c: 98:     hi_ha_tecla = 0;
  2286                           
  2287                           ;incstack = 0
  2288   000FAA  0E00               	movlw	0
  2289   000FAC  6E2B               	movwf	_hi_ha_tecla^0,c
  2290                           
  2291                           ;TTECLAT.c: 100:     if (PORTCbits.RC2 == 1){
  2292   000FAE  A482               	btfss	130,2,c	;volatile
  2293   000FB0  D004               	goto	l2820
  2294                           
  2295                           ;TTECLAT.c: 101:         columna_polsada = 0x01;
  2296   000FB2  0E01               	movlw	1
  2297   000FB4  6E2A               	movwf	_columna_polsada^0,c
  2298                           
  2299                           ;TTECLAT.c: 102:         hi_ha_tecla = 1;
  2300   000FB6  0E01               	movlw	1
  2301   000FB8  6E2B               	movwf	_hi_ha_tecla^0,c
  2302   000FBA                     l2820:
  2303                           
  2304                           ;TTECLAT.c: 104:     if (PORTCbits.RC0 == 1){
  2305   000FBA  A082               	btfss	130,0,c	;volatile
  2306   000FBC  D004               	goto	l2824
  2307                           
  2308                           ;TTECLAT.c: 105:         columna_polsada = 0x02;
  2309   000FBE  0E02               	movlw	2
  2310   000FC0  6E2A               	movwf	_columna_polsada^0,c
  2311                           
  2312                           ;TTECLAT.c: 106:         hi_ha_tecla = 1;
  2313   000FC2  0E01               	movlw	1
  2314   000FC4  6E2B               	movwf	_hi_ha_tecla^0,c
  2315   000FC6                     l2824:
  2316                           
  2317                           ;TTECLAT.c: 108:     if (PORTCbits.RC4 == 1){
  2318   000FC6  A882               	btfss	130,4,c	;volatile
  2319   000FC8  D004               	goto	l490
  2320                           
  2321                           ;TTECLAT.c: 109:         columna_polsada = 0x04;
  2322   000FCA  0E04               	movlw	4
  2323   000FCC  6E2A               	movwf	_columna_polsada^0,c
  2324                           
  2325                           ;TTECLAT.c: 110:         hi_ha_tecla = 1;
  2326   000FCE  0E01               	movlw	1
  2327   000FD0  6E2B               	movwf	_hi_ha_tecla^0,c
  2328   000FD2                     l490:
  2329                           
  2330                           ;TTECLAT.c: 112:     return(columna_polsada);
  2331   000FD2  502A               	movf	_columna_polsada^0,w,c
  2332   000FD4  0012               	return		;funcret
  2333   000FD6                     __end_of_comprovaHiHaColumna:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _Getflag_TTeclat *****************
  2337 ;; Defined at:
  2338 ;;		line 144 in file "TMENU.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;		None
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      unsigned char 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1
  2352 ;;      Params:         0       0       0
  2353 ;;      Locals:         0       0       0
  2354 ;;      Temps:          0       0       0
  2355 ;;      Totals:         0       0       0
  2356 ;;Total ram usage:        0 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 2
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_motorTeclat
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text8
  2367   0010FC                     __ptext8:
  2368                           	callstack 0
  2369   0010FC                     _Getflag_TTeclat:
  2370                           	callstack 27
  2371                           
  2372                           ;TMENU.c: 145:     return(flag_TTeclat_menu);
  2373                           
  2374                           ;incstack = 0
  2375   0010FC  507E               	movf	_flag_TTeclat_menu^0,w,c
  2376   0010FE  0012               	return		;funcret
  2377   001100                     __end_of_Getflag_TTeclat:
  2378                           	callstack 0
  2379                           
  2380 ;; *************** function _motorMenu *****************
  2381 ;; Defined at:
  2382 ;;		line 157 in file "TMENU.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMRAM   BANK0   BANK1
  2396 ;;      Params:         0       0       0
  2397 ;;      Locals:         0       0       0
  2398 ;;      Temps:          2       0       0
  2399 ;;      Totals:         2       0       0
  2400 ;;Total ram usage:        2 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 7
  2403 ;; This function calls:
  2404 ;;		_LcClear
  2405 ;;		_LcGotoXY
  2406 ;;		_MyPutString
  2407 ;;		_getCaractersEscrits
  2408 ;;		_getEspera
  2409 ;;		_getTowerName
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text9
  2416   000454                     __ptext9:
  2417                           	callstack 0
  2418   000454                     _motorMenu:
  2419                           	callstack 23
  2420                           
  2421                           ;TMENU.c: 158:     switch (estat_menu){
  2422                           
  2423                           ;incstack = 0
  2424   000454  D0A7               	goto	l3134
  2425   000456                     l3064:
  2426                           
  2427                           ;TMENU.c: 160:             if (flag_putstring == 0){
  2428   000456  5043               	movf	_flag_putstring^0,w,c
  2429   000458  A4D8               	btfss	status,2,c
  2430   00045A  D006               	goto	l3068
  2431                           
  2432                           ;TMENU.c: 161:                 flag_putstring = MyPutString("DEST.PORT:");
  2433   00045C  0E4A               	movlw	low STR_1
  2434   00045E  6E78               	movwf	MyPutString@frase^0,c
  2435   000460  ECF5  F004         	call	_MyPutString	;wreg free
  2436   000464  6E43               	movwf	_flag_putstring^0,c
  2437                           
  2438                           ;TMENU.c: 162:             }else{
  2439   000466  0012               	return	
  2440   000468                     l3068:
  2441                           
  2442                           ;TMENU.c: 163:                 estat_menu = 1;
  2443   000468  0E01               	movlw	1
  2444   00046A  6E47               	movwf	_estat_menu^0,c
  2445                           
  2446                           ;TMENU.c: 164:                 LcGotoXY(0, 1);
  2447   00046C  0E01               	movlw	1
  2448   00046E  6E6F               	movwf	LcGotoXY@Row^0,c
  2449   000470  0E00               	movlw	0
  2450   000472  ECA0  F004         	call	_LcGotoXY
  2451   000476                     l3072:
  2452                           
  2453                           ;TMENU.c: 165:                 flag_putstring = 0;
  2454   000476  0E00               	movlw	0
  2455   000478  6E43               	movwf	_flag_putstring^0,c
  2456   00047A  0012               	return	
  2457   00047C                     l3074:
  2458                           
  2459                           ;TMENU.c: 169:             if(getCaractersEscrits() == 3){
  2460   00047C  EC82  F008         	call	_getCaractersEscrits	;wreg free
  2461   000480  0A03               	xorlw	3
  2462   000482  A4D8               	btfss	status,2,c
  2463   000484  0012               	return	
  2464                           
  2465                           ;TMENU.c: 170:                 estat_menu = 2;
  2466   000486  0E02               	movlw	2
  2467   000488  6E47               	movwf	_estat_menu^0,c
  2468   00048A  0012               	return	
  2469   00048C                     l3078:
  2470                           
  2471                           ;TMENU.c: 175:             dest_port[0] = getTowerName(0);
  2472   00048C  0E00               	movlw	0
  2473   00048E  EC6D  F008         	call	_getTowerName
  2474   000492  0100               	movlb	0	; () banked
  2475   000494  6FD2               	movwf	_dest_port& (0+255),b
  2476                           
  2477                           ;TMENU.c: 176:             dest_port[1] = getTowerName(1);
  2478   000496  0E01               	movlw	1
  2479   000498  EC6D  F008         	call	_getTowerName
  2480   00049C  0100               	movlb	0	; () banked
  2481   00049E  6FD3               	movwf	(_dest_port+1)& (0+255),b
  2482                           
  2483                           ;TMENU.c: 177:             dest_port[2] = getTowerName(2);
  2484   0004A0  0E02               	movlw	2
  2485   0004A2  EC6D  F008         	call	_getTowerName
  2486   0004A6  0100               	movlb	0	; () banked
  2487   0004A8  6FD4               	movwf	(_dest_port+2)& (0+255),b
  2488                           
  2489                           ;TMENU.c: 178:             dest_port[3] = getTowerName(3);
  2490   0004AA  0E03               	movlw	3
  2491   0004AC  EC6D  F008         	call	_getTowerName
  2492   0004B0  0100               	movlb	0	; () banked
  2493   0004B2  6FD5               	movwf	(_dest_port+3)& (0+255),b
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;TMENU.c: 180:             estat_menu = 3;
  2497   0004B4  0E03               	movlw	3
  2498   0004B6  6E47               	movwf	_estat_menu^0,c
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;TMENU.c: 182:             LcClear();
  2502   0004B8  EC36  F008         	call	_LcClear	;wreg free
  2503                           
  2504                           ;TMENU.c: 183:             LcGotoXY(0, 0);
  2505   0004BC  0E00               	movlw	0
  2506   0004BE  6E6F               	movwf	LcGotoXY@Row^0,c
  2507   0004C0  0E00               	movlw	0
  2508   0004C2  ECA0  F004         	call	_LcGotoXY
  2509                           
  2510                           ;TMENU.c: 184:             break;
  2511   0004C6  0012               	return	
  2512   0004C8                     l3086:
  2513                           
  2514                           ;TMENU.c: 187:             if (flag_putstring == 0){
  2515   0004C8  5043               	movf	_flag_putstring^0,w,c
  2516   0004CA  A4D8               	btfss	status,2,c
  2517   0004CC  D006               	goto	l3090
  2518                           
  2519                           ;TMENU.c: 188:                 flag_putstring = MyPutString("REC.PORT:");
  2520   0004CE  0E55               	movlw	low STR_2
  2521   0004D0  6E78               	movwf	MyPutString@frase^0,c
  2522   0004D2  ECF5  F004         	call	_MyPutString	;wreg free
  2523   0004D6  6E43               	movwf	_flag_putstring^0,c
  2524                           
  2525                           ;TMENU.c: 189:             }else{
  2526   0004D8  0012               	return	
  2527   0004DA                     l3090:
  2528                           
  2529                           ;TMENU.c: 190:                 estat_menu = 4;
  2530   0004DA  0E04               	movlw	4
  2531   0004DC  6E47               	movwf	_estat_menu^0,c
  2532                           
  2533                           ;TMENU.c: 191:                 LcGotoXY(0, 1);
  2534   0004DE  0E01               	movlw	1
  2535   0004E0  6E6F               	movwf	LcGotoXY@Row^0,c
  2536   0004E2  0E00               	movlw	0
  2537   0004E4  ECA0  F004         	call	_LcGotoXY
  2538   0004E8  D7C6               	goto	l3072
  2539   0004EA                     l3096:
  2540                           
  2541                           ;TMENU.c: 197:             if((getCaractersEscrits() == 3) && (getEspera() == 1)){
  2542   0004EA  EC82  F008         	call	_getCaractersEscrits	;wreg free
  2543   0004EE  0A03               	xorlw	3
  2544   0004F0  A4D8               	btfss	status,2,c
  2545   0004F2  0012               	return	
  2546   0004F4  EC80  F008         	call	_getEspera	;wreg free
  2547   0004F8  06E8               	decf	wreg,f,c
  2548   0004FA  A4D8               	btfss	status,2,c
  2549   0004FC  0012               	return	
  2550                           
  2551                           ;TMENU.c: 198:                 estat_menu = 5;
  2552   0004FE  0E05               	movlw	5
  2553   000500  6E47               	movwf	_estat_menu^0,c
  2554   000502  0012               	return	
  2555   000504                     l3102:
  2556                           
  2557                           ;TMENU.c: 204:             rec_port[0] = getTowerName(0);
  2558   000504  0E00               	movlw	0
  2559   000506  EC6D  F008         	call	_getTowerName
  2560   00050A  0100               	movlb	0	; () banked
  2561   00050C  6FCE               	movwf	_rec_port& (0+255),b
  2562                           
  2563                           ;TMENU.c: 205:             rec_port[1] = getTowerName(1);
  2564   00050E  0E01               	movlw	1
  2565   000510  EC6D  F008         	call	_getTowerName
  2566   000514  0100               	movlb	0	; () banked
  2567   000516  6FCF               	movwf	(_rec_port+1)& (0+255),b
  2568                           
  2569                           ;TMENU.c: 206:             rec_port[2] = getTowerName(2);
  2570   000518  0E02               	movlw	2
  2571   00051A  EC6D  F008         	call	_getTowerName
  2572   00051E  0100               	movlb	0	; () banked
  2573   000520  6FD0               	movwf	(_rec_port+2)& (0+255),b
  2574                           
  2575                           ;TMENU.c: 207:             rec_port[3] = getTowerName(3);
  2576   000522  0E03               	movlw	3
  2577   000524  EC6D  F008         	call	_getTowerName
  2578   000528  0100               	movlb	0	; () banked
  2579   00052A  6FD1               	movwf	(_rec_port+3)& (0+255),b
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;TMENU.c: 209:             estat_menu = 6;
  2583   00052C  0E06               	movlw	6
  2584   00052E  6E47               	movwf	_estat_menu^0,c
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;TMENU.c: 211:             LcClear();
  2588   000530  EC36  F008         	call	_LcClear	;wreg free
  2589                           
  2590                           ;TMENU.c: 212:             LcGotoXY(0, 0);
  2591   000534  0E00               	movlw	0
  2592   000536  6E6F               	movwf	LcGotoXY@Row^0,c
  2593   000538  0E00               	movlw	0
  2594   00053A  ECA0  F004         	call	_LcGotoXY
  2595                           
  2596                           ;TMENU.c: 214:             break;
  2597   00053E  0012               	return	
  2598   000540                     l3110:
  2599                           
  2600                           ;TMENU.c: 217:             if (flag_putstring == 0){
  2601   000540  5043               	movf	_flag_putstring^0,w,c
  2602   000542  A4D8               	btfss	status,2,c
  2603   000544  D006               	goto	l3114
  2604                           
  2605                           ;TMENU.c: 218:                 flag_putstring = MyPutString("USER NAME:");
  2606   000546  0E3F               	movlw	low STR_3
  2607   000548  6E78               	movwf	MyPutString@frase^0,c
  2608   00054A  ECF5  F004         	call	_MyPutString	;wreg free
  2609   00054E  6E43               	movwf	_flag_putstring^0,c
  2610                           
  2611                           ;TMENU.c: 219:             }else{
  2612   000550  0012               	return	
  2613   000552                     l3114:
  2614                           
  2615                           ;TMENU.c: 220:                 estat_menu = 7;
  2616   000552  0E07               	movlw	7
  2617   000554  6E47               	movwf	_estat_menu^0,c
  2618                           
  2619                           ;TMENU.c: 221:                 LcGotoXY(0, 1);
  2620   000556  0E01               	movlw	1
  2621   000558  6E6F               	movwf	LcGotoXY@Row^0,c
  2622   00055A  0E00               	movlw	0
  2623   00055C  ECA0  F004         	call	_LcGotoXY
  2624   000560  D78A               	goto	l3072
  2625   000562                     l3120:
  2626                           
  2627                           ;TMENU.c: 226:             if(getCaractersEscrits() == 2){
  2628   000562  EC82  F008         	call	_getCaractersEscrits	;wreg free
  2629   000566  0A02               	xorlw	2
  2630   000568  A4D8               	btfss	status,2,c
  2631   00056A  0012               	return	
  2632                           
  2633                           ;TMENU.c: 227:                 estat_menu = 8;
  2634   00056C  0E08               	movlw	8
  2635   00056E  6E47               	movwf	_estat_menu^0,c
  2636   000570  0012               	return	
  2637   000572                     l3124:
  2638                           
  2639                           ;TMENU.c: 232:             user_name[0] = getTowerName(0);
  2640   000572  0E00               	movlw	0
  2641   000574  EC6D  F008         	call	_getTowerName
  2642   000578  0100               	movlb	0	; () banked
  2643   00057A  6FDA               	movwf	_user_name& (0+255),b
  2644                           
  2645                           ;TMENU.c: 233:             user_name[1] = getTowerName(1);
  2646   00057C  0E01               	movlw	1
  2647   00057E  EC6D  F008         	call	_getTowerName
  2648   000582  0100               	movlb	0	; () banked
  2649   000584  6FDB               	movwf	(_user_name+1)& (0+255),b
  2650                           
  2651                           ;TMENU.c: 234:             user_name[2] = getTowerName(2);
  2652   000586  0E02               	movlw	2
  2653   000588  EC6D  F008         	call	_getTowerName
  2654   00058C  0100               	movlb	0	; () banked
  2655   00058E  6FDC               	movwf	(_user_name+2)& (0+255),b
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;TMENU.c: 236:             estat_menu = 9;
  2659   000590  0E09               	movlw	9
  2660   000592  6E47               	movwf	_estat_menu^0,c
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;TMENU.c: 238:             LcClear();
  2664   000594  EC36  F008         	call	_LcClear	;wreg free
  2665                           
  2666                           ;TMENU.c: 239:             LcGotoXY(0, 0);
  2667   000598  0E00               	movlw	0
  2668   00059A  6E6F               	movwf	LcGotoXY@Row^0,c
  2669   00059C  0E00               	movlw	0
  2670   00059E  ECA0  F004         	call	_LcGotoXY
  2671                           
  2672                           ;TMENU.c: 240:             break;
  2673   0005A2  0012               	return	
  2674   0005A4                     l3134:
  2675   0005A4  5047               	movf	_estat_menu^0,w,c
  2676   0005A6  6E7B               	movwf	??_motorMenu^0,c
  2677   0005A8  6A7C               	clrf	(??_motorMenu+1)^0,c
  2678                           
  2679                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2680                           ; Switch size 1, requested type "simple"
  2681                           ; Number of cases is 1, Range of values is 0 to 0
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte            4     3 (average)
  2685                           ;	Chosen strategy is simple_byte
  2686   0005AA  507C               	movf	(??_motorMenu+1)^0,w,c
  2687   0005AC  0A00               	xorlw	0	; case 0
  2688   0005AE  A4D8               	btfss	status,2,c
  2689   0005B0  0012               	return	
  2690                           
  2691                           ; Switch size 1, requested type "simple"
  2692                           ; Number of cases is 11, Range of values is 0 to 10
  2693                           ; switch strategies available:
  2694                           ; Name         Instructions Cycles
  2695                           ; simple_byte           34    18 (average)
  2696                           ;	Chosen strategy is simple_byte
  2697   0005B2  507B               	movf	??_motorMenu^0,w,c
  2698   0005B4  0A00               	xorlw	0	; case 0
  2699   0005B6  B4D8               	btfsc	status,2,c
  2700   0005B8  D74E               	goto	l3064
  2701   0005BA  0A01               	xorlw	1	; case 1
  2702   0005BC  B4D8               	btfsc	status,2,c
  2703   0005BE  D75E               	goto	l3074
  2704   0005C0  0A03               	xorlw	3	; case 2
  2705   0005C2  B4D8               	btfsc	status,2,c
  2706   0005C4  D763               	goto	l3078
  2707   0005C6  0A01               	xorlw	1	; case 3
  2708   0005C8  B4D8               	btfsc	status,2,c
  2709   0005CA  D77E               	goto	l3086
  2710   0005CC  0A07               	xorlw	7	; case 4
  2711   0005CE  B4D8               	btfsc	status,2,c
  2712   0005D0  D78C               	goto	l3096
  2713   0005D2  0A01               	xorlw	1	; case 5
  2714   0005D4  B4D8               	btfsc	status,2,c
  2715   0005D6  D796               	goto	l3102
  2716   0005D8  0A03               	xorlw	3	; case 6
  2717   0005DA  B4D8               	btfsc	status,2,c
  2718   0005DC  D7B1               	goto	l3110
  2719   0005DE  0A01               	xorlw	1	; case 7
  2720   0005E0  B4D8               	btfsc	status,2,c
  2721   0005E2  D7BF               	goto	l3120
  2722   0005E4  0A0F               	xorlw	15	; case 8
  2723   0005E6  B4D8               	btfsc	status,2,c
  2724   0005E8  D7C4               	goto	l3124
  2725   0005EA  0A01               	xorlw	1	; case 9
  2726   0005EC  B4D8               	btfsc	status,2,c
  2727   0005EE  0012               	return	
  2728   0005F0  0A03               	xorlw	3	; case 10
  2729   0005F2  0012               	return	
  2730   0005F4                     __end_of_motorMenu:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _getTowerName *****************
  2734 ;; Defined at:
  2735 ;;		line 58 in file "TTECLAT.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  p               1    wreg     unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  p               1    0[COMRAM] unsigned char 
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      unsigned char 
  2742 ;; Registers used:
  2743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1
  2749 ;;      Params:         0       0       0
  2750 ;;      Locals:         1       0       0
  2751 ;;      Temps:          0       0       0
  2752 ;;      Totals:         1       0       0
  2753 ;;Total ram usage:        1 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; Hardware stack levels required when called: 2
  2756 ;; This function calls:
  2757 ;;		Nothing
  2758 ;; This function is called by:
  2759 ;;		_motorMenu
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text10
  2764   0010DA                     __ptext10:
  2765                           	callstack 0
  2766   0010DA                     _getTowerName:
  2767                           	callstack 27
  2768                           
  2769                           ;incstack = 0
  2770                           ;getTowerName@p stored from wreg
  2771   0010DA  6E62               	movwf	getTowerName@p^0,c
  2772                           
  2773                           ;TTECLAT.c: 59:     return(tower_name[p]);
  2774   0010DC  5062               	movf	getTowerName@p^0,w,c
  2775   0010DE  0FC6               	addlw	low _tower_name
  2776   0010E0  6ED9               	movwf	fsr2l,c
  2777   0010E2  6ADA               	clrf	fsr2h,c
  2778   0010E4  50DF               	movf	indf2,w,c
  2779   0010E6  0012               	return		;funcret
  2780   0010E8                     __end_of_getTowerName:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _getEspera *****************
  2784 ;; Defined at:
  2785 ;;		line 65 in file "TTECLAT.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      unsigned char 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1
  2799 ;;      Params:         0       0       0
  2800 ;;      Locals:         0       0       0
  2801 ;;      Temps:          0       0       0
  2802 ;;      Totals:         0       0       0
  2803 ;;Total ram usage:        0 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; Hardware stack levels required when called: 2
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_motorMenu
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text11
  2814   001100                     __ptext11:
  2815                           	callstack 0
  2816   001100                     _getEspera:
  2817                           	callstack 27
  2818                           
  2819                           ;TTECLAT.c: 66:     return(espera);
  2820                           
  2821                           ;incstack = 0
  2822   001100  5028               	movf	_espera^0,w,c
  2823   001102  0012               	return		;funcret
  2824   001104                     __end_of_getEspera:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function _getCaractersEscrits *****************
  2828 ;; Defined at:
  2829 ;;		line 61 in file "TTECLAT.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      unsigned char 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1
  2843 ;;      Params:         0       0       0
  2844 ;;      Locals:         0       0       0
  2845 ;;      Temps:          0       0       0
  2846 ;;      Totals:         0       0       0
  2847 ;;Total ram usage:        0 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 2
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_motorMenu
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text12
  2858   001104                     __ptext12:
  2859                           	callstack 0
  2860   001104                     _getCaractersEscrits:
  2861                           	callstack 27
  2862                           
  2863                           ;TTECLAT.c: 62:     return(caracters_escrits_menu);
  2864                           
  2865                           ;incstack = 0
  2866   001104  502F               	movf	_caracters_escrits_menu^0,w,c
  2867   001106  0012               	return		;funcret
  2868   001108                     __end_of_getCaractersEscrits:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _MyPutString *****************
  2872 ;; Defined at:
  2873 ;;		line 206 in file "LCD.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  frase           1   22[COMRAM] PTR unsigned char 
  2876 ;;		 -> STR_4(14), STR_3(11), STR_2(10), STR_1(11), 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      unsigned char 
  2881 ;; Registers used:
  2882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1
  2888 ;;      Params:         1       0       0
  2889 ;;      Locals:         0       0       0
  2890 ;;      Temps:          2       0       0
  2891 ;;      Totals:         3       0       0
  2892 ;;Total ram usage:        3 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 6
  2895 ;; This function calls:
  2896 ;;		_LcPutChar
  2897 ;; This function is called by:
  2898 ;;		_motorMenu
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text13
  2903   0009EA                     __ptext13:
  2904                           	callstack 0
  2905   0009EA                     _MyPutString:
  2906                           	callstack 23
  2907                           
  2908                           ;LCD.c: 207:     switch(estat_string){
  2909                           
  2910                           ;incstack = 0
  2911   0009EA  D033               	goto	l2776
  2912   0009EC                     l2742:
  2913                           
  2914                           ;LCD.c: 209:             j = 0;
  2915   0009EC  0E00               	movlw	0
  2916   0009EE  6E0A               	movwf	(_j+1)^0,c
  2917   0009F0  0E00               	movlw	0
  2918   0009F2  6E09               	movwf	_j^0,c
  2919                           
  2920                           ;LCD.c: 210:             estat_string = 1;
  2921   0009F4  0E01               	movlw	1
  2922   0009F6  6E54               	movwf	_estat_string^0,c
  2923   0009F8                     l2744:
  2924                           
  2925                           ;LCD.c: 211:             return(0);
  2926   0009F8  0E00               	movlw	0
  2927   0009FA  0012               	return	
  2928   0009FC                     l2750:
  2929                           
  2930                           ;LCD.c: 214:             if(frase[j] != '\0'){
  2931   0009FC  5078               	movf	MyPutString@frase^0,w,c
  2932   0009FE  2409               	addwf	_j^0,w,c
  2933   000A00  6E79               	movwf	??_MyPutString^0,c
  2934   000A02  C079  FFF6         	movff	??_MyPutString,tblptrl
  2935   000A06                     	if	1	;There is more than 1 active tblptr byte
  2936   000A06  0E02               	movlw	high __smallconst
  2937   000A08  6EF7               	movwf	tblptrh,c
  2938   000A0A                     	endif
  2939   000A0A                     	if	0	;tblptru may be non-zero
  2940   000A0A                     	endif
  2941   000A0A                     	if	0	;tblptru may be non-zero
  2942   000A0A                     	endif
  2943   000A0A  0008               	tblrd		*
  2944   000A0C  50F5               	movf	tablat,w,c
  2945   000A0E  0900               	iorlw	0
  2946   000A10  B4D8               	btfsc	status,2,c
  2947   000A12  D00D               	goto	l2756
  2948                           
  2949                           ;LCD.c: 215:                 LcPutChar(frase[j]);
  2950   000A14  5078               	movf	MyPutString@frase^0,w,c
  2951   000A16  2409               	addwf	_j^0,w,c
  2952   000A18  6E79               	movwf	??_MyPutString^0,c
  2953   000A1A  C079  FFF6         	movff	??_MyPutString,tblptrl
  2954   000A1E                     	if	1	;There is more than 1 active tblptr byte
  2955   000A1E  0E02               	movlw	high __smallconst
  2956   000A20  6EF7               	movwf	tblptrh,c
  2957   000A22                     	endif
  2958   000A22                     	if	0	;tblptru may be non-zero
  2959   000A22                     	endif
  2960   000A22                     	if	0	;tblptru may be non-zero
  2961   000A22                     	endif
  2962   000A22  0008               	tblrd		*
  2963   000A24  50F5               	movf	tablat,w,c
  2964   000A26  EC3B  F005         	call	_LcPutChar
  2965                           
  2966                           ;LCD.c: 216:                 j++;
  2967   000A2A  4A09               	infsnz	_j^0,f,c
  2968   000A2C  2A0A               	incf	(_j+1)^0,f,c
  2969   000A2E                     l2756:
  2970                           
  2971                           ;LCD.c: 218:             if(frase[j] == '\0'){
  2972   000A2E  5078               	movf	MyPutString@frase^0,w,c
  2973   000A30  2409               	addwf	_j^0,w,c
  2974   000A32  6E79               	movwf	??_MyPutString^0,c
  2975   000A34  C079  FFF6         	movff	??_MyPutString,tblptrl
  2976   000A38                     	if	1	;There is more than 1 active tblptr byte
  2977   000A38  0E02               	movlw	high __smallconst
  2978   000A3A  6EF7               	movwf	tblptrh,c
  2979   000A3C                     	endif
  2980   000A3C                     	if	0	;tblptru may be non-zero
  2981   000A3C                     	endif
  2982   000A3C                     	if	0	;tblptru may be non-zero
  2983   000A3C                     	endif
  2984   000A3C  0008               	tblrd		*
  2985   000A3E  50F5               	movf	tablat,w,c
  2986   000A40  0900               	iorlw	0
  2987   000A42  A4D8               	btfss	status,2,c
  2988   000A44  D7D9               	goto	l2744
  2989                           
  2990                           ;LCD.c: 219:                 estat_string = 2;
  2991   000A46  0E02               	movlw	2
  2992   000A48  D7D6               	goto	L1
  2993   000A4A                     l2766:
  2994                           
  2995                           ;LCD.c: 224:             estat_string = 0;
  2996   000A4A  0E00               	movlw	0
  2997   000A4C  6E54               	movwf	_estat_string^0,c
  2998                           
  2999                           ;LCD.c: 225:             return(1);
  3000   000A4E  0E01               	movlw	1
  3001   000A50  0012               	return	
  3002   000A52                     l2776:
  3003   000A52  5054               	movf	_estat_string^0,w,c
  3004   000A54  6E79               	movwf	??_MyPutString^0,c
  3005   000A56  6A7A               	clrf	(??_MyPutString+1)^0,c
  3006                           
  3007                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3008                           ; Switch size 1, requested type "simple"
  3009                           ; Number of cases is 1, Range of values is 0 to 0
  3010                           ; switch strategies available:
  3011                           ; Name         Instructions Cycles
  3012                           ; simple_byte            4     3 (average)
  3013                           ;	Chosen strategy is simple_byte
  3014   000A58  507A               	movf	(??_MyPutString+1)^0,w,c
  3015   000A5A  0A00               	xorlw	0	; case 0
  3016   000A5C  A4D8               	btfss	status,2,c
  3017   000A5E  0012               	return	
  3018                           
  3019                           ; Switch size 1, requested type "simple"
  3020                           ; Number of cases is 3, Range of values is 0 to 2
  3021                           ; switch strategies available:
  3022                           ; Name         Instructions Cycles
  3023                           ; simple_byte           10     6 (average)
  3024                           ;	Chosen strategy is simple_byte
  3025   000A60  5079               	movf	??_MyPutString^0,w,c
  3026   000A62  0A00               	xorlw	0	; case 0
  3027   000A64  B4D8               	btfsc	status,2,c
  3028   000A66  D7C2               	goto	l2742
  3029   000A68  0A01               	xorlw	1	; case 1
  3030   000A6A  B4D8               	btfsc	status,2,c
  3031   000A6C  D7C7               	goto	l2750
  3032   000A6E  0A03               	xorlw	3	; case 2
  3033   000A70  A4D8               	btfss	status,2,c
  3034   000A72  0012               	return	
  3035   000A74  D7EA               	goto	l2766
  3036   000A76                     __end_of_MyPutString:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _LcPutChar *****************
  3040 ;; Defined at:
  3041 ;;		line 162 in file "LCD.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  c               1    wreg     unsigned char 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  c               1   21[COMRAM] unsigned char 
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1
  3055 ;;      Params:         0       0       0
  3056 ;;      Locals:         1       0       0
  3057 ;;      Temps:          0       0       0
  3058 ;;      Totals:         1       0       0
  3059 ;;Total ram usage:        1 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 5
  3062 ;; This function calls:
  3063 ;;		_CantaData
  3064 ;;		_LcGotoXY
  3065 ;;		_WaitForBusy
  3066 ;; This function is called by:
  3067 ;;		_MyPutString
  3068 ;;		_writeCaracter
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           	psect	text14
  3073   000A76                     __ptext14:
  3074                           	callstack 0
  3075   000A76                     _LcPutChar:
  3076                           	callstack 23
  3077                           
  3078                           ;incstack = 0
  3079                           ;LcPutChar@c stored from wreg
  3080   000A76  6E77               	movwf	LcPutChar@c^0,c
  3081                           
  3082                           ;LCD.c: 172:  WaitForBusy(); CantaData(c);
  3083   000A78  ECB9  F006         	call	_WaitForBusy	;wreg free
  3084   000A7C  5077               	movf	LcPutChar@c^0,w,c
  3085   000A7E  ECA3  F007         	call	_CantaData
  3086                           
  3087                           ;LCD.c: 174:  ++ColumnAct;
  3088   000A82  2A55               	incf	_ColumnAct^0,f,c
  3089                           
  3090                           ;LCD.c: 175:  if (Rows == 3) {
  3091   000A84  0E03               	movlw	3
  3092   000A86  1858               	xorwf	_Rows^0,w,c
  3093   000A88  A4D8               	btfss	status,2,c
  3094   000A8A  D011               	goto	l2700
  3095                           
  3096                           ;LCD.c: 176:   if (ColumnAct >= 20) {
  3097   000A8C  0E13               	movlw	19
  3098   000A8E  6455               	cpfsgt	_ColumnAct^0,c
  3099   000A90  0012               	return	
  3100                           
  3101                           ;LCD.c: 177:    ColumnAct = 0;
  3102   000A92  0E00               	movlw	0
  3103   000A94  6E55               	movwf	_ColumnAct^0,c
  3104                           
  3105                           ;LCD.c: 178:    if (++RowAct >= 4) RowAct = 0;
  3106   000A96  2A56               	incf	_RowAct^0,f,c
  3107   000A98  0E03               	movlw	3
  3108   000A9A  6456               	cpfsgt	_RowAct^0,c
  3109   000A9C  D002               	goto	l2698
  3110   000A9E  0E00               	movlw	0
  3111   000AA0  6E56               	movwf	_RowAct^0,c
  3112   000AA2                     l2698:
  3113                           
  3114                           ;LCD.c: 179:    LcGotoXY(ColumnAct, RowAct);
  3115   000AA2  C056  F06F         	movff	_RowAct,LcGotoXY@Row
  3116   000AA6  5055               	movf	_ColumnAct^0,w,c
  3117   000AA8  ECA0  F004         	call	_LcGotoXY
  3118   000AAC  0012               	return	
  3119   000AAE                     l2700:
  3120                           
  3121                           ;LCD.c: 182:  if (Rows == 2) {
  3122   000AAE  0E02               	movlw	2
  3123   000AB0  1858               	xorwf	_Rows^0,w,c
  3124   000AB2  A4D8               	btfss	status,2,c
  3125   000AB4  D011               	goto	l2712
  3126                           
  3127                           ;LCD.c: 183:   if (ColumnAct >= 40) {
  3128   000AB6  0E27               	movlw	39
  3129   000AB8  6455               	cpfsgt	_ColumnAct^0,c
  3130   000ABA  0012               	return	
  3131                           
  3132                           ;LCD.c: 184:    ColumnAct = 0;
  3133   000ABC  0E00               	movlw	0
  3134   000ABE  6E55               	movwf	_ColumnAct^0,c
  3135                           
  3136                           ;LCD.c: 185:    if (++RowAct >= 2) RowAct = 0;
  3137   000AC0  2A56               	incf	_RowAct^0,f,c
  3138   000AC2  0E01               	movlw	1
  3139   000AC4  6456               	cpfsgt	_RowAct^0,c
  3140   000AC6  D002               	goto	l2710
  3141   000AC8  0E00               	movlw	0
  3142   000ACA  6E56               	movwf	_RowAct^0,c
  3143   000ACC                     l2710:
  3144                           
  3145                           ;LCD.c: 186:    LcGotoXY(ColumnAct, RowAct);
  3146   000ACC  C056  F06F         	movff	_RowAct,LcGotoXY@Row
  3147   000AD0  5055               	movf	_ColumnAct^0,w,c
  3148   000AD2  ECA0  F004         	call	_LcGotoXY
  3149   000AD6  0012               	return	
  3150   000AD8                     l2712:
  3151                           
  3152                           ;LCD.c: 189:  if (RowAct == 1) {
  3153   000AD8  0456               	decf	_RowAct^0,w,c
  3154   000ADA  A4D8               	btfss	status,2,c
  3155   000ADC  0012               	return	
  3156                           
  3157                           ;LCD.c: 190:   if (ColumnAct >= 40) ColumnAct = 0;
  3158   000ADE  0E27               	movlw	39
  3159   000AE0  6455               	cpfsgt	_ColumnAct^0,c
  3160   000AE2  D002               	goto	l2718
  3161   000AE4  0E00               	movlw	0
  3162   000AE6  6E55               	movwf	_ColumnAct^0,c
  3163   000AE8                     l2718:
  3164                           
  3165                           ;LCD.c: 191:   LcGotoXY(ColumnAct, RowAct);
  3166   000AE8  C056  F06F         	movff	_RowAct,LcGotoXY@Row
  3167   000AEC  5055               	movf	_ColumnAct^0,w,c
  3168   000AEE  ECA0  F004         	call	_LcGotoXY
  3169   000AF2  0012               	return		;funcret
  3170   000AF4                     __end_of_LcPutChar:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _LcGotoXY *****************
  3174 ;; Defined at:
  3175 ;;		line 135 in file "LCD.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  Column          1    wreg     unsigned char 
  3178 ;;  Row             1   13[COMRAM] unsigned char 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  Column          1   20[COMRAM] unsigned char 
  3181 ;;  Fisics          2   18[COMRAM] int 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1
  3191 ;;      Params:         1       0       0
  3192 ;;      Locals:         5       0       0
  3193 ;;      Temps:          2       0       0
  3194 ;;      Totals:         8       0       0
  3195 ;;Total ram usage:        8 bytes
  3196 ;; Hardware stack levels used: 1
  3197 ;; Hardware stack levels required when called: 4
  3198 ;; This function calls:
  3199 ;;		_CantaIR
  3200 ;;		_WaitForBusy
  3201 ;; This function is called by:
  3202 ;;		_LcPutChar
  3203 ;;		_main
  3204 ;;		_motorMenu
  3205 ;;		_writeCaracter
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	text15
  3210   000940                     __ptext15:
  3211                           	callstack 0
  3212   000940                     _LcGotoXY:
  3213                           	callstack 23
  3214                           
  3215                           ;incstack = 0
  3216                           ;LcGotoXY@Column stored from wreg
  3217   000940  6E76               	movwf	LcGotoXY@Column^0,c
  3218                           
  3219                           ;LCD.c: 139:  int Fisics;;LCD.c: 141:  switch (Rows) {
  3220   000942  D036               	goto	l2646
  3221   000944                     l2624:
  3222                           
  3223                           ;LCD.c: 143:    Fisics = Column + (!Row ? 0 : 0x40); break;
  3224   000944  506F               	movf	LcGotoXY@Row^0,w,c
  3225   000946  B4D8               	btfsc	status,2,c
  3226   000948  D004               	goto	l2628
  3227   00094A  0E00               	movlw	0
  3228   00094C  6E73               	movwf	(_LcGotoXY$395+1)^0,c
  3229   00094E  0E40               	movlw	64
  3230   000950  D003               	goto	L2
  3231   000952                     l2628:
  3232   000952  0E00               	movlw	0
  3233   000954  6E73               	movwf	(_LcGotoXY$395+1)^0,c
  3234   000956  0E00               	movlw	0
  3235   000958                     L2:
  3236   000958  6E72               	movwf	_LcGotoXY$395^0,c
  3237   00095A  5076               	movf	LcGotoXY@Column^0,w,c
  3238   00095C  2472               	addwf	_LcGotoXY$395^0,w,c
  3239   00095E  6E74               	movwf	LcGotoXY@Fisics^0,c
  3240   000960  0E00               	movlw	0
  3241   000962  2073               	addwfc	(_LcGotoXY$395+1)^0,w,c
  3242   000964  6E75               	movwf	(LcGotoXY@Fisics+1)^0,c
  3243   000966  D036               	goto	l2648
  3244   000968                     l104:
  3245                           
  3246                           ;LCD.c: 145:    Fisics = Column;
  3247   000968  C076  F074         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  3248   00096C  6A75               	clrf	(LcGotoXY@Fisics+1)^0,c
  3249                           
  3250                           ;LCD.c: 146:    if (Row == 1) Fisics += 0x40; else
  3251   00096E  046F               	decf	LcGotoXY@Row^0,w,c
  3252   000970  A4D8               	btfss	status,2,c
  3253   000972  D002               	goto	l2636
  3254   000974  0E40               	movlw	64
  3255   000976  D005               	goto	L3
  3256   000978                     l2636:
  3257                           
  3258                           ;LCD.c: 147:    if (Row == 2) Fisics += Columns; else
  3259   000978  0E02               	movlw	2
  3260   00097A  186F               	xorwf	LcGotoXY@Row^0,w,c
  3261   00097C  A4D8               	btfss	status,2,c
  3262   00097E  D004               	goto	l2640
  3263   000980  5057               	movf	_Columns^0,w,c
  3264   000982                     L3:
  3265   000982  2674               	addwf	LcGotoXY@Fisics^0,f,c
  3266   000984  0E00               	movlw	0
  3267   000986  D00E               	goto	L4
  3268   000988                     l2640:
  3269                           
  3270                           ;LCD.c: 148:    if (Row == 3) Fisics += 0x40+Columns;
  3271   000988  0E03               	movlw	3
  3272   00098A  186F               	xorwf	LcGotoXY@Row^0,w,c
  3273   00098C  A4D8               	btfss	status,2,c
  3274   00098E  D022               	goto	l2648
  3275   000990  5057               	movf	_Columns^0,w,c
  3276   000992  6E70               	movwf	??_LcGotoXY^0,c
  3277   000994  6A71               	clrf	(??_LcGotoXY+1)^0,c
  3278   000996  0E40               	movlw	64
  3279   000998  2670               	addwf	??_LcGotoXY^0,f,c
  3280   00099A  0E00               	movlw	0
  3281   00099C  2271               	addwfc	(??_LcGotoXY+1)^0,f,c
  3282   00099E  5070               	movf	??_LcGotoXY^0,w,c
  3283   0009A0  2674               	addwf	LcGotoXY@Fisics^0,f,c
  3284   0009A2  5071               	movf	(??_LcGotoXY+1)^0,w,c
  3285   0009A4                     L4:
  3286   0009A4  2275               	addwfc	(LcGotoXY@Fisics+1)^0,f,c
  3287                           
  3288                           ;LCD.c: 149:    break;
  3289   0009A6  D016               	goto	l2648
  3290   0009A8                     l111:
  3291                           
  3292                           ;LCD.c: 152:    Fisics = Column; break;
  3293   0009A8  C076  F074         	movff	LcGotoXY@Column,LcGotoXY@Fisics
  3294   0009AC  6A75               	clrf	(LcGotoXY@Fisics+1)^0,c
  3295   0009AE  D012               	goto	l2648
  3296   0009B0                     l2646:
  3297   0009B0  5058               	movf	_Rows^0,w,c
  3298   0009B2  6E70               	movwf	??_LcGotoXY^0,c
  3299   0009B4  6A71               	clrf	(??_LcGotoXY+1)^0,c
  3300                           
  3301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3302                           ; Switch size 1, requested type "simple"
  3303                           ; Number of cases is 1, Range of values is 0 to 0
  3304                           ; switch strategies available:
  3305                           ; Name         Instructions Cycles
  3306                           ; simple_byte            4     3 (average)
  3307                           ;	Chosen strategy is simple_byte
  3308   0009B6  5071               	movf	(??_LcGotoXY+1)^0,w,c
  3309   0009B8  0A00               	xorlw	0	; case 0
  3310   0009BA  A4D8               	btfss	status,2,c
  3311   0009BC  D7F5               	goto	l111
  3312                           
  3313                           ; Switch size 1, requested type "simple"
  3314                           ; Number of cases is 3, Range of values is 1 to 4
  3315                           ; switch strategies available:
  3316                           ; Name         Instructions Cycles
  3317                           ; simple_byte           10     6 (average)
  3318                           ;	Chosen strategy is simple_byte
  3319   0009BE  5070               	movf	??_LcGotoXY^0,w,c
  3320   0009C0  0A01               	xorlw	1	; case 1
  3321   0009C2  B4D8               	btfsc	status,2,c
  3322   0009C4  D7F1               	goto	l111
  3323   0009C6  0A03               	xorlw	3	; case 2
  3324   0009C8  B4D8               	btfsc	status,2,c
  3325   0009CA  D7BC               	goto	l2624
  3326   0009CC  0A06               	xorlw	6	; case 4
  3327   0009CE  B4D8               	btfsc	status,2,c
  3328   0009D0  D7CB               	goto	l104
  3329   0009D2  D7EA               	goto	l111
  3330   0009D4                     l2648:
  3331                           
  3332                           ;LCD.c: 155:  WaitForBusy();
  3333   0009D4  ECB9  F006         	call	_WaitForBusy	;wreg free
  3334                           
  3335                           ;LCD.c: 156:  CantaIR(0x80 | Fisics);
  3336   0009D8  5074               	movf	LcGotoXY@Fisics^0,w,c
  3337   0009DA  0980               	iorlw	128
  3338   0009DC  ECBC  F007         	call	_CantaIR
  3339                           
  3340                           ;LCD.c: 158:  RowAct = Row;
  3341   0009E0  C06F  F056         	movff	LcGotoXY@Row,_RowAct
  3342                           
  3343                           ;LCD.c: 159:  ColumnAct = Column;
  3344   0009E4  C076  F055         	movff	LcGotoXY@Column,_ColumnAct
  3345   0009E8  0012               	return		;funcret
  3346   0009EA                     __end_of_LcGotoXY:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _CantaData *****************
  3350 ;; Defined at:
  3351 ;;		line 279 in file "LCD.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  Data            1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  Data            1    2[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1
  3365 ;;      Params:         0       0       0
  3366 ;;      Locals:         1       0       0
  3367 ;;      Temps:          0       0       0
  3368 ;;      Totals:         1       0       0
  3369 ;;Total ram usage:        1 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 3
  3372 ;; This function calls:
  3373 ;;		_CantaPartAlta
  3374 ;;		_CantaPartBaixa
  3375 ;; This function is called by:
  3376 ;;		_LcPutChar
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text16
  3381   000F46                     __ptext16:
  3382                           	callstack 0
  3383   000F46                     _CantaData:
  3384                           	callstack 24
  3385                           
  3386                           ;incstack = 0
  3387                           ;CantaData@Data stored from wreg
  3388   000F46  6E64               	movwf	CantaData@Data^0,c
  3389                           
  3390                           ;LCD.c: 280:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 0);
  3391   000F48  9096               	bcf	150,0,c	;volatile
  3392   000F4A  9A93               	bcf	147,5,c	;volatile
  3393   000F4C  9893               	bcf	147,4,c	;volatile
  3394   000F4E  9693               	bcf	147,3,c	;volatile
  3395                           
  3396                           ;LCD.c: 281:  (LATBbits.LATB0 = 1);
  3397   000F50  808A               	bsf	138,0,c	;volatile
  3398                           
  3399                           ;LCD.c: 282:  (LATBbits.LATB1 = 0);
  3400   000F52  928A               	bcf	138,1,c	;volatile
  3401                           
  3402                           ;LCD.c: 283:  (LATBbits.LATB2 = 1);
  3403   000F54  848A               	bsf	138,2,c	;volatile
  3404                           
  3405                           ;LCD.c: 284:  CantaPartAlta(Data);
  3406   000F56  5064               	movf	CantaData@Data^0,w,c
  3407   000F58  EC2A  F006         	call	_CantaPartAlta
  3408                           
  3409                           ;LCD.c: 285:  (LATBbits.LATB2 = 1);
  3410   000F5C  848A               	bsf	138,2,c	;volatile
  3411                           
  3412                           ;LCD.c: 286:  (LATBbits.LATB2 = 0);
  3413   000F5E  948A               	bcf	138,2,c	;volatile
  3414                           
  3415                           ;LCD.c: 287:  (LATBbits.LATB2 = 0);
  3416   000F60  948A               	bcf	138,2,c	;volatile
  3417                           
  3418                           ;LCD.c: 288:  (LATBbits.LATB2 = 1);
  3419   000F62  848A               	bsf	138,2,c	;volatile
  3420                           
  3421                           ;LCD.c: 289:  CantaPartBaixa(Data);
  3422   000F64  5064               	movf	CantaData@Data^0,w,c
  3423   000F66  ECF6  F005         	call	_CantaPartBaixa
  3424                           
  3425                           ;LCD.c: 290:  (LATBbits.LATB2 = 1);
  3426   000F6A  848A               	bsf	138,2,c	;volatile
  3427                           
  3428                           ;LCD.c: 291:  (LATBbits.LATB2 = 0);
  3429   000F6C  948A               	bcf	138,2,c	;volatile
  3430                           
  3431                           ;LCD.c: 292:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 1);
  3432   000F6E  8096               	bsf	150,0,c	;volatile
  3433   000F70  8A93               	bsf	147,5,c	;volatile
  3434   000F72  8893               	bsf	147,4,c	;volatile
  3435   000F74  8693               	bsf	147,3,c	;volatile
  3436   000F76  0012               	return		;funcret
  3437   000F78                     __end_of_CantaData:
  3438                           	callstack 0
  3439                           
  3440 ;; *************** function _LcClear *****************
  3441 ;; Defined at:
  3442 ;;		line 114 in file "LCD.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;		None
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1    wreg      void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3451 ;; Tracked objects:
  3452 ;;		On entry : 3F/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1
  3456 ;;      Params:         0       0       0
  3457 ;;      Locals:         0       0       0
  3458 ;;      Temps:          0       0       0
  3459 ;;      Totals:         0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used: 1
  3462 ;; Hardware stack levels required when called: 4
  3463 ;; This function calls:
  3464 ;;		_CantaIR
  3465 ;;		_Espera
  3466 ;;		_WaitForBusy
  3467 ;; This function is called by:
  3468 ;;		_motorMenu
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text17
  3473   00106C                     __ptext17:
  3474                           	callstack 0
  3475   00106C                     _LcClear:
  3476                           	callstack 25
  3477                           
  3478                           ; BSR set to: 0
  3479                           ;LCD.c: 117:  WaitForBusy(); CantaIR(0x01);
  3480                           
  3481                           ;incstack = 0
  3482   00106C  ECB9  F006         	call	_WaitForBusy	;wreg free
  3483   001070  0E01               	movlw	1
  3484   001072  ECBC  F007         	call	_CantaIR
  3485                           
  3486                           ;LCD.c: 118:  Espera(Timer, 3);
  3487   001076  0E00               	movlw	0
  3488   001078  6E6F               	movwf	(Espera@ms+1)^0,c
  3489   00107A  0E03               	movlw	3
  3490   00107C  6E6E               	movwf	Espera@ms^0,c
  3491   00107E  5061               	movf	_Timer^0,w,c
  3492   001080  EC8D  F006         	call	_Espera
  3493   001084  0012               	return		;funcret
  3494   001086                     __end_of_LcClear:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _motorJoy *****************
  3498 ;; Defined at:
  3499 ;;		line 22 in file "TJOYSTICK.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1
  3513 ;;      Params:         0       0       0
  3514 ;;      Locals:         0       0       0
  3515 ;;      Temps:          2       0       0
  3516 ;;      Totals:         2       0       0
  3517 ;;Total ram usage:        2 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 2
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_main
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text18
  3528   000AF4                     __ptext18:
  3529                           	callstack 0
  3530   000AF4                     _motorJoy:
  3531                           	callstack 28
  3532                           
  3533                           ;TJOYSTICK.c: 23:     switch (estat_joy){
  3534                           
  3535                           ;incstack = 0
  3536   000AF4  D026               	goto	l2508
  3537   000AF6                     l2484:
  3538                           
  3539                           ;TJOYSTICK.c: 27:                 estat_joy = 1;
  3540   000AF6  0E01               	movlw	1
  3541   000AF8  6E24               	movwf	_estat_joy^0,c
  3542                           
  3543                           ;TJOYSTICK.c: 28:                 ADCON0bits.GODONE = 1;
  3544   000AFA  82C2               	bsf	194,1,c	;volatile
  3545                           
  3546                           ;TJOYSTICK.c: 30:                 break;
  3547   000AFC  0012               	return	
  3548   000AFE                     l596:
  3549                           
  3550                           ;TJOYSTICK.c: 32:             if (ADCON0bits.GODONE == 0){
  3551   000AFE  B2C2               	btfsc	194,1,c	;volatile
  3552   000B00  0012               	return	
  3553                           
  3554                           ;TJOYSTICK.c: 33:                 estat_joy = 2;
  3555   000B02  0E02               	movlw	2
  3556   000B04  6E24               	movwf	_estat_joy^0,c
  3557                           
  3558                           ;TJOYSTICK.c: 34:                 valor_ADRESH = ADRESH;
  3559   000B06  CFC4 F022          	movff	4036,_valor_ADRESH	;volatile
  3560   000B0A  0012               	return	
  3561   000B0C                     l2492:
  3562                           
  3563                           ;TJOYSTICK.c: 39:             if(valor_ADRESH < 70){
  3564   000B0C  0E46               	movlw	70
  3565   000B0E  6022               	cpfslt	_valor_ADRESH^0,c
  3566   000B10  D005               	goto	l2496
  3567                           
  3568                           ;TJOYSTICK.c: 40:                 joy_direction = 'U';
  3569   000B12  0E55               	movlw	85
  3570   000B14  6E23               	movwf	_joy_direction^0,c
  3571                           
  3572                           ;TJOYSTICK.c: 41:                 estat_joy = 0;
  3573   000B16  0E00               	movlw	0
  3574   000B18  6E24               	movwf	_estat_joy^0,c
  3575                           
  3576                           ;TJOYSTICK.c: 42:             }else{
  3577   000B1A  0012               	return	
  3578   000B1C                     l2496:
  3579                           
  3580                           ;TJOYSTICK.c: 43:                 estat_joy = 3;
  3581   000B1C  0E03               	movlw	3
  3582   000B1E  6E24               	movwf	_estat_joy^0,c
  3583   000B20  0012               	return	
  3584   000B22                     l2498:
  3585                           
  3586                           ;TJOYSTICK.c: 48:             if(valor_ADRESH > 180){
  3587   000B22  0EB4               	movlw	180
  3588   000B24  6422               	cpfsgt	_valor_ADRESH^0,c
  3589   000B26  D005               	goto	l2502
  3590                           
  3591                           ;TJOYSTICK.c: 49:                 joy_direction = 'D';
  3592   000B28  0E44               	movlw	68
  3593   000B2A  6E23               	movwf	_joy_direction^0,c
  3594                           
  3595                           ;TJOYSTICK.c: 50:                 estat_joy = 0;
  3596   000B2C  0E00               	movlw	0
  3597   000B2E  6E24               	movwf	_estat_joy^0,c
  3598                           
  3599                           ;TJOYSTICK.c: 51:             }else{
  3600   000B30  0012               	return	
  3601   000B32                     l2502:
  3602                           
  3603                           ;TJOYSTICK.c: 52:                 estat_joy = 4;
  3604   000B32  0E04               	movlw	4
  3605   000B34  6E24               	movwf	_estat_joy^0,c
  3606   000B36  0012               	return	
  3607   000B38                     l2504:
  3608                           
  3609                           ;TJOYSTICK.c: 56:             joy_direction = 'M';
  3610   000B38  0E4D               	movlw	77
  3611   000B3A  6E23               	movwf	_joy_direction^0,c
  3612                           
  3613                           ;TJOYSTICK.c: 57:             estat_joy = 0;
  3614   000B3C  0E00               	movlw	0
  3615   000B3E  6E24               	movwf	_estat_joy^0,c
  3616                           
  3617                           ;TJOYSTICK.c: 58:             break;
  3618   000B40  0012               	return	
  3619   000B42                     l2508:
  3620   000B42  5024               	movf	_estat_joy^0,w,c
  3621   000B44  6E62               	movwf	??_motorJoy^0,c
  3622   000B46  6A63               	clrf	(??_motorJoy+1)^0,c
  3623                           
  3624                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3625                           ; Switch size 1, requested type "simple"
  3626                           ; Number of cases is 1, Range of values is 0 to 0
  3627                           ; switch strategies available:
  3628                           ; Name         Instructions Cycles
  3629                           ; simple_byte            4     3 (average)
  3630                           ;	Chosen strategy is simple_byte
  3631   000B48  5063               	movf	(??_motorJoy+1)^0,w,c
  3632   000B4A  0A00               	xorlw	0	; case 0
  3633   000B4C  A4D8               	btfss	status,2,c
  3634   000B4E  0012               	return	
  3635                           
  3636                           ; Switch size 1, requested type "simple"
  3637                           ; Number of cases is 5, Range of values is 0 to 4
  3638                           ; switch strategies available:
  3639                           ; Name         Instructions Cycles
  3640                           ; simple_byte           16     9 (average)
  3641                           ;	Chosen strategy is simple_byte
  3642   000B50  5062               	movf	??_motorJoy^0,w,c
  3643   000B52  0A00               	xorlw	0	; case 0
  3644   000B54  B4D8               	btfsc	status,2,c
  3645   000B56  D7CF               	goto	l2484
  3646   000B58  0A01               	xorlw	1	; case 1
  3647   000B5A  B4D8               	btfsc	status,2,c
  3648   000B5C  D7D0               	goto	l596
  3649   000B5E  0A03               	xorlw	3	; case 2
  3650   000B60  B4D8               	btfsc	status,2,c
  3651   000B62  D7D4               	goto	l2492
  3652   000B64  0A01               	xorlw	1	; case 3
  3653   000B66  B4D8               	btfsc	status,2,c
  3654   000B68  D7DC               	goto	l2498
  3655   000B6A  0A07               	xorlw	7	; case 4
  3656   000B6C  A4D8               	btfss	status,2,c
  3657   000B6E  0012               	return	
  3658   000B70  D7E3               	goto	l2504
  3659   000B72                     __end_of_motorJoy:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _initTeclat *****************
  3663 ;; Defined at:
  3664 ;;		line 41 in file "TTECLAT.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;		None
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1
  3678 ;;      Params:         0       0       0
  3679 ;;      Locals:         0       0       0
  3680 ;;      Temps:          0       0       0
  3681 ;;      Totals:         0       0       0
  3682 ;;Total ram usage:        0 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 3
  3685 ;; This function calls:
  3686 ;;		_TI_NewTimer
  3687 ;;		_TI_ResetTics
  3688 ;; This function is called by:
  3689 ;;		_main
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text19
  3694   000ECE                     __ptext19:
  3695                           	callstack 0
  3696   000ECE                     _initTeclat:
  3697                           	callstack 27
  3698                           
  3699                           ;TTECLAT.c: 42:     rows = 0x08;
  3700                           
  3701                           ;incstack = 0
  3702   000ECE  0E08               	movlw	8
  3703   000ED0  6E2D               	movwf	_rows^0,c
  3704                           
  3705                           ;TTECLAT.c: 43:     caracters_escrits = 0;
  3706   000ED2  0E00               	movlw	0
  3707   000ED4  6E27               	movwf	_caracters_escrits^0,c
  3708                           
  3709                           ;TTECLAT.c: 44:     TI_NewTimer(&TimerRebots);
  3710   000ED6  0E5D               	movlw	low _TimerRebots
  3711   000ED8  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  3712   000EDA  EC48  F007         	call	_TI_NewTimer	;wreg free
  3713                           
  3714                           ;TTECLAT.c: 45:     TI_NewTimer(&Timer1S);
  3715   000EDE  0E5C               	movlw	low _Timer1S
  3716   000EE0  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  3717   000EE2  EC48  F007         	call	_TI_NewTimer	;wreg free
  3718                           
  3719                           ;TTECLAT.c: 46:     TI_ResetTics (Timer1S);
  3720   000EE6  505C               	movf	_Timer1S^0,w,c
  3721   000EE8  EC14  F008         	call	_TI_ResetTics
  3722                           
  3723                           ;TTECLAT.c: 47:     (TRISCbits.TRISC0 = TRISCbits.TRISC4 = TRISCbits.TRISC2 = 1);
  3724   000EEC  8494               	bsf	148,2,c	;volatile
  3725   000EEE  8894               	bsf	148,4,c	;volatile
  3726   000EF0  8094               	bsf	148,0,c	;volatile
  3727                           
  3728                           ;TTECLAT.c: 48:     (TRISCbits.TRISC1 = TRISCbits.TRISC3 = TRISCbits.TRISC5 = TRISEbits.
      +                          TRISE1 = 0);
  3729   000EF2  9296               	bcf	150,1,c	;volatile
  3730   000EF4  9A94               	bcf	148,5,c	;volatile
  3731   000EF6  9694               	bcf	148,3,c	;volatile
  3732   000EF8  9294               	bcf	148,1,c	;volatile
  3733                           
  3734                           ;TTECLAT.c: 49:     estat_teclat = 0;
  3735   000EFA  0E00               	movlw	0
  3736   000EFC  6E2E               	movwf	_estat_teclat^0,c
  3737                           
  3738                           ;TTECLAT.c: 50:     hi_ha_tecla = 0;
  3739   000EFE  0E00               	movlw	0
  3740   000F00  6E2B               	movwf	_hi_ha_tecla^0,c
  3741                           
  3742                           ;TTECLAT.c: 51:     caracters_escrits = -1;
  3743   000F02  6827               	setf	_caracters_escrits^0,c
  3744                           
  3745                           ;TTECLAT.c: 52:     espera = 0;
  3746   000F04  0E00               	movlw	0
  3747   000F06  6E28               	movwf	_espera^0,c
  3748   000F08  0012               	return		;funcret
  3749   000F0A                     __end_of_initTeclat:
  3750                           	callstack 0
  3751                           
  3752 ;; *************** function _initMicro *****************
  3753 ;; Defined at:
  3754 ;;		line 25 in file "TRECORDING.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;                  1    wreg      void 
  3761 ;; Registers used:
  3762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 3F/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMRAM   BANK0   BANK1
  3768 ;;      Params:         0       0       0
  3769 ;;      Locals:         0       0       0
  3770 ;;      Temps:          0       0       0
  3771 ;;      Totals:         0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels used: 1
  3774 ;; Hardware stack levels required when called: 3
  3775 ;; This function calls:
  3776 ;;		_TI_NewTimer
  3777 ;;		_TI_ResetTics
  3778 ;; This function is called by:
  3779 ;;		_main
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text20
  3784   001086                     __ptext20:
  3785                           	callstack 0
  3786   001086                     _initMicro:
  3787                           	callstack 27
  3788                           
  3789                           ;TRECORDING.c: 26:     TI_NewTimer(&TimerRecordingADC);
  3790                           
  3791                           ;incstack = 0
  3792   001086  0E59               	movlw	low _TimerRecordingADC
  3793   001088  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  3794   00108A  EC48  F007         	call	_TI_NewTimer	;wreg free
  3795                           
  3796                           ;TRECORDING.c: 27:     TI_ResetTics (TimerRecordingADC);
  3797   00108E  5059               	movf	_TimerRecordingADC^0,w,c
  3798   001090  EC14  F008         	call	_TI_ResetTics
  3799                           
  3800                           ;TRECORDING.c: 28:     mostres = 0;
  3801   001094  0E00               	movlw	0
  3802   001096  0100               	movlb	0	; () banked
  3803   001098  6FDE               	movwf	(_mostres+1)& (0+255),b
  3804   00109A  0E00               	movlw	0
  3805   00109C  6FDD               	movwf	_mostres& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808   00109E  0012               	return		;funcret
  3809   0010A0                     __end_of_initMicro:
  3810                           	callstack 0
  3811                           
  3812 ;; *************** function _initEEPROM *****************
  3813 ;; Defined at:
  3814 ;;		line 28 in file "TEEPROM.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;		None
  3817 ;; Auto vars:     Size  Location     Type
  3818 ;;		None
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, status,2
  3823 ;; Tracked objects:
  3824 ;;		On entry : 3F/0
  3825 ;;		On exit  : 3F/0
  3826 ;;		Unchanged: 3F/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1
  3828 ;;      Params:         0       0       0
  3829 ;;      Locals:         0       0       0
  3830 ;;      Temps:          0       0       0
  3831 ;;      Totals:         0       0       0
  3832 ;;Total ram usage:        0 bytes
  3833 ;; Hardware stack levels used: 1
  3834 ;; Hardware stack levels required when called: 2
  3835 ;; This function calls:
  3836 ;;		Nothing
  3837 ;; This function is called by:
  3838 ;;		_main
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842                           	psect	text21
  3843   0010E8                     __ptext21:
  3844                           	callstack 0
  3845   0010E8                     _initEEPROM:
  3846                           	callstack 28
  3847                           
  3848                           ; BSR set to: 0
  3849                           ;TEEPROM.c: 29:     EECON1bits.EEPGD = 0;
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;incstack = 0
  3853   0010E8  9EA6               	bcf	166,7,c	;volsfr
  3854                           
  3855                           ;TEEPROM.c: 30:     EECON1bits.CFGS = 0;
  3856   0010EA  9CA6               	bcf	166,6,c	;volsfr
  3857                           
  3858                           ; BSR set to: 0
  3859                           ;TEEPROM.c: 31:     EEADR = 0;
  3860   0010EC  0E00               	movlw	0
  3861   0010EE  6EA9               	movwf	169,c	;volatile
  3862                           
  3863                           ; BSR set to: 0
  3864   0010F0  0012               	return		;funcret
  3865   0010F2                     __end_of_initEEPROM:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _TI_Init *****************
  3869 ;; Defined at:
  3870 ;;		line 36 in file "TTIMER.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  counter         1    0[COMRAM] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1
  3884 ;;      Params:         0       0       0
  3885 ;;      Locals:         1       0       0
  3886 ;;      Temps:          0       0       0
  3887 ;;      Totals:         1       0       0
  3888 ;;Total ram usage:        1 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 2
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text22
  3899   000FD6                     __ptext22:
  3900                           	callstack 0
  3901   000FD6                     _TI_Init:
  3902                           	callstack 28
  3903                           
  3904                           ;TTIMER.c: 37:  for (unsigned char counter=0; counter<9; counter++) {
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;incstack = 0
  3908   000FD6  0E00               	movlw	0
  3909   000FD8  6E62               	movwf	TI_Init@counter^0,c
  3910   000FDA                     l2958:
  3911                           
  3912                           ;TTIMER.c: 38:   Timers[counter].Busy=0;
  3913   000FDA  5062               	movf	TI_Init@counter^0,w,c
  3914   000FDC  0D05               	mullw	5
  3915   000FDE  50F3               	movf	243,w,c
  3916   000FE0  0F84               	addlw	low (_Timers+4)
  3917   000FE2  6ED9               	movwf	fsr2l,c
  3918   000FE4  6ADA               	clrf	fsr2h,c
  3919   000FE6  6ADF               	clrf	indf2,c
  3920                           
  3921                           ;TTIMER.c: 39:  }
  3922   000FE8  2A62               	incf	TI_Init@counter^0,f,c
  3923   000FEA  0E08               	movlw	8
  3924   000FEC  6462               	cpfsgt	TI_Init@counter^0,c
  3925   000FEE  D7F5               	goto	l2958
  3926                           
  3927                           ;TTIMER.c: 40:  T0CON = 0x88;
  3928   000FF0  0E88               	movlw	136
  3929   000FF2  6ED5               	movwf	213,c	;volatile
  3930                           
  3931                           ;TTIMER.c: 41:     TMR0 = 64536;
  3932   000FF4  0EFC               	movlw	252
  3933   000FF6  6ED7               	movwf	215,c	;volatile
  3934   000FF8  0E18               	movlw	24
  3935   000FFA  6ED6               	movwf	214,c	;volatile
  3936                           
  3937                           ;TTIMER.c: 42:  INTCONbits.TMR0IF = 0;
  3938   000FFC  94F2               	bcf	242,2,c	;volatile
  3939                           
  3940                           ;TTIMER.c: 43:  INTCONbits.TMR0IE = 1;
  3941   000FFE  8AF2               	bsf	242,5,c	;volatile
  3942   001000  0012               	return		;funcret
  3943   001002                     __end_of_TI_Init:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _Menu_Init *****************
  3947 ;; Defined at:
  3948 ;;		line 121 in file "TMENU.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1
  3962 ;;      Params:         0       0       0
  3963 ;;      Locals:         0       0       0
  3964 ;;      Temps:          0       0       0
  3965 ;;      Totals:         0       0       0
  3966 ;;Total ram usage:        0 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 3
  3969 ;; This function calls:
  3970 ;;		_TI_NewTimer
  3971 ;;		_TI_ResetTics
  3972 ;; This function is called by:
  3973 ;;		_main
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text23
  3978   000F0A                     __ptext23:
  3979                           	callstack 0
  3980   000F0A                     _Menu_Init:
  3981                           	callstack 27
  3982                           
  3983                           ;TMENU.c: 122:     estat_menu = 0;
  3984                           
  3985                           ;incstack = 0
  3986   000F0A  0E00               	movlw	0
  3987   000F0C  6E47               	movwf	_estat_menu^0,c
  3988                           
  3989                           ;TMENU.c: 123:     flag_putstring = 0;
  3990   000F0E  0E00               	movlw	0
  3991   000F10  6E43               	movwf	_flag_putstring^0,c
  3992                           
  3993                           ;TMENU.c: 124:     flag_startmenu = 0;
  3994   000F12  0E00               	movlw	0
  3995   000F14  6E40               	movwf	_flag_startmenu^0,c
  3996                           
  3997                           ;TMENU.c: 125:     TI_NewTimer(&TimerRecording);
  3998   000F16  0E60               	movlw	low _TimerRecording
  3999   000F18  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  4000   000F1A  EC48  F007         	call	_TI_NewTimer	;wreg free
  4001                           
  4002                           ;TMENU.c: 126:     TI_ResetTics (TimerRecording);
  4003   000F1E  5060               	movf	_TimerRecording^0,w,c
  4004   000F20  EC14  F008         	call	_TI_ResetTics
  4005                           
  4006                           ;TMENU.c: 127:     TI_NewTimer(&TimerMarquesina);
  4007   000F24  0E5F               	movlw	low _TimerMarquesina
  4008   000F26  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  4009   000F28  EC48  F007         	call	_TI_NewTimer	;wreg free
  4010                           
  4011                           ;TMENU.c: 128:     TI_ResetTics (TimerMarquesina);
  4012   000F2C  505F               	movf	_TimerMarquesina^0,w,c
  4013   000F2E  EC14  F008         	call	_TI_ResetTics
  4014                           
  4015                           ;TMENU.c: 129:     TI_NewTimer(&timer_2s);
  4016   000F32  0E5E               	movlw	low _timer_2s
  4017   000F34  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  4018   000F36  EC48  F007         	call	_TI_NewTimer	;wreg free
  4019                           
  4020                           ;TMENU.c: 130:     TI_ResetTics (timer_2s);
  4021   000F3A  505E               	movf	_timer_2s^0,w,c
  4022   000F3C  EC14  F008         	call	_TI_ResetTics
  4023                           
  4024                           ;TMENU.c: 131:     tower_name_position = 0;
  4025   000F40  0E00               	movlw	0
  4026   000F42  6E45               	movwf	_tower_name_position^0,c
  4027   000F44  0012               	return		;funcret
  4028   000F46                     __end_of_Menu_Init:
  4029                           	callstack 0
  4030                           
  4031 ;; *************** function _LcInit *****************
  4032 ;; Defined at:
  4033 ;;		line 68 in file "LCD.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  rows            1    wreg     unsigned char 
  4036 ;;  columns         1   21[COMRAM] unsigned char 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  rows            1   22[COMRAM] unsigned char 
  4039 ;;  i               2   23[COMRAM] int 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1
  4049 ;;      Params:         1       0       0
  4050 ;;      Locals:         3       0       0
  4051 ;;      Temps:          0       0       0
  4052 ;;      Totals:         4       0       0
  4053 ;;Total ram usage:        4 bytes
  4054 ;; Hardware stack levels used: 1
  4055 ;; Hardware stack levels required when called: 4
  4056 ;; This function calls:
  4057 ;;		_CantaIR
  4058 ;;		_EscriuPrimeraOrdre
  4059 ;;		_Espera
  4060 ;;		_TI_NewTimer
  4061 ;;		_WaitForBusy
  4062 ;; This function is called by:
  4063 ;;		_main
  4064 ;; This function uses a non-reentrant model
  4065 ;;
  4066                           
  4067                           	psect	text24
  4068   0006EE                     __ptext24:
  4069                           	callstack 0
  4070   0006EE                     _LcInit:
  4071                           	callstack 26
  4072                           
  4073                           ;incstack = 0
  4074                           ;LcInit@rows stored from wreg
  4075   0006EE  6E78               	movwf	LcInit@rows^0,c
  4076                           
  4077                           ;LCD.c: 75:  int i;;LCD.c: 76:  TI_NewTimer(&Timer);
  4078   0006F0  0E61               	movlw	low _Timer
  4079   0006F2  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  4080   0006F4  EC48  F007         	call	_TI_NewTimer	;wreg free
  4081                           
  4082                           ;LCD.c: 77:  Rows = rows; Columns = columns;
  4083   0006F8  C078  F058         	movff	LcInit@rows,_Rows
  4084   0006FC  C077  F057         	movff	LcInit@columns,_Columns
  4085                           
  4086                           ;LCD.c: 78:  RowAct = ColumnAct = 0;
  4087   000700  0E00               	movlw	0
  4088   000702  6E55               	movwf	_ColumnAct^0,c
  4089   000704  C055  F056         	movff	_ColumnAct,_RowAct
  4090                           
  4091                           ;LCD.c: 79:  (TRISBbits.TRISB0 = TRISBbits.TRISB1 = TRISBbits.TRISB2 = 0);
  4092   000708  9493               	bcf	147,2,c	;volatile
  4093   00070A  9293               	bcf	147,1,c	;volatile
  4094   00070C  9093               	bcf	147,0,c	;volatile
  4095                           
  4096                           ;LCD.c: 80:  for (i = 0; i < 2; i++) {
  4097   00070E  0E00               	movlw	0
  4098   000710  6E7A               	movwf	(LcInit@i+1)^0,c
  4099   000712  0E00               	movlw	0
  4100   000714  6E79               	movwf	LcInit@i^0,c
  4101   000716                     l2986:
  4102                           
  4103                           ;LCD.c: 81:   Espera(Timer, 100);
  4104   000716  0E00               	movlw	0
  4105   000718  6E6F               	movwf	(Espera@ms+1)^0,c
  4106   00071A  0E64               	movlw	100
  4107   00071C  6E6E               	movwf	Espera@ms^0,c
  4108   00071E  5061               	movf	_Timer^0,w,c
  4109   000720  EC8D  F006         	call	_Espera
  4110                           
  4111                           ;LCD.c: 84:   EscriuPrimeraOrdre(0x02 | 0x01);
  4112   000724  0E03               	movlw	3
  4113   000726  ECB9  F005         	call	_EscriuPrimeraOrdre
  4114                           
  4115                           ;LCD.c: 85:   Espera(Timer, 5);
  4116   00072A  0E00               	movlw	0
  4117   00072C  6E6F               	movwf	(Espera@ms+1)^0,c
  4118   00072E  0E05               	movlw	5
  4119   000730  6E6E               	movwf	Espera@ms^0,c
  4120   000732  5061               	movf	_Timer^0,w,c
  4121   000734  EC8D  F006         	call	_Espera
  4122                           
  4123                           ;LCD.c: 86:   EscriuPrimeraOrdre(0x02 | 0x01);
  4124   000738  0E03               	movlw	3
  4125   00073A  ECB9  F005         	call	_EscriuPrimeraOrdre
  4126                           
  4127                           ;LCD.c: 87:   Espera(Timer, 1);
  4128   00073E  0E00               	movlw	0
  4129   000740  6E6F               	movwf	(Espera@ms+1)^0,c
  4130   000742  0E01               	movlw	1
  4131   000744  6E6E               	movwf	Espera@ms^0,c
  4132   000746  5061               	movf	_Timer^0,w,c
  4133   000748  EC8D  F006         	call	_Espera
  4134                           
  4135                           ;LCD.c: 88:   EscriuPrimeraOrdre(0x02 | 0x01);
  4136   00074C  0E03               	movlw	3
  4137   00074E  ECB9  F005         	call	_EscriuPrimeraOrdre
  4138                           
  4139                           ;LCD.c: 89:   Espera(Timer, 1);
  4140   000752  0E00               	movlw	0
  4141   000754  6E6F               	movwf	(Espera@ms+1)^0,c
  4142   000756  0E01               	movlw	1
  4143   000758  6E6E               	movwf	Espera@ms^0,c
  4144   00075A  5061               	movf	_Timer^0,w,c
  4145   00075C  EC8D  F006         	call	_Espera
  4146                           
  4147                           ;LCD.c: 92:   EscriuPrimeraOrdre(0x02);
  4148   000760  0E02               	movlw	2
  4149   000762  ECB9  F005         	call	_EscriuPrimeraOrdre
  4150                           
  4151                           ;LCD.c: 93:   Espera(Timer, 1);
  4152   000766  0E00               	movlw	0
  4153   000768  6E6F               	movwf	(Espera@ms+1)^0,c
  4154   00076A  0E01               	movlw	1
  4155   00076C  6E6E               	movwf	Espera@ms^0,c
  4156   00076E  5061               	movf	_Timer^0,w,c
  4157   000770  EC8D  F006         	call	_Espera
  4158                           
  4159                           ;LCD.c: 94:   CantaIR(0x20 | 0x08);
  4160   000774  0E28               	movlw	40
  4161   000776  ECBC  F007         	call	_CantaIR
  4162                           
  4163                           ;LCD.c: 97:   WaitForBusy(); CantaIR(0x08);
  4164   00077A  ECB9  F006         	call	_WaitForBusy	;wreg free
  4165   00077E  0E08               	movlw	8
  4166   000780  ECBC  F007         	call	_CantaIR
  4167                           
  4168                           ;LCD.c: 98:   WaitForBusy(); CantaIR(0x01);
  4169   000784  ECB9  F006         	call	_WaitForBusy	;wreg free
  4170   000788  0E01               	movlw	1
  4171   00078A  ECBC  F007         	call	_CantaIR
  4172                           
  4173                           ;LCD.c: 99:   Espera(Timer,3);
  4174   00078E  0E00               	movlw	0
  4175   000790  6E6F               	movwf	(Espera@ms+1)^0,c
  4176   000792  0E03               	movlw	3
  4177   000794  6E6E               	movwf	Espera@ms^0,c
  4178   000796  5061               	movf	_Timer^0,w,c
  4179   000798  EC8D  F006         	call	_Espera
  4180                           
  4181                           ;LCD.c: 100:   WaitForBusy(); CantaIR(0x04 | 0x02);
  4182   00079C  ECB9  F006         	call	_WaitForBusy	;wreg free
  4183   0007A0  0E06               	movlw	6
  4184   0007A2  ECBC  F007         	call	_CantaIR
  4185                           
  4186                           ;LCD.c: 101:   WaitForBusy(); CantaIR(0x08 | 0x04 | 0x02 | 0x01);
  4187   0007A6  ECB9  F006         	call	_WaitForBusy	;wreg free
  4188   0007AA  0E0F               	movlw	15
  4189   0007AC  ECBC  F007         	call	_CantaIR
  4190                           
  4191                           ;LCD.c: 102:  }
  4192   0007B0  4A79               	infsnz	LcInit@i^0,f,c
  4193   0007B2  2A7A               	incf	(LcInit@i+1)^0,f,c
  4194   0007B4  BE7A               	btfsc	(LcInit@i+1)^0,7,c
  4195   0007B6  D7AF               	goto	l2986
  4196   0007B8  507A               	movf	(LcInit@i+1)^0,w,c
  4197   0007BA  E105               	bnz	u1750
  4198   0007BC  0E02               	movlw	2
  4199   0007BE  5C79               	subwf	LcInit@i^0,w,c
  4200   0007C0  B0D8               	btfsc	status,0,c
  4201   0007C2  0012               	return	
  4202   0007C4  D7A8               	goto	l2986
  4203   0007C6                     u1750:
  4204   0007C6  0012               	return		;funcret
  4205   0007C8                     __end_of_LcInit:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function _WaitForBusy *****************
  4209 ;; Defined at:
  4210 ;;		line 295 in file "LCD.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  Busy            1   12[COMRAM] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1
  4224 ;;      Params:         0       0       0
  4225 ;;      Locals:         1       0       0
  4226 ;;      Temps:          0       0       0
  4227 ;;      Totals:         1       0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 3
  4231 ;; This function calls:
  4232 ;;		_TI_GetTics
  4233 ;;		_TI_ResetTics
  4234 ;; This function is called by:
  4235 ;;		_LcInit
  4236 ;;		_LcClear
  4237 ;;		_LcGotoXY
  4238 ;;		_LcPutChar
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text25
  4243   000D72                     __ptext25:
  4244                           	callstack 0
  4245   000D72                     _WaitForBusy:
  4246                           	callstack 24
  4247                           
  4248                           ;LCD.c: 296:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 1);
  4249                           
  4250                           ;incstack = 0
  4251   000D72  8096               	bsf	150,0,c	;volatile
  4252   000D74  8A93               	bsf	147,5,c	;volatile
  4253   000D76  8893               	bsf	147,4,c	;volatile
  4254   000D78  8693               	bsf	147,3,c	;volatile
  4255                           
  4256                           ;LCD.c: 297:  (LATBbits.LATB0 = 0);
  4257   000D7A  908A               	bcf	138,0,c	;volatile
  4258                           
  4259                           ;LCD.c: 298:  (LATBbits.LATB1 = 1);
  4260   000D7C  828A               	bsf	138,1,c	;volatile
  4261                           
  4262                           ;LCD.c: 299:  TI_ResetTics(Timer);
  4263   000D7E  5061               	movf	_Timer^0,w,c
  4264   000D80  EC14  F008         	call	_TI_ResetTics
  4265   000D84                     l2598:
  4266                           
  4267                           ;LCD.c: 301:   (LATBbits.LATB2 = 1);(LATBbits.LATB2 = 1);
  4268   000D84  848A               	bsf	138,2,c	;volatile
  4269   000D86  848A               	bsf	138,2,c	;volatile
  4270                           
  4271                           ;LCD.c: 302:   Busy = (PORTEbits.RE0);
  4272   000D88  0E00               	movlw	0
  4273   000D8A  B084               	btfsc	132,0,c	;volatile
  4274   000D8C  0E01               	movlw	1
  4275   000D8E  6E6E               	movwf	WaitForBusy@Busy^0,c
  4276                           
  4277                           ;LCD.c: 303:   (LATBbits.LATB2 = 0);
  4278   000D90  948A               	bcf	138,2,c	;volatile
  4279                           
  4280                           ;LCD.c: 304:   (LATBbits.LATB2 = 0);
  4281   000D92  948A               	bcf	138,2,c	;volatile
  4282                           
  4283                           ;LCD.c: 305:   (LATBbits.LATB2 = 1);(LATBbits.LATB2 = 1);
  4284   000D94  848A               	bsf	138,2,c	;volatile
  4285   000D96  848A               	bsf	138,2,c	;volatile
  4286                           
  4287                           ;LCD.c: 307:   (LATBbits.LATB2 = 0);
  4288   000D98  948A               	bcf	138,2,c	;volatile
  4289                           
  4290                           ;LCD.c: 308:   (LATBbits.LATB2 = 0);
  4291   000D9A  948A               	bcf	138,2,c	;volatile
  4292                           
  4293                           ;LCD.c: 309:   if (TI_GetTics(Timer)) break;
  4294   000D9C  5061               	movf	_Timer^0,w,c
  4295   000D9E  6E62               	movwf	TI_GetTics@TimerHandle^0,c
  4296   000DA0  6A63               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  4297   000DA2  6A64               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  4298   000DA4  6A65               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  4299   000DA6  ECDF  F006         	call	_TI_GetTics	;wreg free
  4300   000DAA  5062               	movf	?_TI_GetTics^0,w,c
  4301   000DAC  1063               	iorwf	(?_TI_GetTics+1)^0,w,c
  4302   000DAE  1064               	iorwf	(?_TI_GetTics+2)^0,w,c
  4303   000DB0  1065               	iorwf	(?_TI_GetTics+3)^0,w,c
  4304   000DB2  A4D8               	btfss	status,2,c
  4305   000DB4  0012               	return	
  4306                           
  4307                           ;LCD.c: 310:  } while(Busy);
  4308   000DB6  506E               	movf	WaitForBusy@Busy^0,w,c
  4309   000DB8  B4D8               	btfsc	status,2,c
  4310   000DBA  0012               	return	
  4311   000DBC  D7E3               	goto	l2598
  4312   000DBE                     __end_of_WaitForBusy:
  4313                           	callstack 0
  4314                           
  4315 ;; *************** function _Espera *****************
  4316 ;; Defined at:
  4317 ;;		line 244 in file "LCD.c"
  4318 ;; Parameters:    Size  Location     Type
  4319 ;;  Timer           1    wreg     unsigned char 
  4320 ;;  ms              2   12[COMRAM] int 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  Timer           1   20[COMRAM] unsigned char 
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      void 
  4325 ;; Registers used:
  4326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1
  4332 ;;      Params:         2       0       0
  4333 ;;      Locals:         1       0       0
  4334 ;;      Temps:          6       0       0
  4335 ;;      Totals:         9       0       0
  4336 ;;Total ram usage:        9 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; Hardware stack levels required when called: 3
  4339 ;; This function calls:
  4340 ;;		_TI_GetTics
  4341 ;;		_TI_ResetTics
  4342 ;; This function is called by:
  4343 ;;		_LcInit
  4344 ;;		_LcClear
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text26
  4349   000D1A                     __ptext26:
  4350                           	callstack 0
  4351   000D1A                     _Espera:
  4352                           	callstack 25
  4353                           
  4354                           ;incstack = 0
  4355                           ;Espera@Timer stored from wreg
  4356   000D1A  6E76               	movwf	Espera@Timer^0,c
  4357                           
  4358                           ;LCD.c: 245:  TI_ResetTics(Timer);
  4359   000D1C  5076               	movf	Espera@Timer^0,w,c
  4360   000D1E  EC14  F008         	call	_TI_ResetTics
  4361   000D22                     l2680:
  4362   000D22  C06E  F070         	movff	Espera@ms,??_Espera
  4363   000D26  C06F  F071         	movff	Espera@ms+1,??_Espera+1
  4364   000D2A  3A70               	swapf	??_Espera^0,f,c
  4365   000D2C  3A71               	swapf	(??_Espera+1)^0,f,c
  4366   000D2E  0EF0               	movlw	240
  4367   000D30  1671               	andwf	(??_Espera+1)^0,f,c
  4368   000D32  5070               	movf	??_Espera^0,w,c
  4369   000D34  0B0F               	andlw	15
  4370   000D36  1271               	iorwf	(??_Espera+1)^0,f,c
  4371   000D38  0EF0               	movlw	240
  4372   000D3A  1670               	andwf	??_Espera^0,f,c
  4373   000D3C  C070  F072         	movff	??_Espera,??_Espera+2
  4374   000D40  C071  F073         	movff	??_Espera+1,??_Espera+3
  4375   000D44  0E00               	movlw	0
  4376   000D46  BE73               	btfsc	(??_Espera+3)^0,7,c
  4377   000D48  0EFF               	movlw	255
  4378   000D4A  6E74               	movwf	(??_Espera+4)^0,c
  4379   000D4C  6E75               	movwf	(??_Espera+5)^0,c
  4380   000D4E  5076               	movf	Espera@Timer^0,w,c
  4381   000D50  6E62               	movwf	TI_GetTics@TimerHandle^0,c
  4382   000D52  6A63               	clrf	(TI_GetTics@TimerHandle+1)^0,c
  4383   000D54  6A64               	clrf	(TI_GetTics@TimerHandle+2)^0,c
  4384   000D56  6A65               	clrf	(TI_GetTics@TimerHandle+3)^0,c
  4385   000D58  ECDF  F006         	call	_TI_GetTics	;wreg free
  4386   000D5C  5072               	movf	(??_Espera+2)^0,w,c
  4387   000D5E  5C62               	subwf	?_TI_GetTics^0,w,c
  4388   000D60  5073               	movf	(??_Espera+3)^0,w,c
  4389   000D62  5863               	subwfb	(?_TI_GetTics+1)^0,w,c
  4390   000D64  5074               	movf	(??_Espera+4)^0,w,c
  4391   000D66  5864               	subwfb	(?_TI_GetTics+2)^0,w,c
  4392   000D68  5075               	movf	(??_Espera+5)^0,w,c
  4393   000D6A  5865               	subwfb	(?_TI_GetTics+3)^0,w,c
  4394   000D6C  B0D8               	btfsc	status,0,c
  4395   000D6E  0012               	return	
  4396   000D70  D7D8               	goto	l2680
  4397   000D72                     __end_of_Espera:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function _TI_GetTics *****************
  4401 ;; Defined at:
  4402 ;;		line 62 in file "TTIMER.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  TimerHandle     4    0[COMRAM] unsigned long 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  CopiaTicsAct    4    8[COMRAM] unsigned long 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  4    0[COMRAM] unsigned long 
  4409 ;; Registers used:
  4410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1
  4416 ;;      Params:         4       0       0
  4417 ;;      Locals:         4       0       0
  4418 ;;      Temps:          4       0       0
  4419 ;;      Totals:        12       0       0
  4420 ;;Total ram usage:       12 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; Hardware stack levels required when called: 2
  4423 ;; This function calls:
  4424 ;;		Nothing
  4425 ;; This function is called by:
  4426 ;;		_Espera
  4427 ;;		_WaitForBusy
  4428 ;;		_writeCaracter
  4429 ;;		_motorTeclat
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	text27
  4434   000DBE                     __ptext27:
  4435                           	callstack 0
  4436   000DBE                     _TI_GetTics:
  4437                           	callstack 26
  4438                           
  4439                           ;TTIMER.c: 63:     (INTCONbits.GIE = 0); unsigned long CopiaTicsActual=Tics; (INTCONbits
      +                          .GIE = 1);
  4440                           
  4441                           ;incstack = 0
  4442   000DBE  9EF2               	bcf	242,7,c	;volatile
  4443   000DC0  C005  F06A         	movff	_Tics,TI_GetTics@CopiaTicsActual	;volatile
  4444   000DC4  C006  F06B         	movff	_Tics+1,TI_GetTics@CopiaTicsActual+1	;volatile
  4445   000DC8  C007  F06C         	movff	_Tics+2,TI_GetTics@CopiaTicsActual+2	;volatile
  4446   000DCC  C008  F06D         	movff	_Tics+3,TI_GetTics@CopiaTicsActual+3	;volatile
  4447   000DD0  8EF2               	bsf	242,7,c	;volatile
  4448                           
  4449                           ;TTIMER.c: 64:  return (CopiaTicsActual-(Timers[TimerHandle].TicsInicials));
  4450   000DD2  5062               	movf	TI_GetTics@TimerHandle^0,w,c
  4451   000DD4  0D05               	mullw	5
  4452   000DD6  50F3               	movf	243,w,c
  4453   000DD8  0F80               	addlw	low _Timers
  4454   000DDA  6ED9               	movwf	fsr2l,c
  4455   000DDC  6ADA               	clrf	fsr2h,c
  4456   000DDE  CFDE F066          	movff	postinc2,??_TI_GetTics
  4457   000DE2  CFDE F067          	movff	postinc2,??_TI_GetTics+1
  4458   000DE6  CFDE F068          	movff	postinc2,??_TI_GetTics+2
  4459   000DEA  CFDE F069          	movff	postinc2,??_TI_GetTics+3
  4460   000DEE  5066               	movf	??_TI_GetTics^0,w,c
  4461   000DF0  5C6A               	subwf	TI_GetTics@CopiaTicsActual^0,w,c
  4462   000DF2  6E62               	movwf	?_TI_GetTics^0,c
  4463   000DF4  5067               	movf	(??_TI_GetTics+1)^0,w,c
  4464   000DF6  586B               	subwfb	(TI_GetTics@CopiaTicsActual+1)^0,w,c
  4465   000DF8  6E63               	movwf	(?_TI_GetTics+1)^0,c
  4466   000DFA  5068               	movf	(??_TI_GetTics+2)^0,w,c
  4467   000DFC  586C               	subwfb	(TI_GetTics@CopiaTicsActual+2)^0,w,c
  4468   000DFE  6E64               	movwf	(?_TI_GetTics+2)^0,c
  4469   000E00  5069               	movf	(??_TI_GetTics+3)^0,w,c
  4470   000E02  586D               	subwfb	(TI_GetTics@CopiaTicsActual+3)^0,w,c
  4471   000E04  6E65               	movwf	(?_TI_GetTics+3)^0,c
  4472   000E06  0012               	return		;funcret
  4473   000E08                     __end_of_TI_GetTics:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function _EscriuPrimeraOrdre *****************
  4477 ;; Defined at:
  4478 ;;		line 313 in file "LCD.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  ordre           1    wreg     unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  ordre           1    1[COMRAM] unsigned char 
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1
  4492 ;;      Params:         0       0       0
  4493 ;;      Locals:         1       0       0
  4494 ;;      Temps:          1       0       0
  4495 ;;      Totals:         2       0       0
  4496 ;;Total ram usage:        2 bytes
  4497 ;; Hardware stack levels used: 1
  4498 ;; Hardware stack levels required when called: 2
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_LcInit
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text28
  4507   000B72                     __ptext28:
  4508                           	callstack 0
  4509   000B72                     _EscriuPrimeraOrdre:
  4510                           	callstack 27
  4511                           
  4512                           ;incstack = 0
  4513                           ;EscriuPrimeraOrdre@ordre stored from wreg
  4514   000B72  6E63               	movwf	EscriuPrimeraOrdre@ordre^0,c
  4515                           
  4516                           ;LCD.c: 315:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 0); (LATBbits.LATB0 = 0); (LATBbits.LATB1 = 0);
  4517   000B74  9096               	bcf	150,0,c	;volatile
  4518   000B76  9A93               	bcf	147,5,c	;volatile
  4519   000B78  9893               	bcf	147,4,c	;volatile
  4520   000B7A  9693               	bcf	147,3,c	;volatile
  4521   000B7C  908A               	bcf	138,0,c	;volatile
  4522   000B7E  928A               	bcf	138,1,c	;volatile
  4523                           
  4524                           ;LCD.c: 316:  (LATBbits.LATB2 = 1); (LATBbits.LATB2 = 1);
  4525   000B80  848A               	bsf	138,2,c	;volatile
  4526   000B82  848A               	bsf	138,2,c	;volatile
  4527                           
  4528                           ;LCD.c: 317:   (LATEbits.LATE0 = (ordre & 0x08 ? 1 : 0));
  4529   000B84  A663               	btfss	EscriuPrimeraOrdre@ordre^0,3,c
  4530   000B86  D003               	goto	u340
  4531   000B88  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4532   000B8A  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4533   000B8C  D001               	goto	u358
  4534   000B8E                     u340:
  4535   000B8E  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4536   000B90                     u358:
  4537   000B90  508D               	movf	141,w,c	;volatile
  4538   000B92  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4539   000B94  0BFE               	andlw	-2
  4540   000B96  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4541   000B98  6E8D               	movwf	141,c	;volatile
  4542                           
  4543                           ;LCD.c: 318:   (LATBbits.LATB5 = (ordre & 0x04 ? 1 : 0));
  4544   000B9A  A463               	btfss	EscriuPrimeraOrdre@ordre^0,2,c
  4545   000B9C  D003               	goto	u360
  4546   000B9E  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4547   000BA0  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4548   000BA2  D001               	goto	u378
  4549   000BA4                     u360:
  4550   000BA4  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4551   000BA6                     u378:
  4552   000BA6  3A62               	swapf	??_EscriuPrimeraOrdre^0,f,c
  4553   000BA8  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4554   000BAA  508A               	movf	138,w,c	;volatile
  4555   000BAC  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4556   000BAE  0BDF               	andlw	-33
  4557   000BB0  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4558   000BB2  6E8A               	movwf	138,c	;volatile
  4559                           
  4560                           ;LCD.c: 319:   (LATBbits.LATB4 = (ordre & 0x02 ? 1 : 0));
  4561   000BB4  A263               	btfss	EscriuPrimeraOrdre@ordre^0,1,c
  4562   000BB6  D003               	goto	u380
  4563   000BB8  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4564   000BBA  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4565   000BBC  D001               	goto	u398
  4566   000BBE                     u380:
  4567   000BBE  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4568   000BC0                     u398:
  4569   000BC0  3A62               	swapf	??_EscriuPrimeraOrdre^0,f,c
  4570   000BC2  508A               	movf	138,w,c	;volatile
  4571   000BC4  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4572   000BC6  0BEF               	andlw	-17
  4573   000BC8  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4574   000BCA  6E8A               	movwf	138,c	;volatile
  4575                           
  4576                           ;LCD.c: 320:   (LATBbits.LATB3 = (ordre & 0x01 ? 1 : 0));
  4577   000BCC  A063               	btfss	EscriuPrimeraOrdre@ordre^0,0,c
  4578   000BCE  D003               	goto	u400
  4579   000BD0  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4580   000BD2  2A62               	incf	??_EscriuPrimeraOrdre^0,f,c
  4581   000BD4  D001               	goto	u418
  4582   000BD6                     u400:
  4583   000BD6  6A62               	clrf	??_EscriuPrimeraOrdre^0,c
  4584   000BD8                     u418:
  4585   000BD8  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4586   000BDA  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4587   000BDC  4662               	rlncf	??_EscriuPrimeraOrdre^0,f,c
  4588   000BDE  508A               	movf	138,w,c	;volatile
  4589   000BE0  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4590   000BE2  0BF7               	andlw	-9
  4591   000BE4  1862               	xorwf	??_EscriuPrimeraOrdre^0,w,c
  4592   000BE6  6E8A               	movwf	138,c	;volatile
  4593                           
  4594                           ;LCD.c: 321:  (LATBbits.LATB2 = 0);
  4595   000BE8  948A               	bcf	138,2,c	;volatile
  4596   000BEA  0012               	return		;funcret
  4597   000BEC                     __end_of_EscriuPrimeraOrdre:
  4598                           	callstack 0
  4599                           
  4600 ;; *************** function _CantaIR *****************
  4601 ;; Defined at:
  4602 ;;		line 263 in file "LCD.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  IR              1    wreg     unsigned char 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;  IR              1    2[COMRAM] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1
  4616 ;;      Params:         0       0       0
  4617 ;;      Locals:         1       0       0
  4618 ;;      Temps:          0       0       0
  4619 ;;      Totals:         1       0       0
  4620 ;;Total ram usage:        1 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 3
  4623 ;; This function calls:
  4624 ;;		_CantaPartAlta
  4625 ;;		_CantaPartBaixa
  4626 ;; This function is called by:
  4627 ;;		_LcInit
  4628 ;;		_LcClear
  4629 ;;		_LcGotoXY
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text29
  4634   000F78                     __ptext29:
  4635                           	callstack 0
  4636   000F78                     _CantaIR:
  4637                           	callstack 23
  4638                           
  4639                           ;incstack = 0
  4640                           ;CantaIR@IR stored from wreg
  4641   000F78  6E64               	movwf	CantaIR@IR^0,c
  4642                           
  4643                           ;LCD.c: 264:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 0);
  4644   000F7A  9096               	bcf	150,0,c	;volatile
  4645   000F7C  9A93               	bcf	147,5,c	;volatile
  4646   000F7E  9893               	bcf	147,4,c	;volatile
  4647   000F80  9693               	bcf	147,3,c	;volatile
  4648                           
  4649                           ;LCD.c: 265:  (LATBbits.LATB0 = 0);
  4650   000F82  908A               	bcf	138,0,c	;volatile
  4651                           
  4652                           ;LCD.c: 266:  (LATBbits.LATB1 = 0);
  4653   000F84  928A               	bcf	138,1,c	;volatile
  4654                           
  4655                           ;LCD.c: 267:  (LATBbits.LATB2 = 1);
  4656   000F86  848A               	bsf	138,2,c	;volatile
  4657                           
  4658                           ;LCD.c: 268:  CantaPartAlta(IR);
  4659   000F88  5064               	movf	CantaIR@IR^0,w,c
  4660   000F8A  EC2A  F006         	call	_CantaPartAlta
  4661                           
  4662                           ;LCD.c: 269:  (LATBbits.LATB2 = 1);
  4663   000F8E  848A               	bsf	138,2,c	;volatile
  4664                           
  4665                           ;LCD.c: 270:  (LATBbits.LATB2 = 0);
  4666   000F90  948A               	bcf	138,2,c	;volatile
  4667                           
  4668                           ;LCD.c: 271:  (LATBbits.LATB2 = 0);
  4669   000F92  948A               	bcf	138,2,c	;volatile
  4670                           
  4671                           ;LCD.c: 272:  (LATBbits.LATB2 = 1);
  4672   000F94  848A               	bsf	138,2,c	;volatile
  4673                           
  4674                           ;LCD.c: 273:  CantaPartBaixa(IR);
  4675   000F96  5064               	movf	CantaIR@IR^0,w,c
  4676   000F98  ECF6  F005         	call	_CantaPartBaixa
  4677                           
  4678                           ;LCD.c: 274:  (LATBbits.LATB2 = 1);
  4679   000F9C  848A               	bsf	138,2,c	;volatile
  4680                           
  4681                           ;LCD.c: 275:  (LATBbits.LATB2 = 0);
  4682   000F9E  948A               	bcf	138,2,c	;volatile
  4683                           
  4684                           ;LCD.c: 276:  (TRISBbits.TRISB3 = TRISBbits.TRISB4 = TRISBbits.TRISB5 = TRISEbits.TRISE0
      +                           = 1);
  4685   000FA0  8096               	bsf	150,0,c	;volatile
  4686   000FA2  8A93               	bsf	147,5,c	;volatile
  4687   000FA4  8893               	bsf	147,4,c	;volatile
  4688   000FA6  8693               	bsf	147,3,c	;volatile
  4689   000FA8  0012               	return		;funcret
  4690   000FAA                     __end_of_CantaIR:
  4691                           	callstack 0
  4692                           
  4693 ;; *************** function _CantaPartBaixa *****************
  4694 ;; Defined at:
  4695 ;;		line 256 in file "LCD.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  c               1    wreg     unsigned char 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  c               1    1[COMRAM] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1
  4709 ;;      Params:         0       0       0
  4710 ;;      Locals:         1       0       0
  4711 ;;      Temps:          1       0       0
  4712 ;;      Totals:         2       0       0
  4713 ;;Total ram usage:        2 bytes
  4714 ;; Hardware stack levels used: 1
  4715 ;; Hardware stack levels required when called: 2
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_CantaIR
  4720 ;;		_CantaData
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text30
  4725   000BEC                     __ptext30:
  4726                           	callstack 0
  4727   000BEC                     _CantaPartBaixa:
  4728                           	callstack 23
  4729                           
  4730                           ;incstack = 0
  4731                           ;CantaPartBaixa@c stored from wreg
  4732   000BEC  6E63               	movwf	CantaPartBaixa@c^0,c
  4733                           
  4734                           ;LCD.c: 257:   (LATEbits.LATE0 = (c & 0x08 ? 1 : 0));
  4735   000BEE  A663               	btfss	CantaPartBaixa@c^0,3,c
  4736   000BF0  D003               	goto	u1110
  4737   000BF2  6A62               	clrf	??_CantaPartBaixa^0,c
  4738   000BF4  2A62               	incf	??_CantaPartBaixa^0,f,c
  4739   000BF6  D001               	goto	u1128
  4740   000BF8                     u1110:
  4741   000BF8  6A62               	clrf	??_CantaPartBaixa^0,c
  4742   000BFA                     u1128:
  4743   000BFA  508D               	movf	141,w,c	;volatile
  4744   000BFC  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4745   000BFE  0BFE               	andlw	-2
  4746   000C00  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4747   000C02  6E8D               	movwf	141,c	;volatile
  4748                           
  4749                           ;LCD.c: 258:   (LATBbits.LATB5 = (c & 0x04 ? 1 : 0));
  4750   000C04  A463               	btfss	CantaPartBaixa@c^0,2,c
  4751   000C06  D003               	goto	u1130
  4752   000C08  6A62               	clrf	??_CantaPartBaixa^0,c
  4753   000C0A  2A62               	incf	??_CantaPartBaixa^0,f,c
  4754   000C0C  D001               	goto	u1148
  4755   000C0E                     u1130:
  4756   000C0E  6A62               	clrf	??_CantaPartBaixa^0,c
  4757   000C10                     u1148:
  4758   000C10  3A62               	swapf	??_CantaPartBaixa^0,f,c
  4759   000C12  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4760   000C14  508A               	movf	138,w,c	;volatile
  4761   000C16  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4762   000C18  0BDF               	andlw	-33
  4763   000C1A  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4764   000C1C  6E8A               	movwf	138,c	;volatile
  4765                           
  4766                           ;LCD.c: 259:   (LATBbits.LATB4 = (c & 0x02 ? 1 : 0));
  4767   000C1E  A263               	btfss	CantaPartBaixa@c^0,1,c
  4768   000C20  D003               	goto	u1150
  4769   000C22  6A62               	clrf	??_CantaPartBaixa^0,c
  4770   000C24  2A62               	incf	??_CantaPartBaixa^0,f,c
  4771   000C26  D001               	goto	u1168
  4772   000C28                     u1150:
  4773   000C28  6A62               	clrf	??_CantaPartBaixa^0,c
  4774   000C2A                     u1168:
  4775   000C2A  3A62               	swapf	??_CantaPartBaixa^0,f,c
  4776   000C2C  508A               	movf	138,w,c	;volatile
  4777   000C2E  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4778   000C30  0BEF               	andlw	-17
  4779   000C32  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4780   000C34  6E8A               	movwf	138,c	;volatile
  4781                           
  4782                           ;LCD.c: 260:   (LATBbits.LATB3 = (c & 0x01 ? 1 : 0));
  4783   000C36  A063               	btfss	CantaPartBaixa@c^0,0,c
  4784   000C38  D003               	goto	u1170
  4785   000C3A  6A62               	clrf	??_CantaPartBaixa^0,c
  4786   000C3C  2A62               	incf	??_CantaPartBaixa^0,f,c
  4787   000C3E  D001               	goto	u1188
  4788   000C40                     u1170:
  4789   000C40  6A62               	clrf	??_CantaPartBaixa^0,c
  4790   000C42                     u1188:
  4791   000C42  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4792   000C44  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4793   000C46  4662               	rlncf	??_CantaPartBaixa^0,f,c
  4794   000C48  508A               	movf	138,w,c	;volatile
  4795   000C4A  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4796   000C4C  0BF7               	andlw	-9
  4797   000C4E  1862               	xorwf	??_CantaPartBaixa^0,w,c
  4798   000C50  6E8A               	movwf	138,c	;volatile
  4799   000C52  0012               	return		;funcret
  4800   000C54                     __end_of_CantaPartBaixa:
  4801                           	callstack 0
  4802                           
  4803 ;; *************** function _CantaPartAlta *****************
  4804 ;; Defined at:
  4805 ;;		line 249 in file "LCD.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  c               1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  c               1    1[COMRAM] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      void 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/0
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK1
  4819 ;;      Params:         0       0       0
  4820 ;;      Locals:         1       0       0
  4821 ;;      Temps:          1       0       0
  4822 ;;      Totals:         2       0       0
  4823 ;;Total ram usage:        2 bytes
  4824 ;; Hardware stack levels used: 1
  4825 ;; Hardware stack levels required when called: 2
  4826 ;; This function calls:
  4827 ;;		Nothing
  4828 ;; This function is called by:
  4829 ;;		_CantaIR
  4830 ;;		_CantaData
  4831 ;; This function uses a non-reentrant model
  4832 ;;
  4833                           
  4834                           	psect	text31
  4835   000C54                     __ptext31:
  4836                           	callstack 0
  4837   000C54                     _CantaPartAlta:
  4838                           	callstack 23
  4839                           
  4840                           ;incstack = 0
  4841                           ;CantaPartAlta@c stored from wreg
  4842   000C54  6E63               	movwf	CantaPartAlta@c^0,c
  4843                           
  4844                           ;LCD.c: 250:   (LATEbits.LATE0 = (c & 0x80 ? 1 : 0));
  4845   000C56  AE63               	btfss	CantaPartAlta@c^0,7,c
  4846   000C58  D003               	goto	u1030
  4847   000C5A  6A62               	clrf	??_CantaPartAlta^0,c
  4848   000C5C  2A62               	incf	??_CantaPartAlta^0,f,c
  4849   000C5E  D001               	goto	u1048
  4850   000C60                     u1030:
  4851   000C60  6A62               	clrf	??_CantaPartAlta^0,c
  4852   000C62                     u1048:
  4853   000C62  508D               	movf	141,w,c	;volatile
  4854   000C64  1862               	xorwf	??_CantaPartAlta^0,w,c
  4855   000C66  0BFE               	andlw	-2
  4856   000C68  1862               	xorwf	??_CantaPartAlta^0,w,c
  4857   000C6A  6E8D               	movwf	141,c	;volatile
  4858                           
  4859                           ;LCD.c: 251:   (LATBbits.LATB5 = (c & 0x40 ? 1 : 0));
  4860   000C6C  AC63               	btfss	CantaPartAlta@c^0,6,c
  4861   000C6E  D003               	goto	u1050
  4862   000C70  6A62               	clrf	??_CantaPartAlta^0,c
  4863   000C72  2A62               	incf	??_CantaPartAlta^0,f,c
  4864   000C74  D001               	goto	u1068
  4865   000C76                     u1050:
  4866   000C76  6A62               	clrf	??_CantaPartAlta^0,c
  4867   000C78                     u1068:
  4868   000C78  3A62               	swapf	??_CantaPartAlta^0,f,c
  4869   000C7A  4662               	rlncf	??_CantaPartAlta^0,f,c
  4870   000C7C  508A               	movf	138,w,c	;volatile
  4871   000C7E  1862               	xorwf	??_CantaPartAlta^0,w,c
  4872   000C80  0BDF               	andlw	-33
  4873   000C82  1862               	xorwf	??_CantaPartAlta^0,w,c
  4874   000C84  6E8A               	movwf	138,c	;volatile
  4875                           
  4876                           ;LCD.c: 252:   (LATBbits.LATB4 = (c & 0x20 ? 1 : 0));
  4877   000C86  AA63               	btfss	CantaPartAlta@c^0,5,c
  4878   000C88  D003               	goto	u1070
  4879   000C8A  6A62               	clrf	??_CantaPartAlta^0,c
  4880   000C8C  2A62               	incf	??_CantaPartAlta^0,f,c
  4881   000C8E  D001               	goto	u1088
  4882   000C90                     u1070:
  4883   000C90  6A62               	clrf	??_CantaPartAlta^0,c
  4884   000C92                     u1088:
  4885   000C92  3A62               	swapf	??_CantaPartAlta^0,f,c
  4886   000C94  508A               	movf	138,w,c	;volatile
  4887   000C96  1862               	xorwf	??_CantaPartAlta^0,w,c
  4888   000C98  0BEF               	andlw	-17
  4889   000C9A  1862               	xorwf	??_CantaPartAlta^0,w,c
  4890   000C9C  6E8A               	movwf	138,c	;volatile
  4891                           
  4892                           ;LCD.c: 253:   (LATBbits.LATB3 = (c & 0x10 ? 1 : 0));
  4893   000C9E  A863               	btfss	CantaPartAlta@c^0,4,c
  4894   000CA0  D003               	goto	u1090
  4895   000CA2  6A62               	clrf	??_CantaPartAlta^0,c
  4896   000CA4  2A62               	incf	??_CantaPartAlta^0,f,c
  4897   000CA6  D001               	goto	u1108
  4898   000CA8                     u1090:
  4899   000CA8  6A62               	clrf	??_CantaPartAlta^0,c
  4900   000CAA                     u1108:
  4901   000CAA  4662               	rlncf	??_CantaPartAlta^0,f,c
  4902   000CAC  4662               	rlncf	??_CantaPartAlta^0,f,c
  4903   000CAE  4662               	rlncf	??_CantaPartAlta^0,f,c
  4904   000CB0  508A               	movf	138,w,c	;volatile
  4905   000CB2  1862               	xorwf	??_CantaPartAlta^0,w,c
  4906   000CB4  0BF7               	andlw	-9
  4907   000CB6  1862               	xorwf	??_CantaPartAlta^0,w,c
  4908   000CB8  6E8A               	movwf	138,c	;volatile
  4909   000CBA  0012               	return		;funcret
  4910   000CBC                     __end_of_CantaPartAlta:
  4911                           	callstack 0
  4912                           
  4913 ;; *************** function _InitconfOsc *****************
  4914 ;; Defined at:
  4915 ;;		line 28 in file "newmain.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;		None
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMRAM   BANK0   BANK1
  4929 ;;      Params:         0       0       0
  4930 ;;      Locals:         0       0       0
  4931 ;;      Temps:          0       0       0
  4932 ;;      Totals:         0       0       0
  4933 ;;Total ram usage:        0 bytes
  4934 ;; Hardware stack levels used: 1
  4935 ;; Hardware stack levels required when called: 2
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_main
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text32
  4944   0010F2                     __ptext32:
  4945                           	callstack 0
  4946   0010F2                     _InitconfOsc:
  4947                           	callstack 28
  4948                           
  4949                           ;incstack = 0
  4950   0010F2  0E60               	movlw	96
  4951   0010F4  6ED3               	movwf	211,c	;volatile
  4952   0010F6  0E40               	movlw	64
  4953   0010F8  6E9B               	movwf	155,c	;volatile
  4954   0010FA  0012               	return		;funcret
  4955   0010FC                     __end_of_InitconfOsc:
  4956                           	callstack 0
  4957                           
  4958 ;; *************** function _InitAltaveu *****************
  4959 ;; Defined at:
  4960 ;;		line 19 in file "TALTAVEU.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;		None
  4963 ;; Auto vars:     Size  Location     Type
  4964 ;;		None
  4965 ;; Return value:  Size  Location     Type
  4966 ;;                  1    wreg      void 
  4967 ;; Registers used:
  4968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4969 ;; Tracked objects:
  4970 ;;		On entry : 0/0
  4971 ;;		On exit  : 0/0
  4972 ;;		Unchanged: 0/0
  4973 ;; Data sizes:     COMRAM   BANK0   BANK1
  4974 ;;      Params:         0       0       0
  4975 ;;      Locals:         0       0       0
  4976 ;;      Temps:          0       0       0
  4977 ;;      Totals:         0       0       0
  4978 ;;Total ram usage:        0 bytes
  4979 ;; Hardware stack levels used: 1
  4980 ;; Hardware stack levels required when called: 3
  4981 ;; This function calls:
  4982 ;;		_TI_NewTimer
  4983 ;;		_TI_ResetTics
  4984 ;; This function is called by:
  4985 ;;		_main
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text33
  4990   001002                     __ptext33:
  4991                           	callstack 0
  4992   001002                     _InitAltaveu:
  4993                           	callstack 27
  4994                           
  4995                           ;TALTAVEU.c: 20:     TRISEbits.TRISE2 = 0;
  4996                           
  4997                           ;incstack = 0
  4998   001002  9496               	bcf	150,2,c	;volatile
  4999                           
  5000                           ;TALTAVEU.c: 21:     LATEbits.LATE2 = 0;
  5001   001004  948D               	bcf	141,2,c	;volatile
  5002                           
  5003                           ;TALTAVEU.c: 22:     TI_NewTimer(&TimerTiempoNota);
  5004   001006  0E5B               	movlw	low _TimerTiempoNota
  5005   001008  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  5006   00100A  EC48  F007         	call	_TI_NewTimer	;wreg free
  5007                           
  5008                           ;TALTAVEU.c: 23:     TI_ResetTics (TimerTiempoNota);
  5009   00100E  505B               	movf	_TimerTiempoNota^0,w,c
  5010   001010  EC14  F008         	call	_TI_ResetTics
  5011                           
  5012                           ;TALTAVEU.c: 24:     TI_NewTimer(&TimerMelody);
  5013   001014  0E5A               	movlw	low _TimerMelody
  5014   001016  6E62               	movwf	TI_NewTimer@TimerHandle^0,c
  5015   001018  EC48  F007         	call	_TI_NewTimer	;wreg free
  5016                           
  5017                           ;TALTAVEU.c: 25:     TI_ResetTics (TimerMelody);
  5018   00101C  505A               	movf	_TimerMelody^0,w,c
  5019   00101E  EC14  F008         	call	_TI_ResetTics
  5020                           
  5021                           ;TALTAVEU.c: 26:     p = 2;
  5022   001022  0E02               	movlw	2
  5023   001024  6E37               	movwf	_p^0,c
  5024   001026  0012               	return		;funcret
  5025   001028                     __end_of_InitAltaveu:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _TI_ResetTics *****************
  5029 ;; Defined at:
  5030 ;;		line 57 in file "TTIMER.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  TimerHandle     1    wreg     unsigned char 
  5033 ;; Auto vars:     Size  Location     Type
  5034 ;;  TimerHandle     1    0[COMRAM] unsigned char 
  5035 ;; Return value:  Size  Location     Type
  5036 ;;                  1    wreg      void 
  5037 ;; Registers used:
  5038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5039 ;; Tracked objects:
  5040 ;;		On entry : 0/0
  5041 ;;		On exit  : 0/0
  5042 ;;		Unchanged: 0/0
  5043 ;; Data sizes:     COMRAM   BANK0   BANK1
  5044 ;;      Params:         0       0       0
  5045 ;;      Locals:         1       0       0
  5046 ;;      Temps:          0       0       0
  5047 ;;      Totals:         1       0       0
  5048 ;;Total ram usage:        1 bytes
  5049 ;; Hardware stack levels used: 1
  5050 ;; Hardware stack levels required when called: 2
  5051 ;; This function calls:
  5052 ;;		Nothing
  5053 ;; This function is called by:
  5054 ;;		_Espera
  5055 ;;		_WaitForBusy
  5056 ;;		_Menu_Init
  5057 ;;		_initTeclat
  5058 ;;		_motorTeclat
  5059 ;;		_InitAltaveu
  5060 ;;		_initMicro
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text34
  5065   001028                     __ptext34:
  5066                           	callstack 0
  5067   001028                     _TI_ResetTics:
  5068                           	callstack 24
  5069                           
  5070                           ;incstack = 0
  5071                           ;TI_ResetTics@TimerHandle stored from wreg
  5072   001028  6E62               	movwf	TI_ResetTics@TimerHandle^0,c
  5073                           
  5074                           ;TTIMER.c: 58:  (INTCONbits.GIE = 0); Timers[TimerHandle].TicsInicials=Tics; (INTCONbits
      +                          .GIE = 1);
  5075   00102A  9EF2               	bcf	242,7,c	;volatile
  5076   00102C  5062               	movf	TI_ResetTics@TimerHandle^0,w,c
  5077   00102E  0D05               	mullw	5
  5078   001030  50F3               	movf	243,w,c
  5079   001032  0F80               	addlw	low _Timers
  5080   001034  6ED9               	movwf	fsr2l,c
  5081   001036  6ADA               	clrf	fsr2h,c
  5082   001038  C005  FFDE         	movff	_Tics,postinc2	;volatile
  5083   00103C  C006  FFDE         	movff	_Tics+1,postinc2	;volatile
  5084   001040  C007  FFDE         	movff	_Tics+2,postinc2	;volatile
  5085   001044  C008  FFDE         	movff	_Tics+3,postinc2	;volatile
  5086   001048  8EF2               	bsf	242,7,c	;volatile
  5087   00104A  0012               	return		;funcret
  5088   00104C                     __end_of_TI_ResetTics:
  5089                           	callstack 0
  5090                           
  5091 ;; *************** function _TI_NewTimer *****************
  5092 ;; Defined at:
  5093 ;;		line 47 in file "TTIMER.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;  TimerHandle     1    0[COMRAM] PTR unsigned char 
  5096 ;;		 -> TimerRecordingADC(1), TimerMelody(1), TimerTiempoNota(1), TimerCurrentTime(4), 
  5097 ;;		 -> Timer1S(1), TimerRebots(1), timer_2s(1), TimerRecording(1), 
  5098 ;;		 -> TimerMarquesina(1), Timer(1), 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  Comptador       1    2[COMRAM] unsigned char 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      unsigned char 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1
  5110 ;;      Params:         1       0       0
  5111 ;;      Locals:         1       0       0
  5112 ;;      Temps:          1       0       0
  5113 ;;      Totals:         3       0       0
  5114 ;;Total ram usage:        3 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 2
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_LcInit
  5121 ;;		_Menu_Init
  5122 ;;		_initTeclat
  5123 ;;		_InitAltaveu
  5124 ;;		_initMicro
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           	psect	text35
  5129   000E90                     __ptext35:
  5130                           	callstack 0
  5131   000E90                     _TI_NewTimer:
  5132                           	callstack 27
  5133                           
  5134                           ;TTIMER.c: 48:  unsigned char Comptador=0;
  5135                           
  5136                           ;incstack = 0
  5137   000E90  0E00               	movlw	0
  5138   000E92  6E64               	movwf	TI_NewTimer@Comptador^0,c
  5139                           
  5140                           ;TTIMER.c: 49:  while (Timers[Comptador].Busy==1) {
  5141   000E94  D005               	goto	l2726
  5142   000E96                     l2722:
  5143                           
  5144                           ;TTIMER.c: 50:   if (++Comptador == 9) return (0);
  5145   000E96  2A64               	incf	TI_NewTimer@Comptador^0,f,c
  5146   000E98  0E09               	movlw	9
  5147   000E9A  1864               	xorwf	TI_NewTimer@Comptador^0,w,c
  5148   000E9C  B4D8               	btfsc	status,2,c
  5149   000E9E  0012               	return	
  5150   000EA0                     l2726:
  5151                           
  5152                           ;TTIMER.c: 49:  while (Timers[Comptador].Busy==1) {
  5153   000EA0  5064               	movf	TI_NewTimer@Comptador^0,w,c
  5154   000EA2  0D05               	mullw	5
  5155   000EA4  50F3               	movf	243,w,c
  5156   000EA6  0F84               	addlw	low (_Timers+4)
  5157   000EA8  6ED9               	movwf	fsr2l,c
  5158   000EAA  6ADA               	clrf	fsr2h,c
  5159   000EAC  04DE               	decf	postinc2,w,c
  5160   000EAE  B4D8               	btfsc	status,2,c
  5161   000EB0  D7F2               	goto	l2722
  5162                           
  5163                           ;TTIMER.c: 52:  Timers[Comptador].Busy=1;
  5164   000EB2  5064               	movf	TI_NewTimer@Comptador^0,w,c
  5165   000EB4  0D05               	mullw	5
  5166   000EB6  50F3               	movf	243,w,c
  5167   000EB8  0F84               	addlw	low (_Timers+4)
  5168   000EBA  6ED9               	movwf	fsr2l,c
  5169   000EBC  6ADA               	clrf	fsr2h,c
  5170   000EBE  0E01               	movlw	1
  5171   000EC0  6EDF               	movwf	indf2,c
  5172                           
  5173                           ;TTIMER.c: 53:  *TimerHandle=Comptador;
  5174   000EC2  5062               	movf	TI_NewTimer@TimerHandle^0,w,c
  5175   000EC4  6ED9               	movwf	fsr2l,c
  5176   000EC6  6ADA               	clrf	fsr2h,c
  5177   000EC8  C064  FFDF         	movff	TI_NewTimer@Comptador,indf2
  5178   000ECC  0012               	return		;funcret
  5179   000ECE                     __end_of_TI_NewTimer:
  5180                           	callstack 0
  5181                           
  5182 ;; *************** function _ADC_Init *****************
  5183 ;; Defined at:
  5184 ;;		line 13 in file "TJOYSTICK.c"
  5185 ;; Parameters:    Size  Location     Type
  5186 ;;		None
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;		None
  5189 ;; Return value:  Size  Location     Type
  5190 ;;                  1    wreg      void 
  5191 ;; Registers used:
  5192 ;;		wreg, status,2
  5193 ;; Tracked objects:
  5194 ;;		On entry : 0/0
  5195 ;;		On exit  : 0/0
  5196 ;;		Unchanged: 0/0
  5197 ;; Data sizes:     COMRAM   BANK0   BANK1
  5198 ;;      Params:         0       0       0
  5199 ;;      Locals:         0       0       0
  5200 ;;      Temps:          0       0       0
  5201 ;;      Totals:         0       0       0
  5202 ;;Total ram usage:        0 bytes
  5203 ;; Hardware stack levels used: 1
  5204 ;; Hardware stack levels required when called: 2
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_main
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text36
  5213   0010CA                     __ptext36:
  5214                           	callstack 0
  5215   0010CA                     _ADC_Init:
  5216                           	callstack 28
  5217                           
  5218                           ;TJOYSTICK.c: 14:     TRISAbits.TRISA1 = 1;
  5219                           
  5220                           ;incstack = 0
  5221   0010CA  8292               	bsf	146,1,c	;volatile
  5222                           
  5223                           ;TJOYSTICK.c: 15:  ADCON0 = 0x05;
  5224   0010CC  0E05               	movlw	5
  5225   0010CE  6EC2               	movwf	194,c	;volatile
  5226                           
  5227                           ;TJOYSTICK.c: 16:  ADCON1 = 0x0C;
  5228   0010D0  0E0C               	movlw	12
  5229   0010D2  6EC1               	movwf	193,c	;volatile
  5230                           
  5231                           ;TJOYSTICK.c: 17:  ADCON2 = 0x09;
  5232   0010D4  0E09               	movlw	9
  5233   0010D6  6EC0               	movwf	192,c	;volatile
  5234   0010D8  0012               	return		;funcret
  5235   0010DA                     __end_of_ADC_Init:
  5236                           	callstack 0
  5237                           
  5238 ;; *************** function _my_interrupts *****************
  5239 ;; Defined at:
  5240 ;;		line 23 in file "newmain.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, status,2, status,0, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMRAM   BANK0   BANK1
  5254 ;;      Params:         0       0       0
  5255 ;;      Locals:         0       0       0
  5256 ;;      Temps:          0       0       0
  5257 ;;      Totals:         0       0       0
  5258 ;;Total ram usage:        0 bytes
  5259 ;; Hardware stack levels used: 1
  5260 ;; Hardware stack levels required when called: 1
  5261 ;; This function calls:
  5262 ;;		_RSI_Timer0
  5263 ;; This function is called by:
  5264 ;;		Interrupt level 2
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	intcode
  5269   000008                     __pintcode:
  5270                           	callstack 0
  5271   000008                     _my_interrupts:
  5272                           	callstack 23
  5273                           
  5274                           ;incstack = 0
  5275   000008  827F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5276   00000A  EC50  F008         	call	_RSI_Timer0	;wreg free
  5277   00000E  927F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5278   000010  0011               	retfie		f
  5279   000012                     __end_of_my_interrupts:
  5280                           	callstack 0
  5281                           
  5282 ;; *************** function _RSI_Timer0 *****************
  5283 ;; Defined at:
  5284 ;;		line 25 in file "TTIMER.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  1    wreg      void 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1
  5298 ;;      Params:         0       0       0
  5299 ;;      Locals:         0       0       0
  5300 ;;      Temps:          0       0       0
  5301 ;;      Totals:         0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_my_interrupts
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text38
  5312   0010A0                     __ptext38:
  5313                           	callstack 0
  5314   0010A0                     _RSI_Timer0:
  5315                           	callstack 23
  5316                           
  5317                           ;TTIMER.c: 27:     TMR0 = 64536;
  5318                           
  5319                           ;incstack = 0
  5320   0010A0  0EFC               	movlw	252
  5321   0010A2  6ED7               	movwf	215,c	;volatile
  5322   0010A4  0E18               	movlw	24
  5323   0010A6  6ED6               	movwf	214,c	;volatile
  5324                           
  5325                           ;TTIMER.c: 28:     TMR0IF = 0;
  5326   0010A8  94F2               	bcf	4082,2,c	;volatile
  5327                           
  5328                           ;TTIMER.c: 29:     Tics++;
  5329   0010AA  0E01               	movlw	1
  5330   0010AC  2605               	addwf	_Tics^0,f,c	;volatile
  5331   0010AE  0E00               	movlw	0
  5332   0010B0  2206               	addwfc	(_Tics+1)^0,f,c	;volatile
  5333   0010B2  2207               	addwfc	(_Tics+2)^0,f,c	;volatile
  5334   0010B4  2208               	addwfc	(_Tics+3)^0,f,c	;volatile
  5335   0010B6  0012               	return		;funcret
  5336   0010B8                     __end_of_RSI_Timer0:
  5337                           	callstack 0
  5338                           
  5339                           	psect	rparam
  5340   000000                     
  5341                           	psect	temp
  5342   00007F                     btemp:
  5343                           	callstack 0
  5344   00007F                     	ds	1
  5345   000000                     int$flags	set	btemp
  5346   000000                     wtemp8	set	btemp+1
  5347   000000                     ttemp5	set	btemp+1
  5348   000000                     ttemp6	set	btemp+4
  5349   000000                     ttemp7	set	btemp+8
  5350                           
  5351                           	psect	idloc
  5352                           
  5353                           ;Config register IDLOC0 @ 0x200000
  5354                           ;	unspecified, using default values
  5355   200000                     	org	2097152
  5356   200000  FF                 	db	255
  5357                           
  5358                           ;Config register IDLOC1 @ 0x200001
  5359                           ;	unspecified, using default values
  5360   200001                     	org	2097153
  5361   200001  FF                 	db	255
  5362                           
  5363                           ;Config register IDLOC2 @ 0x200002
  5364                           ;	unspecified, using default values
  5365   200002                     	org	2097154
  5366   200002  FF                 	db	255
  5367                           
  5368                           ;Config register IDLOC3 @ 0x200003
  5369                           ;	unspecified, using default values
  5370   200003                     	org	2097155
  5371   200003  FF                 	db	255
  5372                           
  5373                           ;Config register IDLOC4 @ 0x200004
  5374                           ;	unspecified, using default values
  5375   200004                     	org	2097156
  5376   200004  FF                 	db	255
  5377                           
  5378                           ;Config register IDLOC5 @ 0x200005
  5379                           ;	unspecified, using default values
  5380   200005                     	org	2097157
  5381   200005  FF                 	db	255
  5382                           
  5383                           ;Config register IDLOC6 @ 0x200006
  5384                           ;	unspecified, using default values
  5385   200006                     	org	2097158
  5386   200006  FF                 	db	255
  5387                           
  5388                           ;Config register IDLOC7 @ 0x200007
  5389                           ;	unspecified, using default values
  5390   200007                     	org	2097159
  5391   200007  FF                 	db	255
  5392                           
  5393                           	psect	config
  5394                           
  5395                           ; Padding undefined space
  5396   300000                     	org	3145728
  5397   300000  FF                 	db	255
  5398                           
  5399                           ;Config register CONFIG1H @ 0x300001
  5400                           ;	Oscillator
  5401                           ;	OSC = INTIO1, Internal oscillator block, CLKO function on RA6, port function on RA7
  5402                           ;	Fail-Safe Clock Monitor Enable bit
  5403                           ;	FCMEN = 0x0, unprogrammed default
  5404                           ;	Internal/External Oscillator Switchover bit
  5405                           ;	IESO = 0x0, unprogrammed default
  5406   300001                     	org	3145729
  5407   300001  09                 	db	9
  5408                           
  5409                           ;Config register CONFIG2L @ 0x300002
  5410                           ;	Power-up Timer Enable bit
  5411                           ;	PWRT = OFF, PWRT disabled
  5412                           ;	Brown-out Reset Enable bits
  5413                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5414                           ;	Brown-out Reset Voltage bits
  5415                           ;	BORV = 0x3, unprogrammed default
  5416   300002                     	org	3145730
  5417   300002  19                 	db	25
  5418                           
  5419                           ;Config register CONFIG2H @ 0x300003
  5420                           ;	Watchdog Timer Enable bit
  5421                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5422                           ;	Watchdog Timer Postscale Select bits
  5423                           ;	WDTPS = 0xF, unprogrammed default
  5424   300003                     	org	3145731
  5425   300003  1E                 	db	30
  5426                           
  5427                           ; Padding undefined space
  5428   300004                     	org	3145732
  5429   300004  FF                 	db	255
  5430                           
  5431                           ;Config register CONFIG3H @ 0x300005
  5432                           ;	CCP2 MUX bit
  5433                           ;	CCP2MX = 0x1, unprogrammed default
  5434                           ;	PORTB A/D Enable bit
  5435                           ;	PBADEN = DIG, PORTB<4:0> pins are configured as digital I/O on Reset
  5436                           ;	Low-Power Timer1 Oscillator Enable bit
  5437                           ;	LPT1OSC = 0x0, unprogrammed default
  5438                           ;	MCLR Pin Enable bit
  5439                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5440   300005                     	org	3145733
  5441   300005  01                 	db	1
  5442                           
  5443                           ;Config register CONFIG4L @ 0x300006
  5444                           ;	Stack Full/Underflow Reset Enable bit
  5445                           ;	STVREN = 0x1, unprogrammed default
  5446                           ;	Single-Supply ICSP Enable bit
  5447                           ;	LVP = OFF, Single-Supply ICSP disabled
  5448                           ;	Boot Block Size Select bits
  5449                           ;	BBSIZ = 0x0, unprogrammed default
  5450                           ;	Extended Instruction Set Enable bit
  5451                           ;	XINST = 0x0, unprogrammed default
  5452                           ;	Background Debugger Enable bit
  5453                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5454   300006                     	org	3145734
  5455   300006  81                 	db	129
  5456                           
  5457                           ; Padding undefined space
  5458   300007                     	org	3145735
  5459   300007  FF                 	db	255
  5460                           
  5461                           ;Config register CONFIG5L @ 0x300008
  5462                           ;	unspecified, using default values
  5463                           ;	Code Protection bit
  5464                           ;	CP0 = 0x1, unprogrammed default
  5465                           ;	Code Protection bit
  5466                           ;	CP1 = 0x1, unprogrammed default
  5467   300008                     	org	3145736
  5468   300008  03                 	db	3
  5469                           
  5470                           ;Config register CONFIG5H @ 0x300009
  5471                           ;	unspecified, using default values
  5472                           ;	Boot Block Code Protection bitProtect Boot
  5473                           ;	CPB = 0x1, unprogrammed default
  5474                           ;	Data EEPROM Code Protection bit
  5475                           ;	CPD = 0x1, unprogrammed default
  5476   300009                     	org	3145737
  5477   300009  C0                 	db	192
  5478                           
  5479                           ;Config register CONFIG6L @ 0x30000A
  5480                           ;	unspecified, using default values
  5481                           ;	Write Protection bit
  5482                           ;	WRT0 = 0x1, unprogrammed default
  5483                           ;	Write Protection bit
  5484                           ;	WRT1 = 0x1, unprogrammed default
  5485   30000A                     	org	3145738
  5486   30000A  03                 	db	3
  5487                           
  5488                           ;Config register CONFIG6H @ 0x30000B
  5489                           ;	unspecified, using default values
  5490                           ;	Configuration Register Write Protection bit
  5491                           ;	WRTC = 0x1, unprogrammed default
  5492                           ;	Boot Block Write Protection bit
  5493                           ;	WRTB = 0x1, unprogrammed default
  5494                           ;	Data EEPROM Write Protection bit
  5495                           ;	WRTD = 0x1, unprogrammed default
  5496   30000B                     	org	3145739
  5497   30000B  E0                 	db	224
  5498                           
  5499                           ;Config register CONFIG7L @ 0x30000C
  5500                           ;	unspecified, using default values
  5501                           ;	Table Read Protection bit
  5502                           ;	EBTR0 = 0x1, unprogrammed default
  5503                           ;	Table Read Protection bit
  5504                           ;	EBTR1 = 0x1, unprogrammed default
  5505   30000C                     	org	3145740
  5506   30000C  03                 	db	3
  5507                           
  5508                           ;Config register CONFIG7H @ 0x30000D
  5509                           ;	unspecified, using default values
  5510                           ;	Boot Block Table Read Protection bit
  5511                           ;	EBTRB = 0x1, unprogrammed default
  5512   30000D                     	org	3145741
  5513   30000D  40                 	db	64
  5514                           tosu	equ	0xFFF
  5515                           tosh	equ	0xFFE
  5516                           tosl	equ	0xFFD
  5517                           stkptr	equ	0xFFC
  5518                           pclatu	equ	0xFFB
  5519                           pclath	equ	0xFFA
  5520                           pcl	equ	0xFF9
  5521                           tblptru	equ	0xFF8
  5522                           tblptrh	equ	0xFF7
  5523                           tblptrl	equ	0xFF6
  5524                           tablat	equ	0xFF5
  5525                           prodh	equ	0xFF4
  5526                           prodl	equ	0xFF3
  5527                           indf0	equ	0xFEF
  5528                           postinc0	equ	0xFEE
  5529                           postdec0	equ	0xFED
  5530                           preinc0	equ	0xFEC
  5531                           plusw0	equ	0xFEB
  5532                           fsr0h	equ	0xFEA
  5533                           fsr0l	equ	0xFE9
  5534                           wreg	equ	0xFE8
  5535                           indf1	equ	0xFE7
  5536                           postinc1	equ	0xFE6
  5537                           postdec1	equ	0xFE5
  5538                           preinc1	equ	0xFE4
  5539                           plusw1	equ	0xFE3
  5540                           fsr1h	equ	0xFE2
  5541                           fsr1l	equ	0xFE1
  5542                           bsr	equ	0xFE0
  5543                           indf2	equ	0xFDF
  5544                           postinc2	equ	0xFDE
  5545                           postdec2	equ	0xFDD
  5546                           preinc2	equ	0xFDC
  5547                           plusw2	equ	0xFDB
  5548                           fsr2h	equ	0xFDA
  5549                           fsr2l	equ	0xFD9
  5550                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    48
    Data        188
    BSS         220
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     27     126
    BANK0           128      0     123
    BANK1           256      0     186

Pointer List with Targets:

    MyPutString@frase	PTR unsigned char  size(1) Largest target is 14
		 -> STR_4(CODE[14]), STR_3(CODE[11]), STR_2(CODE[10]), STR_1(CODE[11]), 

    TI_NewTimer@TimerHandle	PTR unsigned char  size(1) Largest target is 4
		 -> TimerRecordingADC(COMRAM[1]), TimerMelody(COMRAM[1]), TimerTiempoNota(COMRAM[1]), TimerCurrentTime(BANK0[4]), 
		 -> Timer1S(COMRAM[1]), TimerRebots(COMRAM[1]), timer_2s(COMRAM[1]), TimerRecording(COMRAM[1]), 
		 -> TimerMarquesina(COMRAM[1]), Timer(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_motorMenu
    _motorTeclat->_writeCaracter
    _writeCaracter->_LcPutChar
    _motorMenu->_MyPutString
    _MyPutString->_LcPutChar
    _LcPutChar->_LcGotoXY
    _LcGotoXY->_WaitForBusy
    _CantaData->_CantaPartAlta
    _CantaData->_CantaPartBaixa
    _LcClear->_Espera
    _initTeclat->_TI_NewTimer
    _initMicro->_TI_NewTimer
    _Menu_Init->_TI_NewTimer
    _LcInit->_Espera
    _WaitForBusy->_TI_GetTics
    _Espera->_TI_GetTics
    _CantaIR->_CantaPartAlta
    _CantaIR->_CantaPartBaixa
    _InitAltaveu->_TI_NewTimer

Critical Paths under _my_interrupts in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_interrupts in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_interrupts in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27786
                           _ADC_Init
                        _InitAltaveu
                        _InitconfOsc
                           _LcGotoXY
                             _LcInit
                          _Menu_Init
                            _TI_Init
                         _initEEPROM
                          _initMicro
                         _initTeclat
                           _motorJoy
                          _motorMenu
                        _motorTeclat
                            _sioInit
 ---------------------------------------------------------------------------------
 (1) _sioInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorTeclat                                          2     2      0    8311
                                             24 COMRAM     2     2      0
                    _Getflag_TTeclat
                         _TI_GetTics
                       _TI_ResetTics
                _comprovaHiHaColumna
                          _saveTecla
                           _setFiles
                     _waitTeclaTreta
                      _writeCaracter
 ---------------------------------------------------------------------------------
 (2) _writeCaracter                                        2     2      0    7209
                                             22 COMRAM     2     2      0
                           _LcGotoXY
                          _LcPutChar
                         _TI_GetTics
 ---------------------------------------------------------------------------------
 (2) _waitTeclaTreta                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setFiles                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _saveTecla                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _comprovaHiHaColumna                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Getflag_TTeclat                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motorMenu                                            2     2      0    9465
                                             25 COMRAM     2     2      0
                            _LcClear
                           _LcGotoXY
                        _MyPutString
                _getCaractersEscrits
                          _getEspera
                       _getTowerName
 ---------------------------------------------------------------------------------
 (2) _getTowerName                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _getEspera                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _getCaractersEscrits                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyPutString                                          3     2      1    4105
                                             22 COMRAM     3     2      1
                          _LcPutChar
 ---------------------------------------------------------------------------------
 (3) _LcPutChar                                            1     1      0    3748
                                             21 COMRAM     1     1      0
                          _CantaData
                           _LcGotoXY
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _LcGotoXY                                             8     7      1    2469
                                             13 COMRAM     8     7      1
                            _CantaIR
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _CantaData                                            1     1      0     220
                                              2 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (2) _LcClear                                              0     0      0    2869
                            _CantaIR
                             _Espera
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (1) _motorJoy                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initTeclat                                           0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (1) _initMicro                                            0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (1) _initEEPROM                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TI_Init                                              1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Menu_Init                                            0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (1) _LcInit                                               4     3      1    3953
                                             21 COMRAM     4     3      1
                            _CantaIR
                 _EscriuPrimeraOrdre
                             _Espera
                        _TI_NewTimer
                        _WaitForBusy
 ---------------------------------------------------------------------------------
 (4) _WaitForBusy                                          1     1      0    1037
                                             12 COMRAM     1     1      0
                         _TI_GetTics
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (3) _Espera                                               9     7      2    1612
                                             12 COMRAM     9     7      2
                         _TI_GetTics
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (3) _TI_GetTics                                          12     8      4     992
                                              0 COMRAM    12     8      4
 ---------------------------------------------------------------------------------
 (2) _EscriuPrimeraOrdre                                   2     2      0      60
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _CantaIR                                              1     1      0     220
                                              2 COMRAM     1     1      0
                      _CantaPartAlta
                     _CantaPartBaixa
 ---------------------------------------------------------------------------------
 (6) _CantaPartBaixa                                       2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _CantaPartAlta                                        2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _InitconfOsc                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitAltaveu                                          0     0      0     880
                        _TI_NewTimer
                       _TI_ResetTics
 ---------------------------------------------------------------------------------
 (5) _TI_ResetTics                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _TI_NewTimer                                          3     2      1     858
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _my_interrupts                                        0     0      0       0
                         _RSI_Timer0
 ---------------------------------------------------------------------------------
 (8) _RSI_Timer0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _InitAltaveu
     _TI_NewTimer
     _TI_ResetTics
   _InitconfOsc
   _LcGotoXY
     _CantaIR
       _CantaPartAlta
       _CantaPartBaixa
     _WaitForBusy
       _TI_GetTics
       _TI_ResetTics
   _LcInit
     _CantaIR
     _EscriuPrimeraOrdre
     _Espera
       _TI_GetTics
       _TI_ResetTics
     _TI_NewTimer
     _WaitForBusy
   _Menu_Init
     _TI_NewTimer
     _TI_ResetTics
   _TI_Init
   _initEEPROM
   _initMicro
     _TI_NewTimer
     _TI_ResetTics
   _initTeclat
     _TI_NewTimer
     _TI_ResetTics
   _motorJoy
   _motorMenu
     _LcClear
       _CantaIR
       _Espera
       _WaitForBusy
     _LcGotoXY
     _MyPutString
       _LcPutChar
         _CantaData
           _CantaPartAlta
           _CantaPartBaixa
         _LcGotoXY
         _WaitForBusy
     _getCaractersEscrits
     _getEspera
     _getTowerName
   _motorTeclat
     _Getflag_TTeclat
     _TI_GetTics
     _TI_ResetTics
     _comprovaHiHaColumna
     _saveTecla
     _setFiles
     _waitTeclaTreta
     _writeCaracter
       _LcGotoXY
       _LcPutChar
       _TI_GetTics
   _sioInit

 _my_interrupts (ROOT)
   _RSI_Timer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      BA       7       72.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      7B       5       96.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     1B      7E       1      100.0%
BITBIGSFRhl         1A      0       0       9        0.0%
BITBIGSFRlhhlhh      E      0       0      11        0.0%
BITBIGSFRhh          D      0       0       8        0.0%
BITBIGSFRlhhlhl      7      0       0      16        0.0%
BITBIGSFRlhhlhl      7      0       0      14        0.0%
BITBIGSFRlhhlhl      7      0       0      13        0.0%
BITBIGSFRllllh       5      0       0      22        0.0%
BITBIGSFRlhhll       4      0       0      18        0.0%
BITBIGSFRllh         4      0       0      20        0.0%
BITBIGSFRlhhlhl      2      0       0      17        0.0%
BITBIGSFRllllll      2      0       0      24        0.0%
BITBIGSFRlhhlhl      1      0       0      15        0.0%
BITBIGSFRlhhlhh      1      0       0      12        0.0%
BITBIGSFRlllllh      1      0       0      23        0.0%
BITBIGSFRlhhh        1      0       0      10        0.0%
BITBIGSFRlllh        1      0       0      21        0.0%
BITBIGSFRlhl         1      0       0      19        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B3      25        0.0%
DATA                 0      0     1B3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Apr 10 12:26:10 2024

                                 _j 0009                                   _n 00F5  
                                 _p 0037                       getTowerName@p 0062  
                        _RSI_Timer0 10A0                                  _p1 00F1  
                   _tower_name_menu 00D6                          _TI_GetTics 0DBE  
                               l111 09A8                                 l104 0968  
                               l490 0FD2                                 l596 0AFE  
                               u400 0BD6                                 u340 0B8E  
                               u360 0BA4                                 u418 0BD8  
                               u380 0BBE                                 u358 0B90  
                               u378 0BA6                                 u398 0BC0  
                  _tower_name_menu0 0034                    _tower_name_menu1 0033  
                  _tower_name_menu2 0032                    ??_CantaPartBaixa 0062  
                    ??_getTowerName 0062                                 prod 0FF3  
                               wreg 0FE8         __end_of_comprovaHiHaColumna 0FD6  
                       _total_temps 004B                                l3110 0540  
                              l3102 0504                                l3120 0562  
                              l3114 0552                                l3210 0368  
                              l3124 0572                                l3220 0390  
                              l3212 036E                                l2502 0B32  
                              l3134 05A4                                l3142 0262  
                              l2504 0B38                                l3072 0476  
                              l3064 0456                                l3224 039A  
                              l3216 037A                                l3090 04DA  
                              l3074 047C                                l3170 02B6  
                              l2508 0B42                                l2700 0AAE  
                              l3068 0468                                l3236 03E6  
                              l3156 028C                                l3252 0410  
                              l2710 0ACC                                l3086 04C8  
                              l3078 048C                                l2640 0988  
                              l2624 0944                                l2712 0AD8  
                              l3096 04EA                                l3184 02E0  
                              l2722 0E96                                l2810 0E7E  
                              l2802 0E5E                                l2492 0B0C  
                              l2484 0AF6                                l2636 0978  
                              l2628 0952                                l2820 0FBA  
                              l3276 0E40                                l2726 0EA0  
                              l2646 09B0                                l2718 0AE8  
                              l2750 09FC                                l2742 09EC  
                              l2910 06DC                                l2902 06C6  
                              l2806 0E6E                                l3198 030A  
                              l2680 0D22                                l2496 0B1C  
                              l2648 09D4                                l2744 09F8  
                              l2824 0FC6                                l2912 06E0  
                              l2498 0B22                                l2842 061A  
                              l2922 0802                         _TI_NewTimer 0E90  
                              l2756 0A2E                                l2908 06DA  
                              l2852 0636                                l2844 061C  
                              l2836 0604                                l2932 0840  
                              l2598 0D84                                l2766 0A4A  
                              l2870 0666                                l2862 064E  
                              l2854 0638                                l2846 0620  
                              l2942 0880                                l2776 0A52  
                              l2856 063C                                l2928 081A  
                              l2698 0AA2                                l2890 06A0  
                              l2882 0688                                l2874 0674  
                              l2866 065A                                l2938 0858  
                              l2876 0676                                l2958 0FDA  
                              l2894 06AE                                l2886 0694  
                              l2896 06B0                                l2986 0716  
                              STR_1 024A                                STR_2 0255  
                              STR_3 023F                                STR_4 0231  
                              u1030 0C60                                u1110 0BF8  
                              u1050 0C76                                u1130 0C0E  
                              u1108 0CAA                                u1070 0C90  
                              u1150 0C28                                u1048 0C62  
                              u1128 0BFA                                u1090 0CA8  
                              u1170 0C40                                u1068 0C78  
                              u1148 0C10                                u1088 0C92  
                              u1168 0C2A                                u1188 0C42  
                              u1750 07C6                                u1670 0814  
                              u1910 03B4                                u1870 033E  
                              u1890 038C                                _TMR0 0FD6  
                              _Tics 0005                                _Rows 0058  
                              _flag 001F                                _main 0E08  
                              _nota 0013                       ??_InitAltaveu 0065  
                              fsr1h 0FE2                                fsr2h 0FDA  
                              indf1 0FE7                                indf2 0FDF  
                              fsr1l 0FE1                                fsr2l 0FD9  
                              _rows 002D                                btemp 007F  
                  __end_of_ADC_Init 10DA                     __end_of_TI_Init 1002  
                              prodl 0FF3                     __end_of_LcClear 1086  
                              start 0012                     __end_of_CantaIR 0FAA  
                     LcInit@columns 0077                        ___param_bank 0000  
                _valor_micro_ADRESH 000B          _arrModifyCurrentTimeMinuts 00E3  
        _arrModifyCurrentTimeSegons 00E1                         Espera@Timer 0076  
                             ?_main 0062                               _EEADR 0FA9  
                     ??_InitconfOsc 0062                               _T0CON 0FD5  
                             _RCREG 0FAE                               _RCSTA 0FAB  
                             _SPBRG 0FAF                               _TXREG 0FAD  
                             _TXSTA 0FAC                               _Timer 0061  
                             _index 00AD                        _TI_ResetTics 1028  
                   __end_of_sioInit 106C                               tablat 0FF5  
                             ttemp5 0080                               ttemp6 0083  
                             ttemp7 0087                               status 0FD8  
                             wtemp8 0080                    __end_of_LcGotoXY 09EA  
           EscriuPrimeraOrdre@ordre 0063                     __initialization 0CBC  
                      __end_of_main 0E4E                 __end_of_InitAltaveu 1028  
                       ?_RSI_Timer0 0062                      TI_Init@counter 0062  
                    _index0_playrec 00E8                         ?_TI_GetTics 0062  
                   _Getflag_TTeclat 10FC               _flag_CurrentTime_menu 003A  
                  _total_gravacions 00EF                              ??_main 007D  
                     ??_MyPutString 0079                       __activetblptr 0002  
                            _ADCON0 0FC2                              _ADCON1 0FC1  
                            _ADCON2 0FC0                 __end_of_InitconfOsc 10FC  
                            _ADRESH 0FC4                              _EEDATA 0FA8  
                            _EECON2 0FA7                           ??_TI_Init 0062  
                         ??_LcClear 0077                           ??_CantaIR 0064  
                    LcGotoXY@Fisics 0074                      LcGotoXY@Column 0076  
                            _OSCCON 0FD3                       ??_WaitForBusy 006E  
                            _TMR0IF 7F92                              _SPBRGH 0FB0  
                            _LcInit 06EE                              _Espera 0D1A  
                      _LcGotoXY$395 0072                __end_of_getTowerName 10E8  
                            _RowAct 0056                     _columna_polsada 002A  
                            _Timers 0080                              _eedata 0051  
                      ?_motorTeclat 0062                              _espera 0028  
                            clear_0 0CFA                              clear_1 0D06  
                            isa$std 0001                    __end_of_setFiles 0E90  
               _tower_name_position 0045                        __pdataCOMRAM 007D  
                  __end_of_motorJoy 0B72                           ?_ADC_Init 0062  
                  _posicio_caracter 0035                        __mediumconst 0000  
                         ??_sioInit 0062                              tblptrh 0FF7  
                            tblptrl 0FF6                              tblptru 0FF8  
               __end_of_MyPutString 0A76                   __end_of_CantaData 0F78  
                  _flag_end_playing 00E7                    _posicio_grabacio 004F  
           _posicio_ensenyar_eeprom 004E                          __accesstop 0080  
           __end_of__initialization 0D0C                   __end_of_LcPutChar 0AF4  
                       _InitAltaveu 1002                       ___rparam_used 0001  
                _flag_startmenu_sio 0020                 _estat_tad_recording 000C  
           __end_of_Getflag_TTeclat 1100                      __pcstackCOMRAM 0062  
               __end_of_WaitForBusy 0DBE                        __pidataBANK1 0886  
              TI_NewTimer@Comptador 0064         __end_of_getCaractersEscrits 1108  
                       _InitconfOsc 10F2                       _estat_altaveu 0012  
                 __end_of_Menu_Init 0F46                          ??_ADC_Init 0062  
                         ?_LcGotoXY 006F               _timer_start_recording 003E  
             __end_of_my_interrupts 0012                        ?_TI_NewTimer 0062  
                 _tiempo_nota_total 000E                          __pbssBANK0 0080  
                           ?_LcInit 0077                       _CantaPartAlta 0C54  
                     _writeCaracter 07C8              TI_NewTimer@TimerHandle 0062  
                           ?_Espera 006E                    _hi_ha_tecla_menu 0048  
           TI_ResetTics@TimerHandle 0062                          _flag_index 00F0  
                       _MyPutString 09EA                        _flag_TTeclat 007D  
                           LcInit@i 0079                      _TimerRecording 0060  
                        ??_LcGotoXY 0070                       _matriu_teclat 0178  
                           _OSCTUNE 0F9B                      _TimerNotaTotal 0011  
                           _TI_Init 0FD6                             _LcClear 106C  
                           _CantaIR 0F78                          _initEEPROM 10E8  
                       _WaitForBusy 0D72                    _TimerCurrentTime 00F7  
                    ?_CantaPartAlta 0062                             _Columns 0057  
                    ?_writeCaracter 0062                   __end_of_getEspera 1104  
                         ?_setFiles 0062                          _index_data 00EC  
                           __Hparam 0000                             __Lparam 0000  
                      _flag_tad_sio 0039                    ?_Getflag_TTeclat 0062  
                           _Timer1S 005C                           ?_motorJoy 0062  
                        _initTeclat 0ECE                        ??_RSI_Timer0 0062  
                    _fase_escombrat 002C                        __psmallconst 0200  
                      ??_TI_GetTics 0066                          _estat_menu 0047  
                        _estat_play 00EA                             __pcinit 0CBC  
                           __ramtop 0200                       _iteracio_char 0036  
                       _TimerMelody 005A                             __ptext0 0E08  
                           __ptext1 104C                             __ptext2 0260  
                           __ptext3 07C8                             __ptext4 10B8  
                           __ptext5 0E4E                             __ptext6 05F4  
                           __ptext7 0FAA                             __ptext8 10FC  
                           __ptext9 0454                         _TimerRebots 005D  
                 __end_of_initMicro 10A0                           CantaIR@IR 0064  
                   _marquesina_text 0100                    _index_gravacions 00F4  
                           _sioInit 104C                        _getTowerName 10DA  
                           _mostres 00DD                     WaitForBusy@Busy 006E  
              end_of_initialization 0D0C                   __end_of_saveTecla 06EE  
                __end_of_RSI_Timer0 10B8                       __Lmediumconst 0000  
                __end_of_TI_GetTics 0E08                   __end_of_motorMenu 05F4  
                _CurrentTimeComplet 004C                          ??_setFiles 0062  
              _gravacio_reprduir_id 00E9                          ??_motorJoy 0062  
                           postdec1 0FE5                             postinc0 0FEE  
                           postinc2 0FDE                   _flag_TTeclat_menu 007E  
            _flag_modifyCurrentTime 004A                           _PORTCbits 0F82  
                        _timer_tics 00CA                           _PORTEbits 0F84  
                    _digit_minuts_0 001B                      _digit_minuts_1 001A  
                    _digit_segons_0 001D                      _digit_segons_1 001C  
                    _waitTeclaTreta 10B8               TI_GetTics@TimerHandle 0062  
         _array_notas@TALTAVEU$F537 0219                           _TRISAbits 0F92  
                         _TRISBbits 0F93                           _TRISCbits 0F94  
                         _TRISEbits 0F96                     ??_CantaPartAlta 0062  
                   ??_writeCaracter 0078                         ?_initEEPROM 0062  
                         _CantaData 0F46                        ?_InitAltaveu 0062  
                   _filamatriu_menu 0049                       _joy_direction 0023  
                    __end_of_LcInit 07C8                          _tower_name 00C6  
                _eeprom_adress_temp 00EE                           _LcPutChar 0A76  
                    __end_of_Espera 0D72                         ?_initTeclat 0062  
        __end_of_EscriuPrimeraOrdre 0BEC                         _BAUDCONbits 0FB8  
                     __pidataCOMRAM 1108                           _ColumnAct 0055  
            __end_of_waitTeclaTreta 10CA                        ?_InitconfOsc 0062  
               start_initialization 0CBC                           _Menu_Init 0F0A  
                     _tecla_premuda 000F              _current_time_recording 00BD  
__end_of_array_notas@TALTAVEU$F1257 0219          _array_notas@TALTAVEU$F1257 020D  
__end_of_array_notas@TALTAVEU$F1459 020D          _array_notas@TALTAVEU$F1459 0201  
                        ?_CantaData 0062                            ??_LcInit 0078  
                          ??_Espera 0070                          ?_LcPutChar 0062  
                   _eeprom_overflow 00EB                         __pdataBANK1 0100  
               _comprovaHiHaColumna 0FAA                     ?_waitTeclaTreta 0062  
                      ?_MyPutString 0078                     _old_fila_matriu 0025  
                       __pbssCOMRAM 0001                 __end_of_array_notas 0231  
            _caracters_escrits_menu 002F                      _current_tics_x 00C2  
                        ?_Menu_Init 0062                       ?_TI_ResetTics 0062  
                    _flag_startmenu 0040                    _fila_matriu_menu 0044  
                          ?_TI_Init 0062                            ?_LcClear 0062  
                          ?_CantaIR 0062                        _estat_eeprom 00F3  
                      setFiles@rows 0062                      _CantaPartBaixa 0BEC  
                    _flag_towername 003F                ?_comprovaHiHaColumna 0062  
                      _estat_teclat 002E                      _flag_putstring 0043  
                      ?_WaitForBusy 0062              _flag_show_current_time 0041  
                      _estat_string 0054               _time_recording_minuts 003C  
             _time_recording_segons 003B                      _time_recording 003D  
                         __pintcode 0008                           _getEspera 1100  
                         _flag_menu 0046                           _dest_port 00D2  
                   CantaPartBaixa@c 0063                      _temps_grabacio 00DF  
               _fila_play_recording 0053                         __smallconst 0200  
                          _ADC_Init 10CA                         _hi_ha_tecla 002B  
                          ?_sioInit 0062                     _TimerMarquesina 005F  
                         _initMicro 1086                      ??_TI_ResetTics 0062  
                _flagAltaveu_teclat 0030                           _estat_joy 0024  
                         _estat_sio 0021                         _fila_matriu 0026  
            __end_of_CantaPartBaixa 0C54               ??_comprovaHiHaColumna 0062  
                       ??_CantaData 0064                            _LATBbits 0F8A  
                          _LATCbits 0F8B                            _LATEbits 0F8D  
                       _eeprom_data 00F2                           _saveTecla 05F4  
                       _eeprom_read 00ED                            _PIR1bits 0F9E  
                       ??_LcPutChar 0077                           _motorMenu 0454  
                        ?_getEspera 0062                       ??_motorTeclat 007A  
                       _array_notas 0225                          _ADCON0bits 0FC2  
                   _TimerTiempoNota 005B                            Espera@ms 006E  
                         _user_name 00DA                            _LcGotoXY 0940  
                        ?_initMicro 0062                         ??_Menu_Init 0065  
                      _minuts0_menu 0016                        _minuts1_menu 0015  
                       LcGotoXY@Row 006F                           copy_data0 0CD0  
                   ?_CantaPartBaixa 0062                       _my_interrupts 0008  
                      ??_initEEPROM 0062                          ?_saveTecla 0062  
                        _EECON1bits 0FA6   __end_of_array_notas@TALTAVEU$F537 0225  
                          __Hrparam 0000                            __Lrparam 0000  
                        ?_motorMenu 0062                  _iterador_towername 0050  
                      ??_initTeclat 0065                       _flag_preemenu 0031  
                      _segons0_menu 0018                        _segons1_menu 0017  
             _joystick_down_counter 0052                    _flag_CurrentTime 0019  
                __end_of_initEEPROM 10F2                 __end_of_motorTeclat 0454  
                          __ptext10 10DA                            __ptext11 1100  
                _EscriuPrimeraOrdre 0B72                            __ptext20 1086  
                          __ptext12 1104                            __ptext21 10E8  
                          __ptext13 09EA                            __ptext30 0BEC  
                          __ptext22 0FD6                            __ptext14 0A76  
                          __ptext31 0C54                            __ptext23 0F0A  
                          __ptext15 0940                            __ptext32 10F2  
                          __ptext24 06EE                            __ptext16 0F46  
                          __ptext33 1002                            __ptext25 0D72  
                          __ptext17 106C                            __ptext34 1028  
                          __ptext26 0D1A                            __ptext18 0AF4  
                          __ptext35 0E90                            __ptext27 0DBE  
                          __ptext19 0ECE                            __ptext36 10CA  
                          __ptext28 0B72                            __ptext29 0F78  
                          __ptext38 10A0                      ?_my_interrupts 0062  
                     ??_TI_NewTimer 0063                      CantaPartAlta@c 0063  
                __end_of_initTeclat 0F0A                            _estat_ct 001E  
               ?_EscriuPrimeraOrdre 0062               __end_of_CantaPartAlta 0CBC  
             __end_of_writeCaracter 0886                       CantaData@Data 0064  
                     _mostres_micro 00E5                            _rec_port 00CE  
                          _setFiles 0E4E                   _caracters_escrits 0027  
                          _motorJoy 0AF4                        _valor_ADRESH 0022  
                          _temps_5s 000D                            _temps_8s 004D  
               _getCaractersEscrits 1104                            _timer_2s 005E  
                          isa$xinst 0000                            _pos_marq 0038  
                       ??_getEspera 0062                __end_of_TI_ResetTics 104C  
                          int$flags 007F                    ??_waitTeclaTreta 0062  
            _flag_putstring_current 0014                   _TimerRecordingADC 0059  
              ??_EscriuPrimeraOrdre 0062                          LcInit@rows 0078  
                     _timer_tics_1s 0001                       _eeprom_adress 00F6  
                        _INTCONbits 0FF2           TI_GetTics@CopiaTicsActual 006A  
                       ??_initMicro 0065                ?_getCaractersEscrits 0062  
                 ??_Getflag_TTeclat 0062                            intlevel2 0000  
                        LcPutChar@c 0077                         ??_saveTecla 0062  
               __end_of_TI_NewTimer 0ECE                         ??_motorMenu 007B  
                  MyPutString@frase 0078                         _motorTeclat 0260  
                   _caracter_actual 0029                  _joystick_direction 0042  
                       _tiempo_nota 0010               ??_getCaractersEscrits 0062  
                     ?_getTowerName 0062                     ??_my_interrupts 0062  
